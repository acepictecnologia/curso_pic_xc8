

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 07 20:37:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _RCREG	set	4014
    94  0000                     _TXREG	set	4013
    95  0000                     _SPBRG	set	4015
    96  0000                     _BAUDCTLbits	set	4024
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _TXSTAbits	set	4012
    99  0000                     _ADRESL	set	4035
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADCON0bits	set	4034
   102  0000                     _INTCONbits	set	4082
   103  0000                     _PIE1bits	set	3997
   104  0000                     _ADCON2	set	4032
   105  0000                     _ADCON1	set	4033
   106  0000                     _ADCON0	set	4034
   107  0000                     _TRISBbits	set	3987
   108  0000                     _PORTBbits	set	3969
   109  0000                     _TRMT	set	32097
   110  0000                     _RCIF	set	31989
   111                           
   112                           	psect	smallconst
   113  000600                     __psmallconst:
   114                           	opt callstack 0
   115  000600  00                 	db	0
   116  000601                     STR_1:
   117  000601  43                 	db	67	;'C'
   118  000602  6F                 	db	111	;'o'
   119  000603  6E                 	db	110	;'n'
   120  000604  76                 	db	118	;'v'
   121  000605  65                 	db	101	;'e'
   122  000606  72                 	db	114	;'r'
   123  000607  73                 	db	115	;'s'
   124  000608  61                 	db	97	;'a'
   125  000609  6F                 	db	111	;'o'
   126  00060A  20                 	db	32
   127  00060B  41                 	db	65	;'A'
   128  00060C  2F                 	db	47
   129  00060D  44                 	db	68	;'D'
   130  00060E  3A                 	db	58	;':'
   131  00060F  20                 	db	32
   132  000610  43                 	db	67	;'C'
   133  000611  61                 	db	97	;'a'
   134  000612  6E                 	db	110	;'n'
   135  000613  61                 	db	97	;'a'
   136  000614  69                 	db	105	;'i'
   137  000615  73                 	db	115	;'s'
   138  000616  20                 	db	32
   139  000617  41                 	db	65	;'A'
   140  000618  4E                 	db	78	;'N'
   141  000619  6F                 	db	111	;'o'
   142  00061A  20                 	db	32
   143  00061B  65                 	db	101	;'e'
   144  00061C  20                 	db	32
   145  00061D  41                 	db	65	;'A'
   146  00061E  4E                 	db	78	;'N'
   147  00061F  31                 	db	49	;'1'
   148  000620  0D                 	db	13
   149  000621  0A                 	db	10
   150  000622  00                 	db	0
   151  000623                     STR_2:
   152  000623  54                 	db	84	;'T'
   153  000624  65                 	db	101	;'e'
   154  000625  6D                 	db	109	;'m'
   155  000626  70                 	db	112	;'p'
   156  000627  3A                 	db	58	;':'
   157  000628  20                 	db	32
   158  000629  25                 	db	37
   159  00062A  30                 	db	48	;'0'
   160  00062B  2E                 	db	46
   161  00062C  31                 	db	49	;'1'
   162  00062D  66                 	db	102	;'f'
   163  00062E  20                 	db	32
   164  00062F  2D                 	db	45
   165  000630  20                 	db	32
   166  000631  56                 	db	86	;'V'
   167  000632  6F                 	db	111	;'o'
   168  000633  6C                 	db	108	;'l'
   169  000634  74                 	db	116	;'t'
   170  000635  3A                 	db	58	;':'
   171  000636  20                 	db	32
   172  000637  25                 	db	37
   173  000638  30                 	db	48	;'0'
   174  000639  34                 	db	52	;'4'
   175  00063A  6C                 	db	108	;'l'
   176  00063B  75                 	db	117	;'u'
   177  00063C  20                 	db	32
   178  00063D  6D                 	db	109	;'m'
   179  00063E  56                 	db	86	;'V'
   180  00063F  0D                 	db	13
   181  000640  0A                 	db	10
   182  000641  00                 	db	0
   183  000642                     STR_3:
   184  000642  49                 	db	73	;'I'
   185  000643  4E                 	db	78	;'N'
   186  000644  46                 	db	70	;'F'
   187  000645  00                 	db	0
   188  000646                     STR_7:
   189  000646  4E                 	db	78	;'N'
   190  000647  41                 	db	65	;'A'
   191  000648  4E                 	db	78	;'N'
   192  000649  00                 	db	0
   193  00064A                     STR_4:
   194  00064A  69                 	db	105	;'i'
   195  00064B  6E                 	db	110	;'n'
   196  00064C  66                 	db	102	;'f'
   197  00064D  00                 	db	0
   198  00064E                     STR_8:
   199  00064E  6E                 	db	110	;'n'
   200  00064F  61                 	db	97	;'a'
   201  000650  6E                 	db	110	;'n'
   202  000651  00                 	db	0
   203  000652                     STR_11:
   204  000652  6C                 	db	108	;'l'
   205  000653  66                 	db	102	;'f'
   206  000654  00                 	db	0
   207  000655                     STR_16:
   208  000655  6C                 	db	108	;'l'
   209  000656  75                 	db	117	;'u'
   210  000657  00                 	db	0
   211  0000                     
   212                           ; #config settings
   213  000658  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           	psect	cinit
   216  003E96                     __pcinit:
   217                           	opt callstack 0
   218  003E96                     start_initialization:
   219                           	opt callstack 0
   220  003E96                     __initialization:
   221                           	opt callstack 0
   222                           
   223                           ; Clear objects allocated to BANK1 (130 bytes)
   224  003E96  EE01  F000         	lfsr	0,__pbssBANK1
   225  003E9A  0E82               	movlw	130
   226  003E9C                     clear_0:
   227  003E9C  6AEE               	clrf	postinc0,c
   228  003E9E  06E8               	decf	wreg,f,c
   229  003EA0  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to BANK0 (26 bytes)
   232  003EA2  EE00  F0E0         	lfsr	0,__pbssBANK0
   233  003EA6  0E1A               	movlw	26
   234  003EA8                     clear_1:
   235  003EA8  6AEE               	clrf	postinc0,c
   236  003EAA  06E8               	decf	wreg,f,c
   237  003EAC  E1FD               	bnz	clear_1
   238                           
   239                           ; Clear objects allocated to COMRAM (5 bytes)
   240  003EAE  6A7A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   241  003EB0  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   242  003EB2  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   243  003EB4  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   244  003EB6  6A76               	clrf	__pbssCOMRAM& (0+255),c
   245  003EB8                     end_of_initialization:
   246                           	opt callstack 0
   247  003EB8                     __end_of__initialization:
   248                           	opt callstack 0
   249  003EB8  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   250  003EBA  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   251  003EBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   252  003EBE  6EF8               	movwf	tblptru,c
   253  003EC0  0100               	movlb	0
   254  003EC2  EF00  F015         	goto	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMRAM
   257  000076                     __pbssCOMRAM:
   258                           	opt callstack 0
   259  000076                     _prec:
   260                           	opt callstack 0
   261  000076                     	ds	2
   262  000078                     _flags:
   263                           	opt callstack 0
   264  000078                     	ds	2
   265  00007A                     _i:
   266                           	opt callstack 0
   267  00007A                     	ds	1
   268                           
   269                           	psect	bssBANK0
   270  0000E0                     __pbssBANK0:
   271                           	opt callstack 0
   272  0000E0                     floorf@F524:
   273                           	opt callstack 0
   274  0000E0                     	ds	4
   275  0000E4                     ___fpclassifyf@F463:
   276                           	opt callstack 0
   277  0000E4                     	ds	4
   278  0000E8                     _dado:
   279                           	opt callstack 0
   280  0000E8                     	ds	4
   281  0000EC                     _temp:
   282                           	opt callstack 0
   283  0000EC                     	ds	4
   284  0000F0                     _volt:
   285                           	opt callstack 0
   286  0000F0                     	ds	4
   287  0000F4                     _nout:
   288                           	opt callstack 0
   289  0000F4                     	ds	2
   290  0000F6                     _width:
   291                           	opt callstack 0
   292  0000F6                     	ds	2
   293  0000F8                     _adc:
   294                           	opt callstack 0
   295  0000F8                     	ds	2
   296                           
   297                           	psect	bssBANK1
   298  000100                     __pbssBANK1:
   299                           	opt callstack 0
   300  000100                     _dbuf:
   301                           	opt callstack 0
   302  000100                     	ds	80
   303  000150                     _bufferUSART:
   304                           	opt callstack 0
   305  000150                     	ds	50
   306                           
   307                           	psect	cstackBANK1
   308  000182                     __pcstackBANK1:
   309                           	opt callstack 0
   310  000182                     	ds	2
   311  000184                     sprintf@ap:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x2
   315  000184                     	ds	2
   316  000186                     sprintf@f:
   317                           	opt callstack 0
   318                           
   319                           ; 6 bytes @ 0x4
   320  000186                     	ds	6
   321                           
   322                           	psect	cstackBANK0
   323  000080                     __pcstackBANK0:
   324                           	opt callstack 0
   325  000080                     efgtoa@ou:
   326                           	opt callstack 0
   327                           
   328                           ; 4 bytes @ 0x0
   329  000080                     	ds	4
   330  000084                     _efgtoa$656:
   331                           	opt callstack 0
   332                           
   333                           ; 2 bytes @ 0x4
   334  000084                     	ds	2
   335  000086                     _efgtoa$657:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x6
   339  000086                     	ds	2
   340  000088                     _efgtoa$662:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x8
   344  000088                     	ds	2
   345  00008A                     _efgtoa$666:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0xA
   349  00008A                     	ds	2
   350  00008C                     _efgtoa$667:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0xC
   354  00008C                     	ds	2
   355  00008E                     _efgtoa$668:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  00008E                     	ds	2
   360  000090                     efgtoa@t:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x10
   364  000090                     	ds	2
   365  000092                     efgtoa@pp:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x12
   369  000092                     	ds	2
   370  000094                     efgtoa@m:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x14
   374  000094                     	ds	2
   375  000096                     efgtoa@ne:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379  000096                     	ds	2
   380  000098                     efgtoa@d:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x18
   384  000098                     	ds	2
   385  00009A                     efgtoa@sign:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x1A
   389  00009A                     	ds	2
   390  00009C                     efgtoa@p:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x1C
   394  00009C                     	ds	2
   395  00009E                     efgtoa@nmode:
   396                           	opt callstack 0
   397                           
   398                           ; 1 bytes @ 0x1E
   399  00009E                     	ds	1
   400  00009F                     efgtoa@w:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x1F
   404  00009F                     	ds	2
   405  0000A1                     efgtoa@mode:
   406                           	opt callstack 0
   407                           
   408                           ; 1 bytes @ 0x21
   409  0000A1                     	ds	1
   410  0000A2                     efgtoa@h:
   411                           	opt callstack 0
   412                           
   413                           ; 4 bytes @ 0x22
   414  0000A2                     	ds	4
   415  0000A6                     efgtoa@l:
   416                           	opt callstack 0
   417                           
   418                           ; 4 bytes @ 0x26
   419  0000A6                     	ds	4
   420  0000AA                     efgtoa@i:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x2A
   424  0000AA                     	ds	2
   425  0000AC                     efgtoa@g:
   426                           	opt callstack 0
   427                           
   428                           ; 4 bytes @ 0x2C
   429  0000AC                     	ds	4
   430  0000B0                     efgtoa@e:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x30
   434  0000B0                     	ds	2
   435  0000B2                     efgtoa@n:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x32
   439  0000B2                     	ds	2
   440  0000B4                     efgtoa@u:
   441                           	opt callstack 0
   442                           
   443                           ; 4 bytes @ 0x34
   444  0000B4                     	ds	4
   445  0000B8                     vfpfcnvrt@done:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x38
   449  0000B8                     	ds	2
   450  0000BA                     _vfpfcnvrt$689:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x3A
   454  0000BA                     	ds	2
   455  0000BC                     _vfpfcnvrt$690:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x3C
   459  0000BC                     	ds	2
   460  0000BE                     _vfpfcnvrt$694:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x3E
   464  0000BE                     	ds	2
   465  0000C0                     vfpfcnvrt@llu:
   466                           	opt callstack 0
   467                           
   468                           ; 8 bytes @ 0x40
   469  0000C0                     	ds	8
   470  0000C8                     vfpfcnvrt@f:
   471                           	opt callstack 0
   472                           
   473                           ; 4 bytes @ 0x48
   474  0000C8                     	ds	4
   475  0000CC                     vfpfcnvrt@ct:
   476                           	opt callstack 0
   477                           
   478                           ; 3 bytes @ 0x4C
   479  0000CC                     	ds	3
   480  0000CF                     vfpfcnvrt@c:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x4F
   484  0000CF                     	ds	1
   485  0000D0                     vfprintf@cfmt:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x50
   489  0000D0                     	ds	2
   490  0000D2                     ?_sprintf:
   491                           	opt callstack 0
   492  0000D2                     sprintf@s:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x52
   496  0000D2                     	ds	2
   497  0000D4                     sprintf@fmt:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x54
   501  0000D4                     	ds	10
   502  0000DE                     ??_main:
   503                           
   504                           ; 1 bytes @ 0x5E
   505  0000DE                     	ds	2
   506                           
   507                           	psect	cstackCOMRAM
   508  000001                     __pcstackCOMRAM:
   509                           	opt callstack 0
   510  000001                     ??_trata_serial:
   511  000001                     
   512                           ; 1 bytes @ 0x0
   513  000001                     	ds	3
   514  000004                     ?_strlen:
   515                           	opt callstack 0
   516  000004                     ?___fpclassifyf:
   517                           	opt callstack 0
   518  000004                     ?_isupper:
   519                           	opt callstack 0
   520  000004                     ?_isdigit:
   521                           	opt callstack 0
   522  000004                     ?_strncmp:
   523                           	opt callstack 0
   524  000004                     ?_isspace:
   525                           	opt callstack 0
   526  000004                     ?___wmul:
   527                           	opt callstack 0
   528  000004                     ?___awdiv:
   529                           	opt callstack 0
   530  000004                     ?___awmod:
   531                           	opt callstack 0
   532  000004                     ?___fladd:
   533                           	opt callstack 0
   534  000004                     ?___lmul:
   535                           	opt callstack 0
   536  000004                     ?___flneg:
   537                           	opt callstack 0
   538  000004                     ?___fltol:
   539                           	opt callstack 0
   540  000004                     ?___xxtofl:
   541                           	opt callstack 0
   542  000004                     ?___lodiv:
   543                           	opt callstack 0
   544  000004                     ?___lomod:
   545                           	opt callstack 0
   546  000004                     escreve_USART@c:
   547                           	opt callstack 0
   548  000004                     ___wmul@multiplier:
   549                           	opt callstack 0
   550  000004                     ___awdiv@dividend:
   551                           	opt callstack 0
   552  000004                     ___awmod@dividend:
   553                           	opt callstack 0
   554  000004                     isdigit@c:
   555                           	opt callstack 0
   556  000004                     isspace@c:
   557                           	opt callstack 0
   558  000004                     isupper@c:
   559                           	opt callstack 0
   560  000004                     fputc@c:
   561                           	opt callstack 0
   562  000004                     strcpy@dest:
   563                           	opt callstack 0
   564  000004                     strlen@s:
   565                           	opt callstack 0
   566  000004                     strncmp@_l:
   567                           	opt callstack 0
   568  000004                     ___lmul@multiplier:
   569                           	opt callstack 0
   570  000004                     ___fleq@ff1:
   571                           	opt callstack 0
   572  000004                     ___flneg@f1:
   573                           	opt callstack 0
   574  000004                     ___fltol@f1:
   575                           	opt callstack 0
   576  000004                     ___fladd@b:
   577                           	opt callstack 0
   578  000004                     ___xxtofl@val:
   579                           	opt callstack 0
   580  000004                     ___fpclassifyf@x:
   581                           	opt callstack 0
   582  000004                     ___lodiv@dividend:
   583                           	opt callstack 0
   584  000004                     ___lomod@dividend:
   585                           	opt callstack 0
   586                           
   587                           ; 8 bytes @ 0x3
   588  000004                     	ds	1
   589  000005                     string_USART@str:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x4
   593  000005                     	ds	1
   594  000006                     ??_isupper:
   595  000006                     ??_isdigit:
   596  000006                     ??_isspace:
   597  000006                     ___wmul@multiplicand:
   598                           	opt callstack 0
   599  000006                     ___awdiv@divisor:
   600                           	opt callstack 0
   601  000006                     ___awmod@divisor:
   602                           	opt callstack 0
   603  000006                     fputc@fp:
   604                           	opt callstack 0
   605  000006                     strcpy@src:
   606                           	opt callstack 0
   607  000006                     strlen@a:
   608                           	opt callstack 0
   609  000006                     strncmp@_r:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x5
   613  000006                     	ds	1
   614  000007                     
   615                           ; 1 bytes @ 0x6
   616  000007                     	ds	1
   617  000008                     ??_fputc:
   618  000008                     ??___fpclassifyf:
   619  000008                     ??_strcpy:
   620  000008                     ??___fltol:
   621  000008                     ??___xxtofl:
   622  000008                     ___awdiv@counter:
   623                           	opt callstack 0
   624  000008                     ___awmod@counter:
   625                           	opt callstack 0
   626  000008                     ___wmul@product:
   627                           	opt callstack 0
   628  000008                     strncmp@n:
   629                           	opt callstack 0
   630  000008                     ___lmul@multiplicand:
   631                           	opt callstack 0
   632  000008                     ___fleq@ff2:
   633                           	opt callstack 0
   634  000008                     ___fladd@a:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x7
   638  000008                     	ds	1
   639  000009                     ___awdiv@sign:
   640                           	opt callstack 0
   641  000009                     ___awmod@sign:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0x8
   645  000009                     	ds	1
   646  00000A                     ??_strncmp:
   647  00000A                     ?_tolower:
   648                           	opt callstack 0
   649  00000A                     _isspace$1202:
   650                           	opt callstack 0
   651  00000A                     ___awdiv@quotient:
   652                           	opt callstack 0
   653  00000A                     strcpy@s:
   654                           	opt callstack 0
   655  00000A                     tolower@c:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x9
   659  00000A                     	ds	1
   660  00000B                     ?_atoi:
   661                           	opt callstack 0
   662  00000B                     atoi@s:
   663                           	opt callstack 0
   664  00000B                     strncmp@l:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0xA
   668  00000B                     	ds	1
   669  00000C                     ??_tolower:
   670  00000C                     ??___fladd:
   671  00000C                     ??___fleq:
   672  00000C                     ___fltol@sign1:
   673                           	opt callstack 0
   674  00000C                     ___xxtofl@sign:
   675                           	opt callstack 0
   676  00000C                     ___fpclassifyf@e:
   677                           	opt callstack 0
   678  00000C                     strcpy@d:
   679                           	opt callstack 0
   680  00000C                     ___lmul@product:
   681                           	opt callstack 0
   682  00000C                     ___lodiv@divisor:
   683                           	opt callstack 0
   684  00000C                     ___lomod@divisor:
   685                           	opt callstack 0
   686                           
   687                           ; 8 bytes @ 0xB
   688  00000C                     	ds	1
   689  00000D                     ??_atoi:
   690  00000D                     ___fltol@exp1:
   691                           	opt callstack 0
   692  00000D                     ___xxtofl@exp:
   693                           	opt callstack 0
   694  00000D                     fputs@s:
   695                           	opt callstack 0
   696  00000D                     strncmp@r:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0xC
   700  00000D                     	ds	1
   701  00000E                     ___xxtofl@arg:
   702                           	opt callstack 0
   703  00000E                     ___fpclassifyf@u:
   704                           	opt callstack 0
   705                           
   706                           ; 4 bytes @ 0xD
   707  00000E                     	ds	1
   708  00000F                     fputs@fp:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0xE
   712  00000F                     	ds	1
   713  000010                     ?___aldiv:
   714                           	opt callstack 0
   715  000010                     ___fladd@signs:
   716                           	opt callstack 0
   717  000010                     _tolower$1287:
   718                           	opt callstack 0
   719  000010                     ___aldiv@dividend:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0xF
   723  000010                     	ds	1
   724  000011                     ___fladd@aexp:
   725                           	opt callstack 0
   726  000011                     fputs@c:
   727                           	opt callstack 0
   728  000011                     atoi@neg:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x10
   732  000011                     	ds	1
   733  000012                     ?___flmul:
   734                           	opt callstack 0
   735  000012                     ___fladd@bexp:
   736                           	opt callstack 0
   737  000012                     fputs@i:
   738                           	opt callstack 0
   739  000012                     ___flmul@b:
   740                           	opt callstack 0
   741                           
   742                           ; 4 bytes @ 0x11
   743  000012                     	ds	1
   744  000013                     ___fladd@grs:
   745                           	opt callstack 0
   746  000013                     _atoi$1171:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x12
   750  000013                     	ds	1
   751  000014                     ?_pad:
   752                           	opt callstack 0
   753  000014                     ___lomod@counter:
   754                           	opt callstack 0
   755  000014                     pad@fp:
   756                           	opt callstack 0
   757  000014                     ___aldiv@divisor:
   758                           	opt callstack 0
   759  000014                     ___lodiv@quotient:
   760                           	opt callstack 0
   761                           
   762                           ; 8 bytes @ 0x13
   763  000014                     	ds	1
   764  000015                     _atoi$1173:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x14
   768  000015                     	ds	1
   769  000016                     pad@buf:
   770                           	opt callstack 0
   771  000016                     ___flmul@a:
   772                           	opt callstack 0
   773                           
   774                           ; 4 bytes @ 0x15
   775  000016                     	ds	1
   776  000017                     _atoi$1172:
   777                           	opt callstack 0
   778                           
   779                           ; 1 bytes @ 0x16
   780  000017                     	ds	1
   781  000018                     ___aldiv@counter:
   782                           	opt callstack 0
   783  000018                     pad@p:
   784                           	opt callstack 0
   785  000018                     atoi@n:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x17
   789  000018                     	ds	1
   790  000019                     ___aldiv@sign:
   791                           	opt callstack 0
   792                           
   793                           ; 1 bytes @ 0x18
   794  000019                     	ds	1
   795  00001A                     ??___flmul:
   796  00001A                     ??_pad:
   797  00001A                     ___aldiv@quotient:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x19
   801  00001A                     	ds	1
   802  00001B                     pad@i:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x1A
   806  00001B                     	ds	1
   807  00001C                     ___lodiv@counter:
   808                           	opt callstack 0
   809                           
   810                           ; 1 bytes @ 0x1B
   811  00001C                     	ds	1
   812  00001D                     pad@w:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x1C
   816  00001D                     	ds	1
   817  00001E                     ___flmul@sign:
   818                           	opt callstack 0
   819                           
   820                           ; 1 bytes @ 0x1D
   821  00001E                     	ds	1
   822  00001F                     ?_utoa:
   823                           	opt callstack 0
   824  00001F                     ___flmul@aexp:
   825                           	opt callstack 0
   826  00001F                     utoa@fp:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x1E
   830  00001F                     	ds	1
   831  000020                     ___flmul@grs:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x1F
   835  000020                     	ds	1
   836  000021                     utoa@d:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x20
   840  000021                     	ds	3
   841  000024                     ___flmul@bexp:
   842                           	opt callstack 0
   843                           
   844                           ; 1 bytes @ 0x23
   845  000024                     	ds	1
   846  000025                     ___flmul@prod:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x24
   850  000025                     	ds	4
   851  000029                     ??_utoa:
   852  000029                     ___flmul@temp:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x28
   856  000029                     	ds	2
   857  00002B                     ?___fldiv:
   858                           	opt callstack 0
   859  00002B                     ?___flsub:
   860                           	opt callstack 0
   861  00002B                     ___flge@ff1:
   862                           	opt callstack 0
   863  00002B                     ___flsub@b:
   864                           	opt callstack 0
   865  00002B                     ___fldiv@b:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x2A
   869  00002B                     	ds	4
   870  00002F                     ___flge@ff2:
   871                           	opt callstack 0
   872  00002F                     ___flsub@a:
   873                           	opt callstack 0
   874  00002F                     ___fldiv@a:
   875                           	opt callstack 0
   876                           
   877                           ; 4 bytes @ 0x2E
   878  00002F                     	ds	2
   879  000031                     utoa@p:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x30
   883  000031                     	ds	2
   884  000033                     ??___fldiv:
   885  000033                     ??___flge:
   886  000033                     utoa@w:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x32
   890  000033                     	ds	2
   891  000035                     utoa@n:
   892                           	opt callstack 0
   893                           
   894                           ; 8 bytes @ 0x34
   895  000035                     	ds	2
   896  000037                     ___fldiv@rem:
   897                           	opt callstack 0
   898                           
   899                           ; 4 bytes @ 0x36
   900  000037                     	ds	4
   901  00003B                     ___fldiv@sign:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0x3A
   905  00003B                     	ds	1
   906  00003C                     ___fldiv@new_exp:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x3B
   910  00003C                     	ds	1
   911  00003D                     utoa@i:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x3C
   915  00003D                     	ds	1
   916  00003E                     ___fldiv@grs:
   917                           	opt callstack 0
   918                           
   919                           ; 4 bytes @ 0x3D
   920  00003E                     	ds	4
   921  000042                     ___fldiv@bexp:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x41
   925  000042                     	ds	1
   926  000043                     ___fldiv@aexp:
   927                           	opt callstack 0
   928                           
   929                           ; 1 bytes @ 0x42
   930  000043                     	ds	1
   931  000044                     ?_floorf:
   932                           	opt callstack 0
   933  000044                     floorf@x:
   934                           	opt callstack 0
   935                           
   936                           ; 4 bytes @ 0x43
   937  000044                     	ds	4
   938  000048                     ??_floorf:
   939                           
   940                           ; 1 bytes @ 0x47
   941  000048                     	ds	6
   942  00004E                     floorf@m:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x4D
   946  00004E                     	ds	4
   947  000052                     floorf@e:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x51
   951  000052                     	ds	2
   952  000054                     floorf@u:
   953                           	opt callstack 0
   954                           
   955                           ; 4 bytes @ 0x53
   956  000054                     	ds	4
   957  000058                     ?_efgtoa:
   958                           	opt callstack 0
   959  000058                     efgtoa@fp:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x57
   963  000058                     	ds	2
   964  00005A                     efgtoa@f:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x59
   968  00005A                     	ds	4
   969  00005E                     efgtoa@c:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x5D
   973  00005E                     	ds	1
   974  00005F                     ??_efgtoa:
   975                           
   976                           ; 1 bytes @ 0x5E
   977  00005F                     	ds	5
   978  000064                     ?_vfpfcnvrt:
   979                           	opt callstack 0
   980  000064                     vfpfcnvrt@fp:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x63
   984  000064                     	ds	2
   985  000066                     vfpfcnvrt@fmt:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x65
   989  000066                     	ds	2
   990  000068                     vfpfcnvrt@ap:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0x67
   994  000068                     	ds	2
   995  00006A                     ??_vfpfcnvrt:
   996                           
   997                           ; 1 bytes @ 0x69
   998  00006A                     	ds	6
   999  000070                     ?_vfprintf:
  1000                           	opt callstack 0
  1001  000070                     vfprintf@fp:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x6F
  1005  000070                     	ds	2
  1006  000072                     vfprintf@fmt:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x71
  1010  000072                     	ds	2
  1011  000074                     vfprintf@ap:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x73
  1015  000074                     	ds	2
  1016  000076                     
  1017                           ; 1 bytes @ 0x75
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 46 in file "EX25.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1037 ;;      Params:         0       0       0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0
  1039 ;;      Temps:          0       2       0       0       0       0       0
  1040 ;;      Totals:         0       2       0       0       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels required when called:   10
  1043 ;; This function calls:
  1044 ;;		___aldiv
  1045 ;;		___fldiv
  1046 ;;		___flmul
  1047 ;;		___lmul
  1048 ;;		___xxtofl
  1049 ;;		_init_USART
  1050 ;;		_sprintf
  1051 ;;		_string_USART
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text0
  1058  002A00                     __ptext0:
  1059                           	opt callstack 0
  1060  002A00                     _main:
  1061                           	opt callstack 21
  1062  002A00                     
  1063                           ;EX25.c: 48:     TRISBbits.TRISB0 = 0;
  1064  002A00  9093               	bcf	147,0,c	;volatile
  1065                           
  1066                           ;EX25.c: 49:     PORTBbits.RB0 = 0;
  1067  002A02  9081               	bcf	129,0,c	;volatile
  1068  002A04                     
  1069                           ;EX25.c: 51:     ADCON0 = 0b00000001;
  1070  002A04  0E01               	movlw	1
  1071  002A06  6EC2               	movwf	194,c	;volatile
  1072                           
  1073                           ;EX25.c: 56:     ADCON1 = 0b00001101;
  1074  002A08  0E0D               	movlw	13
  1075  002A0A  6EC1               	movwf	193,c	;volatile
  1076                           
  1077                           ;EX25.c: 61:     ADCON2 = 0b10000111;
  1078  002A0C  0E87               	movlw	135
  1079  002A0E  6EC0               	movwf	192,c	;volatile
  1080  002A10                     
  1081                           ;EX25.c: 67:     PIE1bits.RCIE = 1;
  1082  002A10  8A9D               	bsf	157,5,c	;volatile
  1083  002A12                     
  1084                           ;EX25.c: 68:     INTCONbits.GIE = 1;
  1085  002A12  8EF2               	bsf	242,7,c	;volatile
  1086  002A14                     
  1087                           ;EX25.c: 69:     INTCONbits.PEIE = 1;
  1088  002A14  8CF2               	bsf	242,6,c	;volatile
  1089  002A16                     
  1090                           ;EX25.c: 71:     init_USART();
  1091  002A16  EC81  F01F         	call	_init_USART	;wreg free
  1092  002A1A                     
  1093                           ;EX25.c: 73:     string_USART("Conversao A/D: Canais ANo e AN1\r\n");
  1094  002A1A  0E01               	movlw	low STR_1
  1095  002A1C  6E05               	movwf	string_USART@str^0,c
  1096  002A1E  0E06               	movlw	high STR_1
  1097  002A20  6E06               	movwf	(string_USART@str+1)^0,c
  1098  002A22  ECE5  F01D         	call	_string_USART	;wreg free
  1099  002A26                     l5859:
  1100                           
  1101                           ;EX25.c: 76:     {;EX25.c: 77:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1102  002A26  0E0B               	movlw	11
  1103  002A28  0100               	movlb	0	; () banked
  1104  002A2A  6FDF               	movwf	(??_main+1)& (0+255),b
  1105  002A2C  0E26               	movlw	38
  1106  002A2E  6FDE               	movwf	??_main& (0+255),b
  1107  002A30  0E5D               	movlw	93
  1108  002A32                     u8227:
  1109  002A32  2EE8               	decfsz	wreg,f,c
  1110  002A34  D7FE               	bra	u8227
  1111  002A36  2FDE               	decfsz	??_main& (0+255),f,b
  1112  002A38  D7FC               	bra	u8227
  1113  002A3A  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1114  002A3C  D7FA               	bra	u8227
  1115  002A3E  D000               	nop2	
  1116  002A40                     
  1117                           ;EX25.c: 79:         ADCON0bits.CHS0 = 0;
  1118  002A40  94C2               	bcf	194,2,c	;volatile
  1119  002A42                     
  1120                           ;EX25.c: 81:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1121  002A42  0E42               	movlw	66
  1122  002A44                     u8237:
  1123  002A44  2EE8               	decfsz	wreg,f,c
  1124  002A46  D7FE               	bra	u8237
  1125  002A48  D000               	nop2	
  1126  002A4A                     
  1127                           ;EX25.c: 83:         ADCON0bits.GO = 1;
  1128  002A4A  82C2               	bsf	194,1,c	;volatile
  1129  002A4C                     l60:
  1130  002A4C  B2C2               	btfsc	194,1,c	;volatile
  1131  002A4E  EF2B  F015         	goto	u8201
  1132  002A52  EF2D  F015         	goto	u8200
  1133  002A56                     u8201:
  1134  002A56  EF26  F015         	goto	l60
  1135  002A5A                     u8200:
  1136  002A5A                     
  1137                           ;EX25.c: 87:         adc = ADRESH;
  1138  002A5A  CFC4 F0F8          	movff	4036,_adc	;volatile
  1139  002A5E  0100               	movlb	0	; () banked
  1140  002A60  6BF9               	clrf	(_adc+1)& (0+255),b
  1141  002A62                     
  1142                           ; BSR set to: 0
  1143                           ;EX25.c: 89:         adc = (adc << 8) + ADRESL;
  1144  002A62  51F8               	movf	_adc& (0+255),w,b
  1145  002A64  6FDF               	movwf	(??_main+1)& (0+255),b
  1146  002A66  6BDE               	clrf	??_main& (0+255),b
  1147  002A68  50C3               	movf	195,w,c	;volatile
  1148  002A6A  25DE               	addwf	??_main& (0+255),w,b
  1149  002A6C  6FF8               	movwf	_adc& (0+255),b
  1150  002A6E  0E00               	movlw	0
  1151  002A70  21DF               	addwfc	(??_main+1)& (0+255),w,b
  1152  002A72  6FF9               	movwf	(_adc+1)& (0+255),b
  1153  002A74                     
  1154                           ; BSR set to: 0
  1155                           ;EX25.c: 92:         temp = ((float)adc * 5000) / 1023;
  1156  002A74  0E00               	movlw	0
  1157  002A76  6E16               	movwf	___flmul@a^0,c
  1158  002A78  0E40               	movlw	64
  1159  002A7A  6E17               	movwf	(___flmul@a+1)^0,c
  1160  002A7C  0E9C               	movlw	156
  1161  002A7E  6E18               	movwf	(___flmul@a+2)^0,c
  1162  002A80  0E45               	movlw	69
  1163  002A82  6E19               	movwf	(___flmul@a+3)^0,c
  1164  002A84  C0F8  F004         	movff	_adc,___xxtofl@val
  1165  002A88  C0F9  F005         	movff	_adc+1,___xxtofl@val+1
  1166  002A8C  0E00               	movlw	0
  1167  002A8E  BE05               	btfsc	(___xxtofl@val+1)^0,7,c
  1168  002A90  0EFF               	movlw	-1
  1169  002A92  6E06               	movwf	(___xxtofl@val+2)^0,c
  1170  002A94  6E07               	movwf	(___xxtofl@val+3)^0,c
  1171  002A96  0E01               	movlw	1
  1172  002A98  ECF8  F015         	call	___xxtofl
  1173  002A9C  C004  F012         	movff	?___xxtofl,___flmul@b
  1174  002AA0  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1175  002AA4  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1176  002AA8  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1177  002AAC  EC15  F00F         	call	___flmul	;wreg free
  1178  002AB0  C012  F02B         	movff	?___flmul,___fldiv@b
  1179  002AB4  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
  1180  002AB8  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
  1181  002ABC  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
  1182  002AC0  0E00               	movlw	0
  1183  002AC2  6E2F               	movwf	___fldiv@a^0,c
  1184  002AC4  0EC0               	movlw	192
  1185  002AC6  6E30               	movwf	(___fldiv@a+1)^0,c
  1186  002AC8  0E7F               	movlw	127
  1187  002ACA  6E31               	movwf	(___fldiv@a+2)^0,c
  1188  002ACC  0E44               	movlw	68
  1189  002ACE  6E32               	movwf	(___fldiv@a+3)^0,c
  1190  002AD0  EC2A  F011         	call	___fldiv	;wreg free
  1191  002AD4  C02B  F0EC         	movff	?___fldiv,_temp
  1192  002AD8  C02C  F0ED         	movff	?___fldiv+1,_temp+1
  1193  002ADC  C02D  F0EE         	movff	?___fldiv+2,_temp+2
  1194  002AE0  C02E  F0EF         	movff	?___fldiv+3,_temp+3
  1195  002AE4                     
  1196                           ;EX25.c: 93:         temp = temp / 10;
  1197  002AE4  C0EC  F02B         	movff	_temp,___fldiv@b
  1198  002AE8  C0ED  F02C         	movff	_temp+1,___fldiv@b+1
  1199  002AEC  C0EE  F02D         	movff	_temp+2,___fldiv@b+2
  1200  002AF0  C0EF  F02E         	movff	_temp+3,___fldiv@b+3
  1201  002AF4  0E00               	movlw	0
  1202  002AF6  6E2F               	movwf	___fldiv@a^0,c
  1203  002AF8  0E00               	movlw	0
  1204  002AFA  6E30               	movwf	(___fldiv@a+1)^0,c
  1205  002AFC  0E20               	movlw	32
  1206  002AFE  6E31               	movwf	(___fldiv@a+2)^0,c
  1207  002B00  0E41               	movlw	65
  1208  002B02  6E32               	movwf	(___fldiv@a+3)^0,c
  1209  002B04  EC2A  F011         	call	___fldiv	;wreg free
  1210  002B08  C02B  F0EC         	movff	?___fldiv,_temp
  1211  002B0C  C02C  F0ED         	movff	?___fldiv+1,_temp+1
  1212  002B10  C02D  F0EE         	movff	?___fldiv+2,_temp+2
  1213  002B14  C02E  F0EF         	movff	?___fldiv+3,_temp+3
  1214  002B18                     
  1215                           ;EX25.c: 95:         ADCON0bits.CHS0 = 1;
  1216  002B18  84C2               	bsf	194,2,c	;volatile
  1217  002B1A                     
  1218                           ;EX25.c: 97:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1219  002B1A  0E42               	movlw	66
  1220  002B1C                     u8247:
  1221  002B1C  2EE8               	decfsz	wreg,f,c
  1222  002B1E  D7FE               	bra	u8247
  1223  002B20  D000               	nop2	
  1224  002B22                     
  1225                           ;EX25.c: 99:         ADCON0bits.GO = 1;
  1226  002B22  82C2               	bsf	194,1,c	;volatile
  1227  002B24                     l63:
  1228  002B24  B2C2               	btfsc	194,1,c	;volatile
  1229  002B26  EF97  F015         	goto	u8211
  1230  002B2A  EF99  F015         	goto	u8210
  1231  002B2E                     u8211:
  1232  002B2E  EF92  F015         	goto	l63
  1233  002B32                     u8210:
  1234  002B32                     
  1235                           ;EX25.c: 103:         adc = ADRESH;
  1236  002B32  CFC4 F0F8          	movff	4036,_adc	;volatile
  1237  002B36  0100               	movlb	0	; () banked
  1238  002B38  6BF9               	clrf	(_adc+1)& (0+255),b
  1239  002B3A                     
  1240                           ; BSR set to: 0
  1241                           ;EX25.c: 105:         adc = (adc << 8) + ADRESL;
  1242  002B3A  51F8               	movf	_adc& (0+255),w,b
  1243  002B3C  6FDF               	movwf	(??_main+1)& (0+255),b
  1244  002B3E  6BDE               	clrf	??_main& (0+255),b
  1245  002B40  50C3               	movf	195,w,c	;volatile
  1246  002B42  25DE               	addwf	??_main& (0+255),w,b
  1247  002B44  6FF8               	movwf	_adc& (0+255),b
  1248  002B46  0E00               	movlw	0
  1249  002B48  21DF               	addwfc	(??_main+1)& (0+255),w,b
  1250  002B4A  6FF9               	movwf	(_adc+1)& (0+255),b
  1251  002B4C                     
  1252                           ; BSR set to: 0
  1253                           ;EX25.c: 108:         volt = ((long)adc * 5000) / 1023;
  1254  002B4C  C0F8  F004         	movff	_adc,___lmul@multiplier
  1255  002B50  C0F9  F005         	movff	_adc+1,___lmul@multiplier+1
  1256  002B54  0E00               	movlw	0
  1257  002B56  BE05               	btfsc	(___lmul@multiplier+1)^0,7,c
  1258  002B58  0EFF               	movlw	-1
  1259  002B5A  6E06               	movwf	(___lmul@multiplier+2)^0,c
  1260  002B5C  6E07               	movwf	(___lmul@multiplier+3)^0,c
  1261  002B5E  0E88               	movlw	136
  1262  002B60  6E08               	movwf	___lmul@multiplicand^0,c
  1263  002B62  0E13               	movlw	19
  1264  002B64  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  1265  002B66  0E00               	movlw	0
  1266  002B68  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  1267  002B6A  0E00               	movlw	0
  1268  002B6C  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  1269  002B6E  EC4F  F01D         	call	___lmul	;wreg free
  1270  002B72  C004  F010         	movff	?___lmul,___aldiv@dividend
  1271  002B76  C005  F011         	movff	?___lmul+1,___aldiv@dividend+1
  1272  002B7A  C006  F012         	movff	?___lmul+2,___aldiv@dividend+2
  1273  002B7E  C007  F013         	movff	?___lmul+3,___aldiv@dividend+3
  1274  002B82  0EFF               	movlw	255
  1275  002B84  6E14               	movwf	___aldiv@divisor^0,c
  1276  002B86  0E03               	movlw	3
  1277  002B88  6E15               	movwf	(___aldiv@divisor+1)^0,c
  1278  002B8A  0E00               	movlw	0
  1279  002B8C  6E16               	movwf	(___aldiv@divisor+2)^0,c
  1280  002B8E  0E00               	movlw	0
  1281  002B90  6E17               	movwf	(___aldiv@divisor+3)^0,c
  1282  002B92  EC27  F018         	call	___aldiv	;wreg free
  1283  002B96  C010  F0F0         	movff	?___aldiv,_volt
  1284  002B9A  C011  F0F1         	movff	?___aldiv+1,_volt+1
  1285  002B9E  C012  F0F2         	movff	?___aldiv+2,_volt+2
  1286  002BA2  C013  F0F3         	movff	?___aldiv+3,_volt+3
  1287  002BA6                     
  1288                           ;EX25.c: 112:         sprintf(bufferUSART, "Temp: %0.1f - Volt: %04lu mV\r\n", temp, vol
      +                          t);
  1289  002BA6  0E50               	movlw	low _bufferUSART
  1290  002BA8  0100               	movlb	0	; () banked
  1291  002BAA  6FD2               	movwf	sprintf@s& (0+255),b
  1292  002BAC  0E01               	movlw	high _bufferUSART
  1293  002BAE  6FD3               	movwf	(sprintf@s+1)& (0+255),b
  1294  002BB0  0E23               	movlw	low STR_2
  1295  002BB2  6FD4               	movwf	sprintf@fmt& (0+255),b
  1296  002BB4  0E06               	movlw	high STR_2
  1297  002BB6  6FD5               	movwf	(sprintf@fmt+1)& (0+255),b
  1298  002BB8  C0EC  F0D6         	movff	_temp,?_sprintf+4
  1299  002BBC  C0ED  F0D7         	movff	_temp+1,?_sprintf+5
  1300  002BC0  C0EE  F0D8         	movff	_temp+2,?_sprintf+6
  1301  002BC4  C0EF  F0D9         	movff	_temp+3,?_sprintf+7
  1302  002BC8  C0F0  F0DA         	movff	_volt,?_sprintf+8
  1303  002BCC  C0F1  F0DB         	movff	_volt+1,?_sprintf+9
  1304  002BD0  C0F2  F0DC         	movff	_volt+2,?_sprintf+10
  1305  002BD4  C0F3  F0DD         	movff	_volt+3,?_sprintf+11
  1306  002BD8  EC42  F01E         	call	_sprintf	;wreg free
  1307  002BDC                     
  1308                           ;EX25.c: 115:         string_USART(bufferUSART);
  1309  002BDC  0E50               	movlw	low _bufferUSART
  1310  002BDE  6E05               	movwf	string_USART@str^0,c
  1311  002BE0  0E01               	movlw	high _bufferUSART
  1312  002BE2  6E06               	movwf	(string_USART@str+1)^0,c
  1313  002BE4  ECE5  F01D         	call	_string_USART	;wreg free
  1314  002BE8  EF13  F015         	goto	l5859
  1315  002BEC  EF07  F000         	goto	start
  1316  002BF0                     __end_of_main:
  1317                           	opt callstack 0
  1318                           
  1319 ;; *************** function _string_USART *****************
  1320 ;; Defined at:
  1321 ;;		line 22 in file "../Bibliotecas/usart.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  str             2    4[COMRAM] PTR unsigned char 
  1324 ;;		 -> bufferUSART(50), STR_1(34), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         2       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0
  1339 ;;      Totals:         2       0       0       0       0       0       0
  1340 ;;Total ram usage:        2 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    3
  1343 ;; This function calls:
  1344 ;;		_escreve_USART
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text1
  1351  003BCA                     __ptext1:
  1352                           	opt callstack 0
  1353  003BCA                     _string_USART:
  1354                           	opt callstack 27
  1355  003BCA                     
  1356                           ;../Bibliotecas/usart.c: 22: void string_USART(char *str);../Bibliotecas/usart.c: 23: {;
      +                          ../Bibliotecas/usart.c: 24:   while(*str != '\0')
  1357  003BCA  EFFB  F01D         	goto	l4181
  1358  003BCE                     l4177:
  1359                           
  1360                           ;../Bibliotecas/usart.c: 25:   {;../Bibliotecas/usart.c: 26:       escreve_USART(*str);
  1361  003BCE  C005  FFF6         	movff	string_USART@str,tblptrl
  1362  003BD2  C006  FFF7         	movff	string_USART@str+1,tblptrh
  1363  003BD6  6AF8               	clrf	tblptru,c
  1364  003BD8  0E05               	movlw	(high __ramtop+-1)
  1365  003BDA  64F7               	cpfsgt	tblptrh,c
  1366  003BDC  D003               	bra	u5387
  1367  003BDE  0008               	tblrd		*
  1368  003BE0  50F5               	movf	tablat,w,c
  1369  003BE2  D005               	bra	u5380
  1370  003BE4                     u5387:
  1371  003BE4  CFF6 FFE1          	movff	tblptrl,fsr1l
  1372  003BE8  CFF7 FFE2          	movff	tblptrh,fsr1h
  1373  003BEC  50E7               	movf	indf1,w,c
  1374  003BEE                     u5380:
  1375  003BEE  EC76  F01F         	call	_escreve_USART
  1376  003BF2                     
  1377                           ;../Bibliotecas/usart.c: 27:       str++;
  1378  003BF2  4A05               	infsnz	string_USART@str^0,f,c
  1379  003BF4  2A06               	incf	(string_USART@str+1)^0,f,c
  1380  003BF6                     l4181:
  1381                           
  1382                           ;../Bibliotecas/usart.c: 24:   while(*str != '\0')
  1383  003BF6  C005  FFF6         	movff	string_USART@str,tblptrl
  1384  003BFA  C006  FFF7         	movff	string_USART@str+1,tblptrh
  1385  003BFE  6AF8               	clrf	tblptru,c
  1386  003C00  0E05               	movlw	(high __ramtop+-1)
  1387  003C02  64F7               	cpfsgt	tblptrh,c
  1388  003C04  D003               	bra	u5397
  1389  003C06  0008               	tblrd		*
  1390  003C08  50F5               	movf	tablat,w,c
  1391  003C0A  D005               	bra	u5390
  1392  003C0C                     u5397:
  1393  003C0C  CFF6 FFE1          	movff	tblptrl,fsr1l
  1394  003C10  CFF7 FFE2          	movff	tblptrh,fsr1h
  1395  003C14  50E7               	movf	indf1,w,c
  1396  003C16                     u5390:
  1397  003C16  0900               	iorlw	0
  1398  003C18  A4D8               	btfss	status,2,c
  1399  003C1A  EF11  F01E         	goto	u5401
  1400  003C1E  EF13  F01E         	goto	u5400
  1401  003C22                     u5401:
  1402  003C22  EFE7  F01D         	goto	l4177
  1403  003C26                     u5400:
  1404  003C26  0012               	return		;funcret
  1405  003C28                     __end_of_string_USART:
  1406                           	opt callstack 0
  1407                           
  1408 ;; *************** function _escreve_USART *****************
  1409 ;; Defined at:
  1410 ;;		line 16 in file "../Bibliotecas/usart.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  c               1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  c               1    3[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1424 ;;      Params:         0       0       0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    2
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_string_USART
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text2
  1439  003EEC                     __ptext2:
  1440                           	opt callstack 0
  1441  003EEC                     _escreve_USART:
  1442                           	opt callstack 27
  1443                           
  1444                           ;incstack = 0
  1445                           ;escreve_USART@c stored from wreg
  1446  003EEC  6E04               	movwf	escreve_USART@c^0,c
  1447  003EEE                     l90:
  1448  003EEE  A2AC               	btfss	4012,1,c	;volatile
  1449  003EF0  EF7C  F01F         	goto	u5351
  1450  003EF4  EF7E  F01F         	goto	u5350
  1451  003EF8                     u5351:
  1452  003EF8  EF77  F01F         	goto	l90
  1453  003EFC                     u5350:
  1454  003EFC                     
  1455                           ;../Bibliotecas/usart.c: 19:    TXREG = c;
  1456  003EFC  C004  FFAD         	movff	escreve_USART@c,4013	;volatile
  1457  003F00  0012               	return		;funcret
  1458  003F02                     __end_of_escreve_USART:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _sprintf *****************
  1462 ;; Defined at:
  1463 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  s               2   82[BANK0 ] PTR unsigned char 
  1466 ;;		 -> bufferUSART(50), 
  1467 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  1468 ;;		 -> STR_2(31), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  f               6    4[BANK1 ] struct _IO_FILE
  1471 ;;  ap              2    2[BANK1 ] PTR void [1]
  1472 ;;		 -> ?_sprintf(2), 
  1473 ;;  ret             2    0        int 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  2   82[BANK0 ] int 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1483 ;;      Params:         0      12       0       0       0       0       0
  1484 ;;      Locals:         0       0      10       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0
  1486 ;;      Totals:         0      12      10       0       0       0       0
  1487 ;;Total ram usage:       22 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    9
  1490 ;; This function calls:
  1491 ;;		_vfprintf
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text3
  1498  003C84                     __ptext3:
  1499                           	opt callstack 0
  1500  003C84                     _sprintf:
  1501                           	opt callstack 21
  1502  003C84  0ED6               	movlw	low (?_sprintf+4)
  1503  003C86  0101               	movlb	1	; () banked
  1504  003C88  6F84               	movwf	sprintf@ap& (0+255),b
  1505  003C8A  0E00               	movlw	high (?_sprintf+4)
  1506  003C8C  6F85               	movwf	(sprintf@ap+1)& (0+255),b
  1507  003C8E  C0D2  F186         	movff	sprintf@s,sprintf@f
  1508  003C92  C0D3  F187         	movff	sprintf@s+1,sprintf@f+1
  1509  003C96                     
  1510                           ; BSR set to: 1
  1511  003C96  0E00               	movlw	0
  1512  003C98  6F89               	movwf	(sprintf@f+3)& (0+255),b
  1513  003C9A  0E00               	movlw	0
  1514  003C9C  6F88               	movwf	(sprintf@f+2)& (0+255),b
  1515  003C9E                     
  1516                           ; BSR set to: 1
  1517  003C9E  0E00               	movlw	0
  1518  003CA0  6F8B               	movwf	(sprintf@f+5)& (0+255),b
  1519  003CA2  0E00               	movlw	0
  1520  003CA4  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  1521  003CA6                     
  1522                           ; BSR set to: 1
  1523  003CA6  0E86               	movlw	low sprintf@f
  1524  003CA8  6E70               	movwf	vfprintf@fp^0,c
  1525  003CAA  0E01               	movlw	high sprintf@f
  1526  003CAC  6E71               	movwf	(vfprintf@fp+1)^0,c
  1527  003CAE  C0D4  F072         	movff	sprintf@fmt,vfprintf@fmt
  1528  003CB2  C0D5  F073         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1529  003CB6  0E84               	movlw	low sprintf@ap
  1530  003CB8  6E74               	movwf	vfprintf@ap^0,c
  1531  003CBA  0E01               	movlw	high sprintf@ap
  1532  003CBC  6E75               	movwf	(vfprintf@ap+1)^0,c
  1533  003CBE  EC84  F01D         	call	_vfprintf	;wreg free
  1534  003CC2  0101               	movlb	1	; () banked
  1535  003CC4  5188               	movf	(sprintf@f+2)& (0+255),w,b
  1536  003CC6  0100               	movlb	0	; () banked
  1537  003CC8  25D2               	addwf	sprintf@s& (0+255),w,b
  1538  003CCA  6ED9               	movwf	fsr2l,c
  1539  003CCC  0101               	movlb	1	; () banked
  1540  003CCE  5189               	movf	(sprintf@f+3)& (0+255),w,b
  1541  003CD0  0100               	movlb	0	; () banked
  1542  003CD2  21D3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1543  003CD4  6EDA               	movwf	fsr2h,c
  1544  003CD6  0E00               	movlw	0
  1545  003CD8  6EDF               	movwf	indf2,c
  1546  003CDA                     
  1547                           ; BSR set to: 0
  1548  003CDA  0012               	return		;funcret
  1549  003CDC                     __end_of_sprintf:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _vfprintf *****************
  1553 ;; Defined at:
  1554 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  fp              2  111[COMRAM] PTR struct _IO_FILE
  1557 ;;		 -> sprintf@f(6), 
  1558 ;;  fmt             2  113[COMRAM] PTR const unsigned char 
  1559 ;;		 -> STR_2(31), 
  1560 ;;  ap              2  115[COMRAM] PTR PTR void 
  1561 ;;		 -> sprintf@ap(2), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  cfmt            2   80[BANK0 ] PTR unsigned char 
  1564 ;;		 -> STR_2(31), 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2  111[COMRAM] int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1574 ;;      Params:         6       0       0       0       0       0       0
  1575 ;;      Locals:         0       2       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0
  1577 ;;      Totals:         6       2       0       0       0       0       0
  1578 ;;Total ram usage:        8 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    8
  1581 ;; This function calls:
  1582 ;;		_vfpfcnvrt
  1583 ;; This function is called by:
  1584 ;;		_sprintf
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text4
  1589  003B08                     __ptext4:
  1590                           	opt callstack 0
  1591  003B08                     _vfprintf:
  1592                           	opt callstack 21
  1593  003B08                     
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1595  003B08  C072  F0D0         	movff	vfprintf@fmt,vfprintf@cfmt
  1596  003B0C  C073  F0D1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1597  003B10                     
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1599  003B10  0E00               	movlw	0
  1600  003B12  0100               	movlb	0	; () banked
  1601  003B14  6FF5               	movwf	(_nout+1)& (0+255),b
  1602  003B16  0E00               	movlw	0
  1603  003B18  6FF4               	movwf	_nout& (0+255),b
  1604                           
  1605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1606  003B1A  EFA2  F01D         	goto	l5831
  1607  003B1E                     l5829:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1611  003B1E  C070  F064         	movff	vfprintf@fp,vfpfcnvrt@fp
  1612  003B22  C071  F065         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1613  003B26  0ED0               	movlw	low vfprintf@cfmt
  1614  003B28  6E66               	movwf	vfpfcnvrt@fmt^0,c
  1615  003B2A  0E00               	movlw	high vfprintf@cfmt
  1616  003B2C  6E67               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1617  003B2E  C074  F068         	movff	vfprintf@ap,vfpfcnvrt@ap
  1618  003B32  C075  F069         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1619  003B36  EC06  F009         	call	_vfpfcnvrt	;wreg free
  1620  003B3A  5064               	movf	?_vfpfcnvrt^0,w,c
  1621  003B3C  0100               	movlb	0	; () banked
  1622  003B3E  27F4               	addwf	_nout& (0+255),f,b
  1623  003B40  5065               	movf	(?_vfpfcnvrt+1)^0,w,c
  1624  003B42  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1625  003B44                     l5831:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1629  003B44  C0D0  FFF6         	movff	vfprintf@cfmt,tblptrl
  1630  003B48  C0D1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1631  003B4C                     	if	0	;tblptru may be non-zero
  1632  003B4C                     	endif
  1633  003B4C                     	if	0	;tblptru may be non-zero
  1634  003B4C                     	endif
  1635  003B4C  0008               	tblrd		*
  1636  003B4E  50F5               	movf	tablat,w,c
  1637  003B50  0900               	iorlw	0
  1638  003B52  A4D8               	btfss	status,2,c
  1639  003B54  EFAE  F01D         	goto	u8191
  1640  003B58  EFB0  F01D         	goto	u8190
  1641  003B5C                     u8191:
  1642  003B5C  EF8F  F01D         	goto	l5829
  1643  003B60                     u8190:
  1644  003B60                     
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1647  003B60  C0F4  F070         	movff	_nout,?_vfprintf
  1648  003B64  C0F5  F071         	movff	_nout+1,?_vfprintf+1
  1649  003B68                     
  1650                           ; BSR set to: 0
  1651  003B68  0012               	return		;funcret
  1652  003B6A                     __end_of_vfprintf:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _vfpfcnvrt *****************
  1656 ;; Defined at:
  1657 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  fp              2   99[COMRAM] PTR struct _IO_FILE
  1660 ;;		 -> sprintf@f(6), 
  1661 ;;  fmt             2  101[COMRAM] PTR PTR unsigned char 
  1662 ;;		 -> vfprintf@cfmt(2), 
  1663 ;;  ap              2  103[COMRAM] PTR PTR void 
  1664 ;;		 -> sprintf@ap(2), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  llu             8   64[BANK0 ] unsigned long long 
  1667 ;;  ll              8    0        long long 
  1668 ;;  f               4   72[BANK0 ] long long 
  1669 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1670 ;;  vp              3    0        PTR void 
  1671 ;;  cp              3    0        PTR unsigned char 
  1672 ;;  done            2   56[BANK0 ] int 
  1673 ;;  i               2    0        int 
  1674 ;;  c               1   79[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2   99[COMRAM] int 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1684 ;;      Params:         6       0       0       0       0       0       0
  1685 ;;      Locals:         0      24       0       0       0       0       0
  1686 ;;      Temps:          6       0       0       0       0       0       0
  1687 ;;      Totals:        12      24       0       0       0       0       0
  1688 ;;Total ram usage:       36 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    7
  1691 ;; This function calls:
  1692 ;;		_atoi
  1693 ;;		_efgtoa
  1694 ;;		_fputc
  1695 ;;		_isdigit
  1696 ;;		_isupper
  1697 ;;		_strncmp
  1698 ;;		_tolower
  1699 ;;		_utoa
  1700 ;; This function is called by:
  1701 ;;		_vfprintf
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text5
  1706  00120C                     __ptext5:
  1707                           	opt callstack 0
  1708  00120C                     _vfpfcnvrt:
  1709                           	opt callstack 21
  1710  00120C                     
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1712  00120C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1713  001210  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1714  001214  CFDE FFF6          	movff	postinc2,tblptrl
  1715  001218  CFDD FFF7          	movff	postdec2,tblptrh
  1716  00121C                     	if	0	;tblptru may be non-zero
  1717  00121C                     	endif
  1718  00121C                     	if	0	;tblptru may be non-zero
  1719  00121C                     	endif
  1720  00121C  0008               	tblrd		*
  1721  00121E  50F5               	movf	tablat,w,c
  1722  001220  0A25               	xorlw	37
  1723  001222  A4D8               	btfss	status,2,c
  1724  001224  EF16  F009         	goto	u7961
  1725  001228  EF18  F009         	goto	u7960
  1726  00122C                     u7961:
  1727  00122C  EF99  F00C         	goto	l5807
  1728  001230                     u7960:
  1729  001230                     
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1731  001230  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  001234  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  001238  2ADE               	incf	postinc2,f,c
  1734  00123A  0E00               	movlw	0
  1735  00123C  22DD               	addwfc	postdec2,f,c
  1736  00123E                     
  1737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1738  00123E  0E00               	movlw	0
  1739  001240  0100               	movlb	0	; () banked
  1740  001242  6FF7               	movwf	(_width+1)& (0+255),b
  1741  001244  0E00               	movlw	0
  1742  001246  6FF6               	movwf	_width& (0+255),b
  1743  001248  C0F6  F078         	movff	_width,_flags
  1744  00124C  C0F7  F079         	movff	_width+1,_flags+1
  1745  001250                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1748  001250  6876               	setf	_prec^0,c
  1749  001252  6877               	setf	(_prec+1)^0,c
  1750  001254                     
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1753  001254  0E00               	movlw	0
  1754  001256  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1755  001258  0E00               	movlw	0
  1756  00125A  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1757                           
  1758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1759  00125C  EF76  F009         	goto	l5695
  1760  001260                     l5669:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1764  001260  8078               	bsf	_flags^0,0,c
  1765  001262                     l5671:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1769  001262  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1770  001266  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1771  00126A  2ADE               	incf	postinc2,f,c
  1772  00126C  0E00               	movlw	0
  1773  00126E  22DD               	addwfc	postdec2,f,c
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1776  001270  EF76  F009         	goto	l5695
  1777  001274                     l5673:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1781  001274  8278               	bsf	_flags^0,1,c
  1782  001276  EF31  F009         	goto	l5671
  1783  00127A                     l5677:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1787  00127A  8478               	bsf	_flags^0,2,c
  1788  00127C  EF31  F009         	goto	l5671
  1789  001280                     l5681:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1793  001280  8678               	bsf	_flags^0,3,c
  1794  001282  EF31  F009         	goto	l5671
  1795  001286                     l5685:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1799  001286  8878               	bsf	_flags^0,4,c
  1800  001288  EF31  F009         	goto	l5671
  1801  00128C                     l5689:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1805  00128C  0E00               	movlw	0
  1806  00128E  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1807  001290  0E01               	movlw	1
  1808  001292  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1809                           
  1810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1811  001294  EF76  F009         	goto	l5695
  1812  001298                     l5693:
  1813                           
  1814                           ; BSR set to: 0
  1815  001298  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1816  00129C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1817  0012A0  CFDE FFF6          	movff	postinc2,tblptrl
  1818  0012A4  CFDD FFF7          	movff	postdec2,tblptrh
  1819  0012A8                     	if	0	;tblptru may be non-zero
  1820  0012A8                     	endif
  1821  0012A8                     	if	0	;tblptru may be non-zero
  1822  0012A8                     	endif
  1823  0012A8  0008               	tblrd		*
  1824  0012AA  50F5               	movf	tablat,w,c
  1825  0012AC  6E6A               	movwf	??_vfpfcnvrt^0,c
  1826  0012AE  6A6B               	clrf	(??_vfpfcnvrt+1)^0,c
  1827                           
  1828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 1, Range of values is 0 to 0
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            4     3 (average)
  1834                           ;	Chosen strategy is simple_byte
  1835  0012B0  506B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1836  0012B2  0A00               	xorlw	0	; case 0
  1837  0012B4  B4D8               	btfsc	status,2,c
  1838  0012B6  EF5F  F009         	goto	l5957
  1839  0012BA  EF46  F009         	goto	l5689
  1840  0012BE                     l5957:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ; Switch size 1, requested type "simple"
  1844                           ; Number of cases is 5, Range of values is 32 to 48
  1845                           ; switch strategies available:
  1846                           ; Name         Instructions Cycles
  1847                           ; simple_byte           16     9 (average)
  1848                           ;	Chosen strategy is simple_byte
  1849  0012BE  506A               	movf	??_vfpfcnvrt^0,w,c
  1850  0012C0  0A20               	xorlw	32	; case 32
  1851  0012C2  B4D8               	btfsc	status,2,c
  1852  0012C4  EF40  F009         	goto	l5681
  1853  0012C8  0A03               	xorlw	3	; case 35
  1854  0012CA  B4D8               	btfsc	status,2,c
  1855  0012CC  EF43  F009         	goto	l5685
  1856  0012D0  0A08               	xorlw	8	; case 43
  1857  0012D2  B4D8               	btfsc	status,2,c
  1858  0012D4  EF3D  F009         	goto	l5677
  1859  0012D8  0A06               	xorlw	6	; case 45
  1860  0012DA  B4D8               	btfsc	status,2,c
  1861  0012DC  EF30  F009         	goto	l5669
  1862  0012E0  0A1D               	xorlw	29	; case 48
  1863  0012E2  B4D8               	btfsc	status,2,c
  1864  0012E4  EF3A  F009         	goto	l5673
  1865  0012E8  EF46  F009         	goto	l5689
  1866  0012EC                     l5695:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1870  0012EC  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1871  0012EE  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1872  0012F0  B4D8               	btfsc	status,2,c
  1873  0012F2  EF7D  F009         	goto	u7971
  1874  0012F6  EF7F  F009         	goto	u7970
  1875  0012FA                     u7971:
  1876  0012FA  EF4C  F009         	goto	l5693
  1877  0012FE                     u7970:
  1878  0012FE                     
  1879                           ; BSR set to: 0
  1880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1881  0012FE  A078               	btfss	_flags^0,0,c
  1882  001300  EF84  F009         	goto	u7981
  1883  001304  EF86  F009         	goto	u7980
  1884  001308                     u7981:
  1885  001308  EF87  F009         	goto	l5699
  1886  00130C                     u7980:
  1887  00130C                     
  1888                           ; BSR set to: 0
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1890  00130C  9278               	bcf	_flags^0,1,c
  1891  00130E                     l5699:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1895  00130E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1896  001312  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1897  001316  CFDE FFF6          	movff	postinc2,tblptrl
  1898  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  1899  00131E                     	if	0	;tblptru may be non-zero
  1900  00131E                     	endif
  1901  00131E                     	if	0	;tblptru may be non-zero
  1902  00131E                     	endif
  1903  00131E  0008               	tblrd		*
  1904  001320  50F5               	movf	tablat,w,c
  1905  001322  0A2A               	xorlw	42
  1906  001324  A4D8               	btfss	status,2,c
  1907  001326  EF97  F009         	goto	u7991
  1908  00132A  EF99  F009         	goto	u7990
  1909  00132E                     u7991:
  1910  00132E  EFC2  F009         	goto	l5707
  1911  001332                     u7990:
  1912  001332                     
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1915  001332  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1916  001336  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1917  00133A  2ADE               	incf	postinc2,f,c
  1918  00133C  0E00               	movlw	0
  1919  00133E  22DD               	addwfc	postdec2,f,c
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1922  001340  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1923  001344  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1924  001348  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  1925  00134C  0E02               	movlw	2
  1926  00134E  26DE               	addwf	postinc2,f,c
  1927  001350  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  1928  001354  0E00               	movlw	0
  1929  001356  22DD               	addwfc	postdec2,f,c
  1930  001358  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1931  00135C  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1932  001360  CFDE F0F6          	movff	postinc2,_width
  1933  001364  CFDD F0F7          	movff	postdec2,_width+1
  1934  001368                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1937  001368  BFF7               	btfsc	(_width+1)& (0+255),7,b
  1938  00136A  EFBB  F009         	goto	u8000
  1939  00136E  EFB9  F009         	goto	u8001
  1940  001372                     u8001:
  1941  001372  EF06  F00A         	goto	l5717
  1942  001376                     u8000:
  1943  001376                     
  1944                           ; BSR set to: 0
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1946  001376  8078               	bsf	_flags^0,0,c
  1947                           
  1948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1949  001378  6DF6               	negf	_width& (0+255),b
  1950  00137A  1FF7               	comf	(_width+1)& (0+255),f,b
  1951  00137C  B0D8               	btfsc	status,0,c
  1952  00137E  2BF7               	incf	(_width+1)& (0+255),f,b
  1953  001380  EF06  F00A         	goto	l5717
  1954  001384                     l5707:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1958  001384  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  001388  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  00138C  CFDE F00B          	movff	postinc2,atoi@s
  1961  001390  CFDD F00C          	movff	postdec2,atoi@s+1
  1962  001394  ECD2  F016         	call	_atoi	;wreg free
  1963  001398  C00B  F0F6         	movff	?_atoi,_width
  1964  00139C  C00C  F0F7         	movff	?_atoi+1,_width+1
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1967  0013A0  EFD9  F009         	goto	l5711
  1968  0013A4                     l5709:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1972  0013A4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  0013A8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  0013AC  2ADE               	incf	postinc2,f,c
  1975  0013AE  0E00               	movlw	0
  1976  0013B0  22DD               	addwfc	postdec2,f,c
  1977  0013B2                     l5711:
  1978  0013B2  0ED0               	movlw	208
  1979  0013B4  6E6A               	movwf	??_vfpfcnvrt^0,c
  1980  0013B6  0EFF               	movlw	255
  1981  0013B8  6E6B               	movwf	(??_vfpfcnvrt+1)^0,c
  1982  0013BA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  0013BE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  0013C2  CFDE FFF6          	movff	postinc2,tblptrl
  1985  0013C6  CFDD FFF7          	movff	postdec2,tblptrh
  1986  0013CA                     	if	0	;tblptru may be non-zero
  1987  0013CA                     	endif
  1988  0013CA                     	if	0	;tblptru may be non-zero
  1989  0013CA                     	endif
  1990  0013CA  0008               	tblrd		*
  1991  0013CC  50F5               	movf	tablat,w,c
  1992  0013CE  6E6C               	movwf	(??_vfpfcnvrt+2)^0,c
  1993  0013D0  6A6D               	clrf	(??_vfpfcnvrt+3)^0,c
  1994  0013D2  506A               	movf	??_vfpfcnvrt^0,w,c
  1995  0013D4  266C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1996  0013D6  506B               	movf	(??_vfpfcnvrt+1)^0,w,c
  1997  0013D8  226D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1998  0013DA  506D               	movf	(??_vfpfcnvrt+3)^0,w,c
  1999  0013DC  E10A               	bnz	u8010
  2000  0013DE  0E0A               	movlw	10
  2001  0013E0  5C6C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2002  0013E2  A0D8               	btfss	status,0,c
  2003  0013E4  EFF6  F009         	goto	u8011
  2004  0013E8  EFF9  F009         	goto	u8010
  2005  0013EC                     u8011:
  2006  0013EC  0E01               	movlw	1
  2007  0013EE  EFFA  F009         	goto	u8020
  2008  0013F2                     u8010:
  2009  0013F2  0E00               	movlw	0
  2010  0013F4                     u8020:
  2011  0013F4  0100               	movlb	0	; () banked
  2012  0013F6  6FBA               	movwf	_vfpfcnvrt$689& (0+255),b
  2013  0013F8  6BBB               	clrf	(_vfpfcnvrt$689+1)& (0+255),b
  2014  0013FA                     
  2015                           ; BSR set to: 0
  2016  0013FA  51BA               	movf	_vfpfcnvrt$689& (0+255),w,b
  2017  0013FC  11BB               	iorwf	(_vfpfcnvrt$689+1)& (0+255),w,b
  2018  0013FE  A4D8               	btfss	status,2,c
  2019  001400  EF04  F00A         	goto	u8031
  2020  001404  EF06  F00A         	goto	u8030
  2021  001408                     u8031:
  2022  001408  EFD2  F009         	goto	l5709
  2023  00140C                     u8030:
  2024  00140C                     l5717:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2028  00140C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2029  001410  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2030  001414  CFDE FFF6          	movff	postinc2,tblptrl
  2031  001418  CFDD FFF7          	movff	postdec2,tblptrh
  2032  00141C                     	if	0	;tblptru may be non-zero
  2033  00141C                     	endif
  2034  00141C                     	if	0	;tblptru may be non-zero
  2035  00141C                     	endif
  2036  00141C  0008               	tblrd		*
  2037  00141E  50F5               	movf	tablat,w,c
  2038  001420  0A2E               	xorlw	46
  2039  001422  A4D8               	btfss	status,2,c
  2040  001424  EF16  F00A         	goto	u8041
  2041  001428  EF18  F00A         	goto	u8040
  2042  00142C                     u8041:
  2043  00142C  EF96  F00A         	goto	l5737
  2044  001430                     u8040:
  2045  001430                     
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2048  001430  0E00               	movlw	0
  2049  001432  6E77               	movwf	(_prec+1)^0,c
  2050  001434  0E00               	movlw	0
  2051  001436  6E76               	movwf	_prec^0,c
  2052  001438                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2055  001438  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2056  00143C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2057  001440  2ADE               	incf	postinc2,f,c
  2058  001442  0E00               	movlw	0
  2059  001444  22DD               	addwfc	postdec2,f,c
  2060  001446                     
  2061                           ; BSR set to: 0
  2062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2063  001446  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2064  00144A  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2065  00144E  CFDE FFF6          	movff	postinc2,tblptrl
  2066  001452  CFDD FFF7          	movff	postdec2,tblptrh
  2067  001456                     	if	0	;tblptru may be non-zero
  2068  001456                     	endif
  2069  001456                     	if	0	;tblptru may be non-zero
  2070  001456                     	endif
  2071  001456  0008               	tblrd		*
  2072  001458  50F5               	movf	tablat,w,c
  2073  00145A  0A2A               	xorlw	42
  2074  00145C  A4D8               	btfss	status,2,c
  2075  00145E  EF33  F00A         	goto	u8051
  2076  001462  EF35  F00A         	goto	u8050
  2077  001466                     u8051:
  2078  001466  EF52  F00A         	goto	l5727
  2079  00146A                     u8050:
  2080  00146A                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2083  00146A  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  00146E  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  001472  2ADE               	incf	postinc2,f,c
  2086  001474  0E00               	movlw	0
  2087  001476  22DD               	addwfc	postdec2,f,c
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2090  001478  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2091  00147C  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2092  001480  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2093  001484  0E02               	movlw	2
  2094  001486  26DE               	addwf	postinc2,f,c
  2095  001488  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2096  00148C  0E00               	movlw	0
  2097  00148E  22DD               	addwfc	postdec2,f,c
  2098  001490  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2099  001494  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2100  001498  CFDE F076          	movff	postinc2,_prec
  2101  00149C  CFDD F077          	movff	postdec2,_prec+1
  2102                           
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2104  0014A0  EF96  F00A         	goto	l5737
  2105  0014A4                     l5727:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2109  0014A4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2110  0014A8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2111  0014AC  CFDE F00B          	movff	postinc2,atoi@s
  2112  0014B0  CFDD F00C          	movff	postdec2,atoi@s+1
  2113  0014B4  ECD2  F016         	call	_atoi	;wreg free
  2114  0014B8  C00B  F076         	movff	?_atoi,_prec
  2115  0014BC  C00C  F077         	movff	?_atoi+1,_prec+1
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2118  0014C0  EF69  F00A         	goto	l5731
  2119  0014C4                     l5729:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2123  0014C4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2124  0014C8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2125  0014CC  2ADE               	incf	postinc2,f,c
  2126  0014CE  0E00               	movlw	0
  2127  0014D0  22DD               	addwfc	postdec2,f,c
  2128  0014D2                     l5731:
  2129  0014D2  0ED0               	movlw	208
  2130  0014D4  6E6A               	movwf	??_vfpfcnvrt^0,c
  2131  0014D6  0EFF               	movlw	255
  2132  0014D8  6E6B               	movwf	(??_vfpfcnvrt+1)^0,c
  2133  0014DA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  0014DE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  0014E2  CFDE FFF6          	movff	postinc2,tblptrl
  2136  0014E6  CFDD FFF7          	movff	postdec2,tblptrh
  2137  0014EA                     	if	0	;tblptru may be non-zero
  2138  0014EA                     	endif
  2139  0014EA                     	if	0	;tblptru may be non-zero
  2140  0014EA                     	endif
  2141  0014EA  0008               	tblrd		*
  2142  0014EC  50F5               	movf	tablat,w,c
  2143  0014EE  6E6C               	movwf	(??_vfpfcnvrt+2)^0,c
  2144  0014F0  6A6D               	clrf	(??_vfpfcnvrt+3)^0,c
  2145  0014F2  506A               	movf	??_vfpfcnvrt^0,w,c
  2146  0014F4  266C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2147  0014F6  506B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2148  0014F8  226D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2149  0014FA  506D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2150  0014FC  E10A               	bnz	u8060
  2151  0014FE  0E0A               	movlw	10
  2152  001500  5C6C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2153  001502  A0D8               	btfss	status,0,c
  2154  001504  EF86  F00A         	goto	u8061
  2155  001508  EF89  F00A         	goto	u8060
  2156  00150C                     u8061:
  2157  00150C  0E01               	movlw	1
  2158  00150E  EF8A  F00A         	goto	u8070
  2159  001512                     u8060:
  2160  001512  0E00               	movlw	0
  2161  001514                     u8070:
  2162  001514  0100               	movlb	0	; () banked
  2163  001516  6FBC               	movwf	_vfpfcnvrt$690& (0+255),b
  2164  001518  6BBD               	clrf	(_vfpfcnvrt$690+1)& (0+255),b
  2165  00151A                     
  2166                           ; BSR set to: 0
  2167  00151A  51BC               	movf	_vfpfcnvrt$690& (0+255),w,b
  2168  00151C  11BD               	iorwf	(_vfpfcnvrt$690+1)& (0+255),w,b
  2169  00151E  A4D8               	btfss	status,2,c
  2170  001520  EF94  F00A         	goto	u8081
  2171  001524  EF96  F00A         	goto	u8080
  2172  001528                     u8081:
  2173  001528  EF62  F00A         	goto	l5729
  2174  00152C                     u8080:
  2175  00152C                     l5737:
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2179  00152C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  001530  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  001534  CFDE FFF6          	movff	postinc2,tblptrl
  2182  001538  CFDD FFF7          	movff	postdec2,tblptrh
  2183  00153C                     	if	0	;tblptru may be non-zero
  2184  00153C                     	endif
  2185  00153C                     	if	0	;tblptru may be non-zero
  2186  00153C                     	endif
  2187  00153C  0008               	tblrd		*
  2188  00153E  50F5               	movf	tablat,w,c
  2189  001540  6E0A               	movwf	tolower@c^0,c
  2190  001542  6A0B               	clrf	(tolower@c+1)^0,c
  2191  001544  ECB5  F01D         	call	_tolower	;wreg free
  2192  001548  500A               	movf	?_tolower^0,w,c
  2193  00154A  0100               	movlb	0	; () banked
  2194  00154C  6FCC               	movwf	vfpfcnvrt@ct& (0+255),b
  2195  00154E                     
  2196                           ; BSR set to: 0
  2197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2198  00154E  51CC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2199  001550  B4D8               	btfsc	status,2,c
  2200  001552  EFAD  F00A         	goto	u8091
  2201  001556  EFAF  F00A         	goto	u8090
  2202  00155A                     u8091:
  2203  00155A  EFE9  F00A         	goto	l5747
  2204  00155E                     u8090:
  2205  00155E                     
  2206                           ; BSR set to: 0
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2208  00155E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  001562  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  001566  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2211  00156A  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2212  00156E  0E01               	movlw	1
  2213  001570  266A               	addwf	??_vfpfcnvrt^0,f,c
  2214  001572  0E00               	movlw	0
  2215  001574  226B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2216  001576  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2217  00157A  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2218  00157E                     	if	0	;tblptru may be non-zero
  2219  00157E                     	endif
  2220  00157E                     	if	0	;tblptru may be non-zero
  2221  00157E                     	endif
  2222  00157E  0008               	tblrd		*
  2223  001580  50F5               	movf	tablat,w,c
  2224  001582  6E0A               	movwf	tolower@c^0,c
  2225  001584  6A0B               	clrf	(tolower@c+1)^0,c
  2226  001586  ECB5  F01D         	call	_tolower	;wreg free
  2227  00158A  500A               	movf	?_tolower^0,w,c
  2228  00158C  0100               	movlb	0	; () banked
  2229  00158E  6FCD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2230  001590                     
  2231                           ; BSR set to: 0
  2232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2233  001590  51CD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2234  001592  B4D8               	btfsc	status,2,c
  2235  001594  EFCE  F00A         	goto	u8101
  2236  001598  EFD0  F00A         	goto	u8100
  2237  00159C                     u8101:
  2238  00159C  EFE9  F00A         	goto	l5747
  2239  0015A0                     u8100:
  2240  0015A0                     
  2241                           ; BSR set to: 0
  2242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2243  0015A0  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2244  0015A4  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2245  0015A8  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2246  0015AC  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2247  0015B0  0E02               	movlw	2
  2248  0015B2  266A               	addwf	??_vfpfcnvrt^0,f,c
  2249  0015B4  0E00               	movlw	0
  2250  0015B6  226B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2251  0015B8  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2252  0015BC  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2253  0015C0                     	if	0	;tblptru may be non-zero
  2254  0015C0                     	endif
  2255  0015C0                     	if	0	;tblptru may be non-zero
  2256  0015C0                     	endif
  2257  0015C0  0008               	tblrd		*
  2258  0015C2  50F5               	movf	tablat,w,c
  2259  0015C4  6E0A               	movwf	tolower@c^0,c
  2260  0015C6  6A0B               	clrf	(tolower@c+1)^0,c
  2261  0015C8  ECB5  F01D         	call	_tolower	;wreg free
  2262  0015CC  500A               	movf	?_tolower^0,w,c
  2263  0015CE  0100               	movlb	0	; () banked
  2264  0015D0  6FCE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2265  0015D2                     l5747:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2269  0015D2  0E66               	movlw	102
  2270  0015D4  19CC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2271  0015D6  A4D8               	btfss	status,2,c
  2272  0015D8  EFF0  F00A         	goto	u8111
  2273  0015DC  EFF2  F00A         	goto	u8110
  2274  0015E0                     u8111:
  2275  0015E0  EF32  F00B         	goto	l5759
  2276  0015E4                     u8110:
  2277  0015E4                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2280  0015E4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  0015E8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  0015EC  CFDE FFF6          	movff	postinc2,tblptrl
  2283  0015F0  CFDD FFF7          	movff	postdec2,tblptrh
  2284  0015F4                     	if	0	;tblptru may be non-zero
  2285  0015F4                     	endif
  2286  0015F4                     	if	0	;tblptru may be non-zero
  2287  0015F4                     	endif
  2288  0015F4  0008               	tblrd		*
  2289  0015F6  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2290  0015FA                     
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2293  0015FA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  0015FE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  001602  2ADE               	incf	postinc2,f,c
  2296  001604  0E00               	movlw	0
  2297  001606  22DD               	addwfc	postdec2,f,c
  2298  001608                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2301  001608  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2302  00160C  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2303  001610  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2304  001614  0E04               	movlw	4
  2305  001616  26DE               	addwf	postinc2,f,c
  2306  001618  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2307  00161C  0E00               	movlw	0
  2308  00161E  22DD               	addwfc	postdec2,f,c
  2309  001620  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2310  001624  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2311  001628  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2312  00162C  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2313  001630  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2314  001634  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2315  001638                     l5755:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2319  001638  C064  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  2320  00163C  C065  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2321  001640  C0C8  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  2322  001644  C0C9  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2323  001648  C0CA  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2324  00164C  C0CB  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2325  001650  C0CF  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  2326  001654  EC2D  F003         	call	_efgtoa	;wreg free
  2327  001658  C058  F064         	movff	?_efgtoa,?_vfpfcnvrt
  2328  00165C  C059  F065         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2329  001660  EFB4  F00C         	goto	l296
  2330  001664                     l5759:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2334  001664  0ECC               	movlw	low vfpfcnvrt@ct
  2335  001666  6E04               	movwf	strncmp@_l^0,c
  2336  001668  0E00               	movlw	high vfpfcnvrt@ct
  2337  00166A  6E05               	movwf	(strncmp@_l+1)^0,c
  2338  00166C  0E52               	movlw	low STR_11
  2339  00166E  6E06               	movwf	strncmp@_r^0,c
  2340  001670  0E06               	movlw	high STR_11
  2341  001672  6E07               	movwf	(strncmp@_r+1)^0,c
  2342  001674  0E00               	movlw	0
  2343  001676  6E09               	movwf	(strncmp@n+1)^0,c
  2344  001678  0E02               	movlw	2
  2345  00167A  6E08               	movwf	strncmp@n^0,c
  2346  00167C  EC9A  F017         	call	_strncmp	;wreg free
  2347  001680  5004               	movf	?_strncmp^0,w,c
  2348  001682  1005               	iorwf	(?_strncmp+1)^0,w,c
  2349  001684  A4D8               	btfss	status,2,c
  2350  001686  EF47  F00B         	goto	u8121
  2351  00168A  EF49  F00B         	goto	u8120
  2352  00168E                     u8121:
  2353  00168E  EFC5  F00B         	goto	l5775
  2354  001692                     u8120:
  2355  001692                     
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2357  001692  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  001696  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  00169A  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2360  00169E  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2361  0016A2  0E01               	movlw	1
  2362  0016A4  266A               	addwf	??_vfpfcnvrt^0,f,c
  2363  0016A6  0E00               	movlw	0
  2364  0016A8  226B               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2365  0016AA  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2366  0016AE  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2367  0016B2                     	if	0	;tblptru may be non-zero
  2368  0016B2                     	endif
  2369  0016B2                     	if	0	;tblptru may be non-zero
  2370  0016B2                     	endif
  2371  0016B2  0008               	tblrd		*
  2372  0016B4  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2373  0016B8  0EBF               	movlw	191
  2374  0016BA  6E6A               	movwf	??_vfpfcnvrt^0,c
  2375  0016BC  0EFF               	movlw	255
  2376  0016BE  6E6B               	movwf	(??_vfpfcnvrt+1)^0,c
  2377  0016C0  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2378  0016C4  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2379  0016C8  CFDE FFF6          	movff	postinc2,tblptrl
  2380  0016CC  CFDD FFF7          	movff	postdec2,tblptrh
  2381  0016D0                     	if	0	;tblptru may be non-zero
  2382  0016D0                     	endif
  2383  0016D0                     	if	0	;tblptru may be non-zero
  2384  0016D0                     	endif
  2385  0016D0  0008               	tblrd		*
  2386  0016D2  50F5               	movf	tablat,w,c
  2387  0016D4  6E6C               	movwf	(??_vfpfcnvrt+2)^0,c
  2388  0016D6  6A6D               	clrf	(??_vfpfcnvrt+3)^0,c
  2389  0016D8  506A               	movf	??_vfpfcnvrt^0,w,c
  2390  0016DA  266C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2391  0016DC  506B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2392  0016DE  226D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2393  0016E0  506D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2394  0016E2  E10A               	bnz	u8130
  2395  0016E4  0E1A               	movlw	26
  2396  0016E6  5C6C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2397  0016E8  A0D8               	btfss	status,0,c
  2398  0016EA  EF79  F00B         	goto	u8131
  2399  0016EE  EF7C  F00B         	goto	u8130
  2400  0016F2                     u8131:
  2401  0016F2  0E01               	movlw	1
  2402  0016F4  EF7D  F00B         	goto	u8140
  2403  0016F8                     u8130:
  2404  0016F8  0E00               	movlw	0
  2405  0016FA                     u8140:
  2406  0016FA  0100               	movlb	0	; () banked
  2407  0016FC  6FBE               	movwf	_vfpfcnvrt$694& (0+255),b
  2408  0016FE  6BBF               	clrf	(_vfpfcnvrt$694+1)& (0+255),b
  2409  001700                     
  2410                           ; BSR set to: 0
  2411  001700  51BE               	movf	_vfpfcnvrt$694& (0+255),w,b
  2412  001702  11BF               	iorwf	(_vfpfcnvrt$694+1)& (0+255),w,b
  2413  001704  B4D8               	btfsc	status,2,c
  2414  001706  EF87  F00B         	goto	u8151
  2415  00170A  EF89  F00B         	goto	u8150
  2416  00170E                     u8151:
  2417  00170E  EFA3  F00B         	goto	l5769
  2418  001712                     u8150:
  2419  001712                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2422  001712  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2423  001716  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2424  00171A  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2425  00171E  0E04               	movlw	4
  2426  001720  26DE               	addwf	postinc2,f,c
  2427  001722  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2428  001726  0E00               	movlw	0
  2429  001728  22DD               	addwfc	postdec2,f,c
  2430  00172A  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2431  00172E  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2432  001732  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2433  001736  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2434  00173A  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2435  00173E  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2436                           
  2437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2438  001742  EFBB  F00B         	goto	l303
  2439  001746                     l5769:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2443  001746  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2444  00174A  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2445  00174E  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2446  001752  0E04               	movlw	4
  2447  001754  26DE               	addwf	postinc2,f,c
  2448  001756  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2449  00175A  0E00               	movlw	0
  2450  00175C  22DD               	addwfc	postdec2,f,c
  2451  00175E  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2452  001762  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2453  001766  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2454  00176A  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2455  00176E  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2456  001772  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2457  001776                     l303:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2461  001776  0E02               	movlw	2
  2462  001778  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463  00177C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464  001780  26DE               	addwf	postinc2,f,c
  2465  001782  0E00               	movlw	0
  2466  001784  22DD               	addwfc	postdec2,f,c
  2467  001786  EF1C  F00B         	goto	l5755
  2468  00178A                     l5775:
  2469                           
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2471  00178A  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  00178E  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  001792  CFDE FFF6          	movff	postinc2,tblptrl
  2474  001796  CFDD FFF7          	movff	postdec2,tblptrh
  2475  00179A                     	if	0	;tblptru may be non-zero
  2476  00179A                     	endif
  2477  00179A                     	if	0	;tblptru may be non-zero
  2478  00179A                     	endif
  2479  00179A  0008               	tblrd		*
  2480  00179C  50F5               	movf	tablat,w,c
  2481  00179E  0A75               	xorlw	117
  2482  0017A0  A4D8               	btfss	status,2,c
  2483  0017A2  EFD5  F00B         	goto	u8161
  2484  0017A6  EFD7  F00B         	goto	u8160
  2485  0017AA                     u8161:
  2486  0017AA  EF19  F00C         	goto	l5783
  2487  0017AE                     u8160:
  2488  0017AE                     
  2489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2490  0017AE  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  0017B2  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  0017B6  2ADE               	incf	postinc2,f,c
  2493  0017B8  0E00               	movlw	0
  2494  0017BA  22DD               	addwfc	postdec2,f,c
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2497  0017BC  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2498  0017C0  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2499  0017C4  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2500  0017C8  0E02               	movlw	2
  2501  0017CA  26DE               	addwf	postinc2,f,c
  2502  0017CC  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2503  0017D0  0E00               	movlw	0
  2504  0017D2  22DD               	addwfc	postdec2,f,c
  2505  0017D4  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2506  0017D8  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2507  0017DC  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+2
  2508  0017E0  CFDD F06D          	movff	postdec2,??_vfpfcnvrt+3
  2509  0017E4  C06C  F0C0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2510  0017E8  C06D  F0C1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2511  0017EC  0100               	movlb	0	; () banked
  2512  0017EE  6BC2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2513  0017F0  6BC3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2514  0017F2  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2515  0017F4  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2516  0017F6  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2517  0017F8  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2518  0017FA                     l5779:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2522  0017FA  C064  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  2523  0017FE  C065  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2524  001802  C0C0  F021         	movff	vfpfcnvrt@llu,utoa@d
  2525  001806  C0C1  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2526  00180A  C0C2  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2527  00180E  C0C3  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2528  001812  C0C4  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2529  001816  C0C5  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2530  00181A  C0C6  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2531  00181E  C0C7  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2532  001822  EC00  F014         	call	_utoa	;wreg free
  2533  001826  C01F  F064         	movff	?_utoa,?_vfpfcnvrt
  2534  00182A  C020  F065         	movff	?_utoa+1,?_vfpfcnvrt+1
  2535  00182E  EFB4  F00C         	goto	l296
  2536  001832                     l5783:
  2537                           
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  2539  001832  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2540  001836  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2541  00183A  CFDE F004          	movff	postinc2,strncmp@_l
  2542  00183E  CFDD F005          	movff	postdec2,strncmp@_l+1
  2543  001842  0E55               	movlw	low STR_16
  2544  001844  6E06               	movwf	strncmp@_r^0,c
  2545  001846  0E06               	movlw	high STR_16
  2546  001848  6E07               	movwf	(strncmp@_r+1)^0,c
  2547  00184A  0E00               	movlw	0
  2548  00184C  6E09               	movwf	(strncmp@n+1)^0,c
  2549  00184E  0E02               	movlw	2
  2550  001850  6E08               	movwf	strncmp@n^0,c
  2551  001852  EC9A  F017         	call	_strncmp	;wreg free
  2552  001856  5004               	movf	?_strncmp^0,w,c
  2553  001858  1005               	iorwf	(?_strncmp+1)^0,w,c
  2554  00185A  A4D8               	btfss	status,2,c
  2555  00185C  EF32  F00C         	goto	u8171
  2556  001860  EF34  F00C         	goto	u8170
  2557  001864                     u8171:
  2558  001864  EF63  F00C         	goto	l5791
  2559  001868                     u8170:
  2560  001868                     
  2561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  2562  001868  0E02               	movlw	2
  2563  00186A  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  00186E  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  001872  26DE               	addwf	postinc2,f,c
  2566  001874  0E00               	movlw	0
  2567  001876  22DD               	addwfc	postdec2,f,c
  2568                           
  2569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  2570  001878  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2571  00187C  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2572  001880  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2573  001884  0E04               	movlw	4
  2574  001886  26DE               	addwf	postinc2,f,c
  2575  001888  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2576  00188C  0E00               	movlw	0
  2577  00188E  22DD               	addwfc	postdec2,f,c
  2578  001890  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2579  001894  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2580  001898  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+2
  2581  00189C  CFDE F06D          	movff	postinc2,??_vfpfcnvrt+3
  2582  0018A0  CFDE F06E          	movff	postinc2,??_vfpfcnvrt+4
  2583  0018A4  CFDE F06F          	movff	postinc2,??_vfpfcnvrt+5
  2584  0018A8  506C               	movf	(??_vfpfcnvrt+2)^0,w,c
  2585  0018AA  0100               	movlb	0	; () banked
  2586  0018AC  6FC0               	movwf	vfpfcnvrt@llu& (0+255),b
  2587  0018AE  506D               	movf	(??_vfpfcnvrt+3)^0,w,c
  2588  0018B0  6FC1               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  2589  0018B2  506E               	movf	(??_vfpfcnvrt+4)^0,w,c
  2590  0018B4  6FC2               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  2591  0018B6  506F               	movf	(??_vfpfcnvrt+5)^0,w,c
  2592  0018B8  6FC3               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  2593  0018BA  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2594  0018BC  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2595  0018BE  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2596  0018C0  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2597  0018C2  EFFD  F00B         	goto	l5779
  2598  0018C6                     l5791:
  2599                           
  2600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2601  0018C6  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  0018CA  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  0018CE  CFDE FFF6          	movff	postinc2,tblptrl
  2604  0018D2  CFDD FFF7          	movff	postdec2,tblptrh
  2605  0018D6                     	if	0	;tblptru may be non-zero
  2606  0018D6                     	endif
  2607  0018D6                     	if	0	;tblptru may be non-zero
  2608  0018D6                     	endif
  2609  0018D6  0008               	tblrd		*
  2610  0018D8  50F5               	movf	tablat,w,c
  2611  0018DA  0A25               	xorlw	37
  2612  0018DC  A4D8               	btfss	status,2,c
  2613  0018DE  EF73  F00C         	goto	u8181
  2614  0018E2  EF75  F00C         	goto	u8180
  2615  0018E6                     u8181:
  2616  0018E6  EF8C  F00C         	goto	l5801
  2617  0018EA                     u8180:
  2618  0018EA                     
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2620  0018EA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  0018EE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  0018F2  2ADE               	incf	postinc2,f,c
  2623  0018F4  0E00               	movlw	0
  2624  0018F6  22DD               	addwfc	postdec2,f,c
  2625  0018F8                     
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2627  0018F8  0E00               	movlw	0
  2628  0018FA  6E05               	movwf	(fputc@c+1)^0,c
  2629  0018FC  0E25               	movlw	37
  2630  0018FE  6E04               	movwf	fputc@c^0,c
  2631  001900  C064  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2632  001904  C065  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2633  001908  EC7A  F01B         	call	_fputc	;wreg free
  2634  00190C                     l5797:
  2635                           
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2637  00190C  0E00               	movlw	0
  2638  00190E  6E65               	movwf	(?_vfpfcnvrt+1)^0,c
  2639  001910  0E01               	movlw	1
  2640  001912  6E64               	movwf	?_vfpfcnvrt^0,c
  2641  001914  EFB4  F00C         	goto	l296
  2642  001918                     l5801:
  2643                           
  2644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2645  001918  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2646  00191C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2647  001920  2ADE               	incf	postinc2,f,c
  2648  001922  0E00               	movlw	0
  2649  001924  22DD               	addwfc	postdec2,f,c
  2650  001926                     
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2652  001926  0E00               	movlw	0
  2653  001928  6E65               	movwf	(?_vfpfcnvrt+1)^0,c
  2654  00192A  0E00               	movlw	0
  2655  00192C  6E64               	movwf	?_vfpfcnvrt^0,c
  2656  00192E  EFB4  F00C         	goto	l296
  2657  001932                     l5807:
  2658                           
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2660  001932  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2661  001936  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2662  00193A  CFDE FFF6          	movff	postinc2,tblptrl
  2663  00193E  CFDD FFF7          	movff	postdec2,tblptrh
  2664  001942                     	if	0	;tblptru may be non-zero
  2665  001942                     	endif
  2666  001942                     	if	0	;tblptru may be non-zero
  2667  001942                     	endif
  2668  001942  0008               	tblrd		*
  2669  001944  50F5               	movf	tablat,w,c
  2670  001946  6E04               	movwf	fputc@c^0,c
  2671  001948  6A05               	clrf	(fputc@c+1)^0,c
  2672  00194A  C064  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2673  00194E  C065  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2674  001952  EC7A  F01B         	call	_fputc	;wreg free
  2675  001956                     
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2677  001956  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2678  00195A  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2679  00195E  2ADE               	incf	postinc2,f,c
  2680  001960  0E00               	movlw	0
  2681  001962  22DD               	addwfc	postdec2,f,c
  2682  001964  EF86  F00C         	goto	l5797
  2683  001968                     l296:
  2684  001968  0012               	return		;funcret
  2685  00196A                     __end_of_vfpfcnvrt:
  2686                           	opt callstack 0
  2687                           
  2688 ;; *************** function _utoa *****************
  2689 ;; Defined at:
  2690 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2693 ;;		 -> sprintf@f(6), 
  2694 ;;  d               8   32[COMRAM] unsigned long long 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  n               8   52[COMRAM] unsigned long long 
  2697 ;;  i               2   60[COMRAM] int 
  2698 ;;  w               2   50[COMRAM] int 
  2699 ;;  p               2   48[COMRAM] int 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  2   30[COMRAM] int 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2709 ;;      Params:        10       0       0       0       0       0       0
  2710 ;;      Locals:        14       0       0       0       0       0       0
  2711 ;;      Temps:          8       0       0       0       0       0       0
  2712 ;;      Totals:        32       0       0       0       0       0       0
  2713 ;;Total ram usage:       32 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    6
  2716 ;; This function calls:
  2717 ;;		___lodiv
  2718 ;;		___lomod
  2719 ;;		_pad
  2720 ;; This function is called by:
  2721 ;;		_vfpfcnvrt
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text6
  2726  002800                     __ptext6:
  2727                           	opt callstack 0
  2728  002800                     _utoa:
  2729                           	opt callstack 21
  2730  002800                     
  2731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2732  002800  BE77               	btfsc	(_prec+1)^0,7,c
  2733  002802  EF05  F014         	goto	u7751
  2734  002806  EF07  F014         	goto	u7750
  2735  00280A                     u7751:
  2736  00280A  EF08  F014         	goto	l5565
  2737  00280E                     u7750:
  2738  00280E                     
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  2740  00280E  9278               	bcf	_flags^0,1,c
  2741  002810                     l5565:
  2742                           
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  2744  002810  BE77               	btfsc	(_prec+1)^0,7,c
  2745  002812  EF15  F014         	goto	u7760
  2746  002816  5077               	movf	(_prec+1)^0,w,c
  2747  002818  E106               	bnz	u7761
  2748  00281A  0476               	decf	_prec^0,w,c
  2749  00281C  B0D8               	btfsc	status,0,c
  2750  00281E  EF13  F014         	goto	u7761
  2751  002822  EF15  F014         	goto	u7760
  2752  002826                     u7761:
  2753  002826  EF1B  F014         	goto	l247
  2754  00282A                     u7760:
  2755  00282A  0E00               	movlw	0
  2756  00282C  6E32               	movwf	(utoa@p+1)^0,c
  2757  00282E  0E01               	movlw	1
  2758  002830  6E31               	movwf	utoa@p^0,c
  2759  002832  EF1F  F014         	goto	l249
  2760  002836                     l247:
  2761  002836  C076  F031         	movff	_prec,utoa@p
  2762  00283A  C077  F032         	movff	_prec+1,utoa@p+1
  2763  00283E                     l249:
  2764                           
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  2766  00283E  C0F6  F033         	movff	_width,utoa@w
  2767  002842  C0F7  F034         	movff	_width+1,utoa@w+1
  2768                           
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  2770  002846  C021  F035         	movff	utoa@d,utoa@n
  2771  00284A  C022  F036         	movff	utoa@d+1,utoa@n+1
  2772  00284E  C023  F037         	movff	utoa@d+2,utoa@n+2
  2773  002852  C024  F038         	movff	utoa@d+3,utoa@n+3
  2774  002856  C025  F039         	movff	utoa@d+4,utoa@n+4
  2775  00285A  C026  F03A         	movff	utoa@d+5,utoa@n+5
  2776  00285E  C027  F03B         	movff	utoa@d+6,utoa@n+6
  2777  002862  C028  F03C         	movff	utoa@d+7,utoa@n+7
  2778  002866                     
  2779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  2780  002866  0E00               	movlw	0
  2781  002868  6E3E               	movwf	(utoa@i+1)^0,c
  2782  00286A  0E4F               	movlw	79
  2783  00286C  6E3D               	movwf	utoa@i^0,c
  2784  00286E                     
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  2786  00286E  0E00               	movlw	0
  2787  002870  0101               	movlb	1	; () banked
  2788  002872  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2791  002874  EFB2  F014         	goto	l5583
  2792  002878                     l5573:
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  2795  002878  063D               	decf	utoa@i^0,f,c
  2796  00287A  A0D8               	btfss	status,0,c
  2797  00287C  063E               	decf	(utoa@i+1)^0,f,c
  2798  00287E                     
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2800  00287E  0E00               	movlw	low _dbuf
  2801  002880  243D               	addwf	utoa@i^0,w,c
  2802  002882  6ED9               	movwf	fsr2l,c
  2803  002884  0E01               	movlw	high _dbuf
  2804  002886  203E               	addwfc	(utoa@i+1)^0,w,c
  2805  002888  6EDA               	movwf	fsr2h,c
  2806  00288A  C035  F004         	movff	utoa@n,___lomod@dividend
  2807  00288E  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  2808  002892  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  2809  002896  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  2810  00289A  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  2811  00289E  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  2812  0028A2  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  2813  0028A6  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  2814  0028AA  0E0A               	movlw	10
  2815  0028AC  6E0C               	movwf	___lomod@divisor^0,c
  2816  0028AE  0E00               	movlw	0
  2817  0028B0  6E0D               	movwf	(___lomod@divisor+1)^0,c
  2818  0028B2  0E00               	movlw	0
  2819  0028B4  6E0E               	movwf	(___lomod@divisor+2)^0,c
  2820  0028B6  0E00               	movlw	0
  2821  0028B8  6E0F               	movwf	(___lomod@divisor+3)^0,c
  2822  0028BA  0E00               	movlw	0
  2823  0028BC  6E10               	movwf	(___lomod@divisor+4)^0,c
  2824  0028BE  0E00               	movlw	0
  2825  0028C0  6E11               	movwf	(___lomod@divisor+5)^0,c
  2826  0028C2  0E00               	movlw	0
  2827  0028C4  6E12               	movwf	(___lomod@divisor+6)^0,c
  2828  0028C6  0E00               	movlw	0
  2829  0028C8  6E13               	movwf	(___lomod@divisor+7)^0,c
  2830  0028CA  EC12  F01B         	call	___lomod	;wreg free
  2831  0028CE  C004  F029         	movff	?___lomod,??_utoa
  2832  0028D2  C005  F02A         	movff	?___lomod+1,??_utoa+1
  2833  0028D6  C006  F02B         	movff	?___lomod+2,??_utoa+2
  2834  0028DA  C007  F02C         	movff	?___lomod+3,??_utoa+3
  2835  0028DE  C008  F02D         	movff	?___lomod+4,??_utoa+4
  2836  0028E2  C009  F02E         	movff	?___lomod+5,??_utoa+5
  2837  0028E6  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  2838  0028EA  C00B  F030         	movff	?___lomod+7,??_utoa+7
  2839  0028EE  5029               	movf	??_utoa^0,w,c
  2840  0028F0  0F30               	addlw	48
  2841  0028F2  6EDF               	movwf	indf2,c
  2842  0028F4                     
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2844  0028F4  0631               	decf	utoa@p^0,f,c
  2845  0028F6  A0D8               	btfss	status,0,c
  2846  0028F8  0632               	decf	(utoa@p+1)^0,f,c
  2847  0028FA                     
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2849  0028FA  0633               	decf	utoa@w^0,f,c
  2850  0028FC  A0D8               	btfss	status,0,c
  2851  0028FE  0634               	decf	(utoa@w+1)^0,f,c
  2852  002900                     
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2854  002900  C035  F004         	movff	utoa@n,___lodiv@dividend
  2855  002904  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  2856  002908  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  2857  00290C  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  2858  002910  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  2859  002914  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  2860  002918  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  2861  00291C  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  2862  002920  0E0A               	movlw	10
  2863  002922  6E0C               	movwf	___lodiv@divisor^0,c
  2864  002924  0E00               	movlw	0
  2865  002926  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  2866  002928  0E00               	movlw	0
  2867  00292A  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  2868  00292C  0E00               	movlw	0
  2869  00292E  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  2870  002930  0E00               	movlw	0
  2871  002932  6E10               	movwf	(___lodiv@divisor+4)^0,c
  2872  002934  0E00               	movlw	0
  2873  002936  6E11               	movwf	(___lodiv@divisor+5)^0,c
  2874  002938  0E00               	movlw	0
  2875  00293A  6E12               	movwf	(___lodiv@divisor+6)^0,c
  2876  00293C  0E00               	movlw	0
  2877  00293E  6E13               	movwf	(___lodiv@divisor+7)^0,c
  2878  002940  EC31  F01A         	call	___lodiv	;wreg free
  2879  002944  C004  F035         	movff	?___lodiv,utoa@n
  2880  002948  C005  F036         	movff	?___lodiv+1,utoa@n+1
  2881  00294C  C006  F037         	movff	?___lodiv+2,utoa@n+2
  2882  002950  C007  F038         	movff	?___lodiv+3,utoa@n+3
  2883  002954  C008  F039         	movff	?___lodiv+4,utoa@n+4
  2884  002958  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  2885  00295C  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  2886  002960  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  2887  002964                     l5583:
  2888                           
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2890  002964  503D               	movf	utoa@i^0,w,c
  2891  002966  103E               	iorwf	(utoa@i+1)^0,w,c
  2892  002968  B4D8               	btfsc	status,2,c
  2893  00296A  EFB9  F014         	goto	u7771
  2894  00296E  EFBB  F014         	goto	u7770
  2895  002972                     u7771:
  2896  002972  EFEB  F014         	goto	l5593
  2897  002976                     u7770:
  2898  002976  5035               	movf	utoa@n^0,w,c
  2899  002978  1036               	iorwf	(utoa@n+1)^0,w,c
  2900  00297A  1037               	iorwf	(utoa@n+2)^0,w,c
  2901  00297C  1038               	iorwf	(utoa@n+3)^0,w,c
  2902  00297E  1039               	iorwf	(utoa@n+4)^0,w,c
  2903  002980  103A               	iorwf	(utoa@n+5)^0,w,c
  2904  002982  103B               	iorwf	(utoa@n+6)^0,w,c
  2905  002984  103C               	iorwf	(utoa@n+7)^0,w,c
  2906  002986  A4D8               	btfss	status,2,c
  2907  002988  EFC8  F014         	goto	u7781
  2908  00298C  EFCA  F014         	goto	u7780
  2909  002990                     u7781:
  2910  002990  EF3C  F014         	goto	l5573
  2911  002994                     u7780:
  2912  002994  BE32               	btfsc	(utoa@p+1)^0,7,c
  2913  002996  EFD7  F014         	goto	u7790
  2914  00299A  5032               	movf	(utoa@p+1)^0,w,c
  2915  00299C  E106               	bnz	u7791
  2916  00299E  0431               	decf	utoa@p^0,w,c
  2917  0029A0  B0D8               	btfsc	status,0,c
  2918  0029A2  EFD5  F014         	goto	u7791
  2919  0029A6  EFD7  F014         	goto	u7790
  2920  0029AA                     u7791:
  2921  0029AA  EF3C  F014         	goto	l5573
  2922  0029AE                     u7790:
  2923  0029AE  BE34               	btfsc	(utoa@w+1)^0,7,c
  2924  0029B0  EFE2  F014         	goto	u7801
  2925  0029B4  5034               	movf	(utoa@w+1)^0,w,c
  2926  0029B6  E108               	bnz	u7800
  2927  0029B8  0433               	decf	utoa@w^0,w,c
  2928  0029BA  A0D8               	btfss	status,0,c
  2929  0029BC  EFE2  F014         	goto	u7801
  2930  0029C0  EFE4  F014         	goto	u7800
  2931  0029C4                     u7801:
  2932  0029C4  EFEB  F014         	goto	l5593
  2933  0029C8                     u7800:
  2934  0029C8  B278               	btfsc	_flags^0,1,c
  2935  0029CA  EFE9  F014         	goto	u7811
  2936  0029CE  EFEB  F014         	goto	u7810
  2937  0029D2                     u7811:
  2938  0029D2  EF3C  F014         	goto	l5573
  2939  0029D6                     u7810:
  2940  0029D6                     l5593:
  2941                           
  2942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2943  0029D6  C01F  F014         	movff	utoa@fp,pad@fp
  2944  0029DA  C020  F015         	movff	utoa@fp+1,pad@fp+1
  2945  0029DE  0E00               	movlw	low _dbuf
  2946  0029E0  243D               	addwf	utoa@i^0,w,c
  2947  0029E2  6E16               	movwf	pad@buf^0,c
  2948  0029E4  0E01               	movlw	high _dbuf
  2949  0029E6  203E               	addwfc	(utoa@i+1)^0,w,c
  2950  0029E8  6E17               	movwf	(pad@buf+1)^0,c
  2951  0029EA  C033  F018         	movff	utoa@w,pad@p
  2952  0029EE  C034  F019         	movff	utoa@w+1,pad@p+1
  2953  0029F2  EC41  F01C         	call	_pad	;wreg free
  2954  0029F6  C014  F01F         	movff	?_pad,?_utoa
  2955  0029FA  C015  F020         	movff	?_pad+1,?_utoa+1
  2956  0029FE  0012               	return		;funcret
  2957  002A00                     __end_of_utoa:
  2958                           	opt callstack 0
  2959                           
  2960 ;; *************** function ___lomod *****************
  2961 ;; Defined at:
  2962 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  dividend        8    3[COMRAM] unsigned long long 
  2965 ;;  divisor         8   11[COMRAM] unsigned long long 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  counter         1   19[COMRAM] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  8    3[COMRAM] unsigned long long 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2977 ;;      Params:        16       0       0       0       0       0       0
  2978 ;;      Locals:         1       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0
  2980 ;;      Totals:        17       0       0       0       0       0       0
  2981 ;;Total ram usage:       17 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_utoa
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text7
  2992  003624                     __ptext7:
  2993                           	opt callstack 0
  2994  003624                     ___lomod:
  2995                           	opt callstack 24
  2996  003624  500C               	movf	___lomod@divisor^0,w,c
  2997  003626  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  2998  003628  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  2999  00362A  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  3000  00362C  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  3001  00362E  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  3002  003630  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  3003  003632  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  3004  003634  B4D8               	btfsc	status,2,c
  3005  003636  EF1F  F01B         	goto	u7181
  3006  00363A  EF21  F01B         	goto	u7180
  3007  00363E                     u7181:
  3008  00363E  EF69  F01B         	goto	l763
  3009  003642                     u7180:
  3010  003642  0E01               	movlw	1
  3011  003644  6E14               	movwf	___lomod@counter^0,c
  3012  003646  EF2F  F01B         	goto	l5241
  3013  00364A                     l5239:
  3014  00364A  90D8               	bcf	status,0,c
  3015  00364C  360C               	rlcf	___lomod@divisor^0,f,c
  3016  00364E  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  3017  003650  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  3018  003652  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  3019  003654  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  3020  003656  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  3021  003658  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  3022  00365A  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  3023  00365C  2A14               	incf	___lomod@counter^0,f,c
  3024  00365E                     l5241:
  3025  00365E  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  3026  003660  EF34  F01B         	goto	u7191
  3027  003664  EF36  F01B         	goto	u7190
  3028  003668                     u7191:
  3029  003668  EF25  F01B         	goto	l5239
  3030  00366C                     u7190:
  3031  00366C                     l5243:
  3032  00366C  500C               	movf	___lomod@divisor^0,w,c
  3033  00366E  5C04               	subwf	___lomod@dividend^0,w,c
  3034  003670  500D               	movf	(___lomod@divisor+1)^0,w,c
  3035  003672  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  3036  003674  500E               	movf	(___lomod@divisor+2)^0,w,c
  3037  003676  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  3038  003678  500F               	movf	(___lomod@divisor+3)^0,w,c
  3039  00367A  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  3040  00367C  5010               	movf	(___lomod@divisor+4)^0,w,c
  3041  00367E  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  3042  003680  5011               	movf	(___lomod@divisor+5)^0,w,c
  3043  003682  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  3044  003684  5012               	movf	(___lomod@divisor+6)^0,w,c
  3045  003686  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  3046  003688  5013               	movf	(___lomod@divisor+7)^0,w,c
  3047  00368A  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  3048  00368C  A0D8               	btfss	status,0,c
  3049  00368E  EF4B  F01B         	goto	u7201
  3050  003692  EF4D  F01B         	goto	u7200
  3051  003696                     u7201:
  3052  003696  EF5D  F01B         	goto	l5247
  3053  00369A                     u7200:
  3054  00369A  500C               	movf	___lomod@divisor^0,w,c
  3055  00369C  5E04               	subwf	___lomod@dividend^0,f,c
  3056  00369E  500D               	movf	(___lomod@divisor+1)^0,w,c
  3057  0036A0  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  3058  0036A2  500E               	movf	(___lomod@divisor+2)^0,w,c
  3059  0036A4  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  3060  0036A6  500F               	movf	(___lomod@divisor+3)^0,w,c
  3061  0036A8  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  3062  0036AA  5010               	movf	(___lomod@divisor+4)^0,w,c
  3063  0036AC  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  3064  0036AE  5011               	movf	(___lomod@divisor+5)^0,w,c
  3065  0036B0  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  3066  0036B2  5012               	movf	(___lomod@divisor+6)^0,w,c
  3067  0036B4  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  3068  0036B6  5013               	movf	(___lomod@divisor+7)^0,w,c
  3069  0036B8  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  3070  0036BA                     l5247:
  3071  0036BA  90D8               	bcf	status,0,c
  3072  0036BC  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  3073  0036BE  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  3074  0036C0  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  3075  0036C2  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  3076  0036C4  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  3077  0036C6  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  3078  0036C8  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  3079  0036CA  320C               	rrcf	___lomod@divisor^0,f,c
  3080  0036CC  2E14               	decfsz	___lomod@counter^0,f,c
  3081  0036CE  EF36  F01B         	goto	l5243
  3082  0036D2                     l763:
  3083  0036D2  C004  F004         	movff	___lomod@dividend,?___lomod
  3084  0036D6  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  3085  0036DA  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  3086  0036DE  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  3087  0036E2  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  3088  0036E6  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  3089  0036EA  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  3090  0036EE  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  3091  0036F2  0012               	return		;funcret
  3092  0036F4                     __end_of___lomod:
  3093                           	opt callstack 0
  3094                           
  3095 ;; *************** function ___lodiv *****************
  3096 ;; Defined at:
  3097 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  dividend        8    3[COMRAM] unsigned long long 
  3100 ;;  divisor         8   11[COMRAM] unsigned long long 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  quotient        8   19[COMRAM] unsigned long long 
  3103 ;;  counter         1   27[COMRAM] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  8    3[COMRAM] unsigned long long 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:        16       0       0       0       0       0       0
  3114 ;;      Locals:         9       0       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0
  3116 ;;      Totals:        25       0       0       0       0       0       0
  3117 ;;Total ram usage:       25 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    2
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_utoa
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text8
  3128  003462                     __ptext8:
  3129                           	opt callstack 0
  3130  003462                     ___lodiv:
  3131                           	opt callstack 24
  3132  003462  EE20  F014         	lfsr	2,___lodiv@quotient
  3133  003466  0E07               	movlw	7
  3134  003468                     u7141:
  3135  003468  6ADE               	clrf	postinc2,c
  3136  00346A  06E8               	decf	wreg,f,c
  3137  00346C  E2FD               	bc	u7141
  3138  00346E  500C               	movf	___lodiv@divisor^0,w,c
  3139  003470  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  3140  003472  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  3141  003474  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  3142  003476  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  3143  003478  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  3144  00347A  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  3145  00347C  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  3146  00347E  B4D8               	btfsc	status,2,c
  3147  003480  EF44  F01A         	goto	u7151
  3148  003484  EF46  F01A         	goto	u7150
  3149  003488                     u7151:
  3150  003488  EF98  F01A         	goto	l753
  3151  00348C                     u7150:
  3152  00348C  0E01               	movlw	1
  3153  00348E  6E1C               	movwf	___lodiv@counter^0,c
  3154  003490  EF54  F01A         	goto	l5221
  3155  003494                     l5219:
  3156  003494  90D8               	bcf	status,0,c
  3157  003496  360C               	rlcf	___lodiv@divisor^0,f,c
  3158  003498  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  3159  00349A  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  3160  00349C  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  3161  00349E  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  3162  0034A0  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  3163  0034A2  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  3164  0034A4  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  3165  0034A6  2A1C               	incf	___lodiv@counter^0,f,c
  3166  0034A8                     l5221:
  3167  0034A8  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  3168  0034AA  EF59  F01A         	goto	u7161
  3169  0034AE  EF5B  F01A         	goto	u7160
  3170  0034B2                     u7161:
  3171  0034B2  EF4A  F01A         	goto	l5219
  3172  0034B6                     u7160:
  3173  0034B6                     l5223:
  3174  0034B6  90D8               	bcf	status,0,c
  3175  0034B8  3614               	rlcf	___lodiv@quotient^0,f,c
  3176  0034BA  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  3177  0034BC  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  3178  0034BE  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  3179  0034C0  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  3180  0034C2  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  3181  0034C4  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  3182  0034C6  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  3183  0034C8  500C               	movf	___lodiv@divisor^0,w,c
  3184  0034CA  5C04               	subwf	___lodiv@dividend^0,w,c
  3185  0034CC  500D               	movf	(___lodiv@divisor+1)^0,w,c
  3186  0034CE  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  3187  0034D0  500E               	movf	(___lodiv@divisor+2)^0,w,c
  3188  0034D2  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  3189  0034D4  500F               	movf	(___lodiv@divisor+3)^0,w,c
  3190  0034D6  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  3191  0034D8  5010               	movf	(___lodiv@divisor+4)^0,w,c
  3192  0034DA  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  3193  0034DC  5011               	movf	(___lodiv@divisor+5)^0,w,c
  3194  0034DE  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  3195  0034E0  5012               	movf	(___lodiv@divisor+6)^0,w,c
  3196  0034E2  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  3197  0034E4  5013               	movf	(___lodiv@divisor+7)^0,w,c
  3198  0034E6  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  3199  0034E8  A0D8               	btfss	status,0,c
  3200  0034EA  EF79  F01A         	goto	u7171
  3201  0034EE  EF7B  F01A         	goto	u7170
  3202  0034F2                     u7171:
  3203  0034F2  EF8C  F01A         	goto	l5231
  3204  0034F6                     u7170:
  3205  0034F6  500C               	movf	___lodiv@divisor^0,w,c
  3206  0034F8  5E04               	subwf	___lodiv@dividend^0,f,c
  3207  0034FA  500D               	movf	(___lodiv@divisor+1)^0,w,c
  3208  0034FC  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  3209  0034FE  500E               	movf	(___lodiv@divisor+2)^0,w,c
  3210  003500  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  3211  003502  500F               	movf	(___lodiv@divisor+3)^0,w,c
  3212  003504  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  3213  003506  5010               	movf	(___lodiv@divisor+4)^0,w,c
  3214  003508  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  3215  00350A  5011               	movf	(___lodiv@divisor+5)^0,w,c
  3216  00350C  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  3217  00350E  5012               	movf	(___lodiv@divisor+6)^0,w,c
  3218  003510  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  3219  003512  5013               	movf	(___lodiv@divisor+7)^0,w,c
  3220  003514  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  3221  003516  8014               	bsf	___lodiv@quotient^0,0,c
  3222  003518                     l5231:
  3223  003518  90D8               	bcf	status,0,c
  3224  00351A  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  3225  00351C  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  3226  00351E  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  3227  003520  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  3228  003522  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  3229  003524  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  3230  003526  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  3231  003528  320C               	rrcf	___lodiv@divisor^0,f,c
  3232  00352A  2E1C               	decfsz	___lodiv@counter^0,f,c
  3233  00352C  EF5B  F01A         	goto	l5223
  3234  003530                     l753:
  3235  003530  C014  F004         	movff	___lodiv@quotient,?___lodiv
  3236  003534  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  3237  003538  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  3238  00353C  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  3239  003540  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  3240  003544  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  3241  003548  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  3242  00354C  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  3243  003550  0012               	return		;funcret
  3244  003552                     __end_of___lodiv:
  3245                           	opt callstack 0
  3246                           
  3247 ;; *************** function _strncmp *****************
  3248 ;; Defined at:
  3249 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  3252 ;;		 -> vfpfcnvrt@ct(3), STR_2(31), 
  3253 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  3254 ;;		 -> STR_18(3), STR_13(3), 
  3255 ;;  n               2    7[COMRAM] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  r               2   12[COMRAM] PTR const unsigned char 
  3258 ;;		 -> STR_18(3), STR_13(3), 
  3259 ;;  l               2   10[COMRAM] PTR const unsigned char 
  3260 ;;		 -> vfpfcnvrt@ct(3), STR_2(31), 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  2    3[COMRAM] int 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3270 ;;      Params:         6       0       0       0       0       0       0
  3271 ;;      Locals:         4       0       0       0       0       0       0
  3272 ;;      Temps:          1       0       0       0       0       0       0
  3273 ;;      Totals:        11       0       0       0       0       0       0
  3274 ;;Total ram usage:       11 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    2
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_vfpfcnvrt
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text9
  3285  002F34                     __ptext9:
  3286                           	opt callstack 0
  3287  002F34                     _strncmp:
  3288                           	opt callstack 25
  3289  002F34  C004  F00B         	movff	strncmp@_l,strncmp@l
  3290  002F38  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  3291  002F3C  C006  F00D         	movff	strncmp@_r,strncmp@r
  3292  002F40  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  3293  002F44  0608               	decf	strncmp@n^0,f,c
  3294  002F46  A0D8               	btfss	status,0,c
  3295  002F48  0609               	decf	(strncmp@n+1)^0,f,c
  3296  002F4A  2808               	incf	strncmp@n^0,w,c
  3297  002F4C  E106               	bnz	u7891
  3298  002F4E  2809               	incf	(strncmp@n+1)^0,w,c
  3299  002F50  A4D8               	btfss	status,2,c
  3300  002F52  EFAD  F017         	goto	u7891
  3301  002F56  EFAF  F017         	goto	u7890
  3302  002F5A                     u7891:
  3303  002F5A  EFBC  F017         	goto	l5647
  3304  002F5E                     u7890:
  3305  002F5E  0E00               	movlw	0
  3306  002F60  6E05               	movwf	(?_strncmp+1)^0,c
  3307  002F62  0E00               	movlw	0
  3308  002F64  6E04               	movwf	?_strncmp^0,c
  3309  002F66  EF26  F018         	goto	l1107
  3310  002F6A                     l5645:
  3311  002F6A  4A0B               	infsnz	strncmp@l^0,f,c
  3312  002F6C  2A0C               	incf	(strncmp@l+1)^0,f,c
  3313  002F6E  4A0D               	infsnz	strncmp@r^0,f,c
  3314  002F70  2A0E               	incf	(strncmp@r+1)^0,f,c
  3315  002F72  0608               	decf	strncmp@n^0,f,c
  3316  002F74  A0D8               	btfss	status,0,c
  3317  002F76  0609               	decf	(strncmp@n+1)^0,f,c
  3318  002F78                     l5647:
  3319  002F78  C00B  FFF6         	movff	strncmp@l,tblptrl
  3320  002F7C  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3321  002F80  6AF8               	clrf	tblptru,c
  3322  002F82  0E05               	movlw	(high __ramtop+-1)
  3323  002F84  64F7               	cpfsgt	tblptrh,c
  3324  002F86  D003               	bra	u7907
  3325  002F88  0008               	tblrd		*
  3326  002F8A  50F5               	movf	tablat,w,c
  3327  002F8C  D005               	bra	u7900
  3328  002F8E                     u7907:
  3329  002F8E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3330  002F92  CFF7 FFE2          	movff	tblptrh,fsr1h
  3331  002F96  50E7               	movf	indf1,w,c
  3332  002F98                     u7900:
  3333  002F98  0900               	iorlw	0
  3334  002F9A  B4D8               	btfsc	status,2,c
  3335  002F9C  EFD2  F017         	goto	u7911
  3336  002FA0  EFD4  F017         	goto	u7910
  3337  002FA4                     u7911:
  3338  002FA4  EF0A  F018         	goto	l5655
  3339  002FA8                     u7910:
  3340  002FA8  C00D  FFF6         	movff	strncmp@r,tblptrl
  3341  002FAC  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3342  002FB0                     	if	0	;tblptru may be non-zero
  3343  002FB0                     	endif
  3344  002FB0                     	if	0	;tblptru may be non-zero
  3345  002FB0                     	endif
  3346  002FB0  0008               	tblrd		*
  3347  002FB2  50F5               	movf	tablat,w,c
  3348  002FB4  0900               	iorlw	0
  3349  002FB6  B4D8               	btfsc	status,2,c
  3350  002FB8  EFE0  F017         	goto	u7921
  3351  002FBC  EFE2  F017         	goto	u7920
  3352  002FC0                     u7921:
  3353  002FC0  EF0A  F018         	goto	l5655
  3354  002FC4                     u7920:
  3355  002FC4  5008               	movf	strncmp@n^0,w,c
  3356  002FC6  1009               	iorwf	(strncmp@n+1)^0,w,c
  3357  002FC8  B4D8               	btfsc	status,2,c
  3358  002FCA  EFE9  F017         	goto	u7931
  3359  002FCE  EFEB  F017         	goto	u7930
  3360  002FD2                     u7931:
  3361  002FD2  EF0A  F018         	goto	l5655
  3362  002FD6                     u7930:
  3363  002FD6  C00D  FFF6         	movff	strncmp@r,tblptrl
  3364  002FDA  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3365  002FDE                     	if	0	;tblptru may be non-zero
  3366  002FDE                     	endif
  3367  002FDE                     	if	0	;tblptru may be non-zero
  3368  002FDE                     	endif
  3369  002FDE  0008               	tblrd		*
  3370  002FE0  CFF5 F00A          	movff	tablat,??_strncmp
  3371  002FE4  C00B  FFF6         	movff	strncmp@l,tblptrl
  3372  002FE8  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3373  002FEC  6AF8               	clrf	tblptru,c
  3374  002FEE  0E05               	movlw	(high __ramtop+-1)
  3375  002FF0  64F7               	cpfsgt	tblptrh,c
  3376  002FF2  D003               	bra	u7947
  3377  002FF4  0008               	tblrd		*
  3378  002FF6  50F5               	movf	tablat,w,c
  3379  002FF8  D005               	bra	u7945
  3380  002FFA                     u7947:
  3381  002FFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3382  002FFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3383  003002  50E7               	movf	indf1,w,c
  3384  003004                     u7945:
  3385  003004  180A               	xorwf	??_strncmp^0,w,c
  3386  003006  B4D8               	btfsc	status,2,c
  3387  003008  EF08  F018         	goto	u7941
  3388  00300C  EF0A  F018         	goto	u7940
  3389  003010                     u7941:
  3390  003010  EFB5  F017         	goto	l5645
  3391  003014                     u7940:
  3392  003014                     l5655:
  3393  003014  C00B  FFF6         	movff	strncmp@l,tblptrl
  3394  003018  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3395  00301C  6AF8               	clrf	tblptru,c
  3396  00301E  0E05               	movlw	(high __ramtop+-1)
  3397  003020  64F7               	cpfsgt	tblptrh,c
  3398  003022  D003               	bra	u7957
  3399  003024  0008               	tblrd		*
  3400  003026  50F5               	movf	tablat,w,c
  3401  003028  D005               	bra	u7950
  3402  00302A                     u7957:
  3403  00302A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3404  00302E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3405  003032  50E7               	movf	indf1,w,c
  3406  003034                     u7950:
  3407  003034  6E0A               	movwf	??_strncmp^0,c
  3408  003036  C00D  FFF6         	movff	strncmp@r,tblptrl
  3409  00303A  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3410  00303E                     	if	0	;tblptru may be non-zero
  3411  00303E                     	endif
  3412  00303E                     	if	0	;tblptru may be non-zero
  3413  00303E                     	endif
  3414  00303E  0008               	tblrd		*
  3415  003040  50F5               	movf	tablat,w,c
  3416  003042  5C0A               	subwf	??_strncmp^0,w,c
  3417  003044  6E04               	movwf	?_strncmp^0,c
  3418  003046  6A05               	clrf	(?_strncmp+1)^0,c
  3419  003048  A0D8               	btfss	status,0,c
  3420  00304A  0605               	decf	(?_strncmp+1)^0,f,c
  3421  00304C                     l1107:
  3422  00304C  0012               	return		;funcret
  3423  00304E                     __end_of_strncmp:
  3424                           	opt callstack 0
  3425                           
  3426 ;; *************** function _efgtoa *****************
  3427 ;; Defined at:
  3428 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  3431 ;;		 -> sprintf@f(6), 
  3432 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  3433 ;;  c               1   93[COMRAM] unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  u               4   52[BANK0 ] unsigned char 
  3436 ;;  g               4   44[BANK0 ] unsigned char 
  3437 ;;  l               4   38[BANK0 ] unsigned char 
  3438 ;;  h               4   34[BANK0 ] unsigned char 
  3439 ;;  ou              4    0[BANK0 ] unsigned char 
  3440 ;;  n               2   50[BANK0 ] int 
  3441 ;;  e               2   48[BANK0 ] int 
  3442 ;;  i               2   42[BANK0 ] int 
  3443 ;;  w               2   31[BANK0 ] int 
  3444 ;;  p               2   28[BANK0 ] int 
  3445 ;;  sign            2   26[BANK0 ] int 
  3446 ;;  d               2   24[BANK0 ] int 
  3447 ;;  ne              2   22[BANK0 ] int 
  3448 ;;  m               2   20[BANK0 ] int 
  3449 ;;  pp              2   18[BANK0 ] int 
  3450 ;;  t               2   16[BANK0 ] int 
  3451 ;;  mode            1   33[BANK0 ] unsigned char 
  3452 ;;  nmode           1   30[BANK0 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  2   87[COMRAM] int 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3462 ;;      Params:         7       0       0       0       0       0       0
  3463 ;;      Locals:         0      56       0       0       0       0       0
  3464 ;;      Temps:          5       0       0       0       0       0       0
  3465 ;;      Totals:        12      56       0       0       0       0       0
  3466 ;;Total ram usage:       68 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    6
  3469 ;; This function calls:
  3470 ;;		___awdiv
  3471 ;;		___awmod
  3472 ;;		___fladd
  3473 ;;		___fldiv
  3474 ;;		___fleq
  3475 ;;		___flge
  3476 ;;		___flmul
  3477 ;;		___flneg
  3478 ;;		___flsub
  3479 ;;		___fltol
  3480 ;;		___fpclassifyf
  3481 ;;		_floorf
  3482 ;;		_isupper
  3483 ;;		_pad
  3484 ;;		_strcpy
  3485 ;;		_tolower
  3486 ;; This function is called by:
  3487 ;;		_vfpfcnvrt
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text10
  3492  00065A                     __ptext10:
  3493                           	opt callstack 0
  3494  00065A                     _efgtoa:
  3495                           	opt callstack 21
  3496  00065A                     
  3497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3498  00065A  0E00               	movlw	0
  3499  00065C  0100               	movlb	0	; () banked
  3500  00065E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3501  000660  0E00               	movlw	0
  3502  000662  6F9A               	movwf	efgtoa@sign& (0+255),b
  3503  000664                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3506  000664  C05A  F0AC         	movff	efgtoa@f,efgtoa@g
  3507  000668  C05B  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3508  00066C  C05C  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3509  000670  C05D  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3510  000674                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3513  000674  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3514  000676  EF41  F003         	goto	u7230
  3515  00067A  EF3F  F003         	goto	u7231
  3516  00067E                     u7231:
  3517  00067E  EF57  F003         	goto	l5273
  3518  000682                     u7230:
  3519  000682                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3522  000682  0E00               	movlw	0
  3523  000684  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3524  000686  0E01               	movlw	1
  3525  000688  6F9A               	movwf	efgtoa@sign& (0+255),b
  3526  00068A                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3529  00068A  C0AC  F004         	movff	efgtoa@g,___flneg@f1
  3530  00068E  C0AD  F005         	movff	efgtoa@g+1,___flneg@f1+1
  3531  000692  C0AE  F006         	movff	efgtoa@g+2,___flneg@f1+2
  3532  000696  C0AF  F007         	movff	efgtoa@g+3,___flneg@f1+3
  3533  00069A  ECF8  F01E         	call	___flneg	;wreg free
  3534  00069E  C004  F0AC         	movff	?___flneg,efgtoa@g
  3535  0006A2  C005  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3536  0006A6  C006  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3537  0006AA  C007  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3538  0006AE                     l5273:
  3539                           
  3540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3541  0006AE  0E00               	movlw	0
  3542  0006B0  0100               	movlb	0	; () banked
  3543  0006B2  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3544  0006B4  0E00               	movlw	0
  3545  0006B6  6FB2               	movwf	efgtoa@n& (0+255),b
  3546  0006B8                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3549  0006B8  C0F6  F09F         	movff	_width,efgtoa@w
  3550  0006BC  C0F7  F0A0         	movff	_width+1,efgtoa@w+1
  3551  0006C0                     
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3554  0006C0  519A               	movf	efgtoa@sign& (0+255),w,b
  3555  0006C2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3556  0006C4  A4D8               	btfss	status,2,c
  3557  0006C6  EF67  F003         	goto	u7241
  3558  0006CA  EF69  F003         	goto	u7240
  3559  0006CE                     u7241:
  3560  0006CE  EF70  F003         	goto	l5281
  3561  0006D2                     u7240:
  3562  0006D2                     
  3563                           ; BSR set to: 0
  3564  0006D2  A478               	btfss	_flags^0,2,c
  3565  0006D4  EF6E  F003         	goto	u7251
  3566  0006D8  EF70  F003         	goto	u7250
  3567  0006DC                     u7251:
  3568  0006DC  EF8A  F003         	goto	l5293
  3569  0006E0                     u7250:
  3570  0006E0                     l5281:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3574  0006E0  519A               	movf	efgtoa@sign& (0+255),w,b
  3575  0006E2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3576  0006E4  A4D8               	btfss	status,2,c
  3577  0006E6  EF77  F003         	goto	u7261
  3578  0006EA  EF79  F003         	goto	u7260
  3579  0006EE                     u7261:
  3580  0006EE  EF7F  F003         	goto	l5285
  3581  0006F2                     u7260:
  3582  0006F2                     
  3583                           ; BSR set to: 0
  3584  0006F2  0E00               	movlw	0
  3585  0006F4  6F85               	movwf	(_efgtoa$656+1)& (0+255),b
  3586  0006F6  0E2B               	movlw	43
  3587  0006F8  6F84               	movwf	_efgtoa$656& (0+255),b
  3588  0006FA  EF83  F003         	goto	l5287
  3589  0006FE                     l5285:
  3590                           
  3591                           ; BSR set to: 0
  3592  0006FE  0E00               	movlw	0
  3593  000700  6F85               	movwf	(_efgtoa$656+1)& (0+255),b
  3594  000702  0E2D               	movlw	45
  3595  000704  6F84               	movwf	_efgtoa$656& (0+255),b
  3596  000706                     l5287:
  3597                           
  3598                           ; BSR set to: 0
  3599  000706  C084  F100         	movff	_efgtoa$656,_dbuf
  3600  00070A                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3603  00070A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3604  00070C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3605  00070E                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3608  00070E  079F               	decf	efgtoa@w& (0+255),f,b
  3609  000710  A0D8               	btfss	status,0,c
  3610  000712  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3611  000714                     l5293:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3615  000714  C0AC  F004         	movff	efgtoa@g,___fpclassifyf@x
  3616  000718  C0AD  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3617  00071C  C0AE  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3618  000720  C0AF  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3619  000724  ECB2  F019         	call	___fpclassifyf	;wreg free
  3620  000728  0404               	decf	?___fpclassifyf^0,w,c
  3621  00072A  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3622  00072C  A4D8               	btfss	status,2,c
  3623  00072E  EF9B  F003         	goto	u7271
  3624  000732  EF9D  F003         	goto	u7270
  3625  000736                     u7271:
  3626  000736  EFF4  F003         	goto	l5311
  3627  00073A                     u7270:
  3628  00073A  0EBF               	movlw	191
  3629  00073C  6E5F               	movwf	??_efgtoa^0,c
  3630  00073E  0EFF               	movlw	255
  3631  000740  6E60               	movwf	(??_efgtoa+1)^0,c
  3632  000742  505E               	movf	efgtoa@c^0,w,c
  3633  000744  6E61               	movwf	(??_efgtoa+2)^0,c
  3634  000746  6A62               	clrf	(??_efgtoa+3)^0,c
  3635  000748  505F               	movf	??_efgtoa^0,w,c
  3636  00074A  2661               	addwf	(??_efgtoa+2)^0,f,c
  3637  00074C  5060               	movf	(??_efgtoa+1)^0,w,c
  3638  00074E  2262               	addwfc	(??_efgtoa+3)^0,f,c
  3639  000750  5062               	movf	(??_efgtoa+3)^0,w,c
  3640  000752  E10A               	bnz	u7280
  3641  000754  0E1A               	movlw	26
  3642  000756  5C61               	subwf	(??_efgtoa+2)^0,w,c
  3643  000758  A0D8               	btfss	status,0,c
  3644  00075A  EFB1  F003         	goto	u7281
  3645  00075E  EFB4  F003         	goto	u7280
  3646  000762                     u7281:
  3647  000762  0E01               	movlw	1
  3648  000764  EFB5  F003         	goto	u7290
  3649  000768                     u7280:
  3650  000768  0E00               	movlw	0
  3651  00076A                     u7290:
  3652  00076A  0100               	movlb	0	; () banked
  3653  00076C  6F86               	movwf	_efgtoa$657& (0+255),b
  3654  00076E  6B87               	clrf	(_efgtoa$657+1)& (0+255),b
  3655  000770                     
  3656                           ; BSR set to: 0
  3657  000770  5186               	movf	_efgtoa$657& (0+255),w,b
  3658  000772  1187               	iorwf	(_efgtoa$657+1)& (0+255),w,b
  3659  000774  B4D8               	btfsc	status,2,c
  3660  000776  EFBF  F003         	goto	u7301
  3661  00077A  EFC1  F003         	goto	u7300
  3662  00077E                     u7301:
  3663  00077E  EFCF  F003         	goto	l5303
  3664  000782                     u7300:
  3665  000782                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3668  000782  0E00               	movlw	low _dbuf
  3669  000784  25B2               	addwf	efgtoa@n& (0+255),w,b
  3670  000786  6E04               	movwf	strcpy@dest^0,c
  3671  000788  0E01               	movlw	high _dbuf
  3672  00078A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3673  00078C  6E05               	movwf	(strcpy@dest+1)^0,c
  3674  00078E  0E42               	movlw	low STR_3
  3675  000790  6E06               	movwf	strcpy@src^0,c
  3676  000792  0E06               	movlw	high STR_3
  3677  000794  6E07               	movwf	(strcpy@src+1)^0,c
  3678  000796  EC14  F01E         	call	_strcpy	;wreg free
  3679                           
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3681  00079A  EFDB  F003         	goto	l5305
  3682  00079E                     l5303:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3686  00079E  0E00               	movlw	low _dbuf
  3687  0007A0  25B2               	addwf	efgtoa@n& (0+255),w,b
  3688  0007A2  6E04               	movwf	strcpy@dest^0,c
  3689  0007A4  0E01               	movlw	high _dbuf
  3690  0007A6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3691  0007A8  6E05               	movwf	(strcpy@dest+1)^0,c
  3692  0007AA  0E4A               	movlw	low STR_4
  3693  0007AC  6E06               	movwf	strcpy@src^0,c
  3694  0007AE  0E06               	movlw	high STR_4
  3695  0007B0  6E07               	movwf	(strcpy@src+1)^0,c
  3696  0007B2  EC14  F01E         	call	_strcpy	;wreg free
  3697  0007B6                     l5305:
  3698                           
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3700  0007B6  0100               	movlb	0	; () banked
  3701  0007B8  0EFD               	movlw	253
  3702  0007BA  279F               	addwf	efgtoa@w& (0+255),f,b
  3703  0007BC  0EFF               	movlw	255
  3704  0007BE  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3705  0007C0                     l5307:
  3706                           
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3708  0007C0  C058  F014         	movff	efgtoa@fp,pad@fp
  3709  0007C4  C059  F015         	movff	efgtoa@fp+1,pad@fp+1
  3710  0007C8  0E00               	movlw	low _dbuf
  3711  0007CA  6E16               	movwf	pad@buf^0,c
  3712  0007CC  0E01               	movlw	high _dbuf
  3713  0007CE  6E17               	movwf	(pad@buf+1)^0,c
  3714  0007D0  C09F  F018         	movff	efgtoa@w,pad@p
  3715  0007D4  C0A0  F019         	movff	efgtoa@w+1,pad@p+1
  3716  0007D8  EC41  F01C         	call	_pad	;wreg free
  3717  0007DC  C014  F058         	movff	?_pad,?_efgtoa
  3718  0007E0  C015  F059         	movff	?_pad+1,?_efgtoa+1
  3719  0007E4  EF05  F009         	goto	l169
  3720  0007E8                     l5311:
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3723  0007E8  C0AC  F004         	movff	efgtoa@g,___fpclassifyf@x
  3724  0007EC  C0AD  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3725  0007F0  C0AE  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3726  0007F4  C0AF  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3727  0007F8  ECB2  F019         	call	___fpclassifyf	;wreg free
  3728  0007FC  5004               	movf	?___fpclassifyf^0,w,c
  3729  0007FE  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3730  000800  A4D8               	btfss	status,2,c
  3731  000802  EF05  F004         	goto	u7311
  3732  000806  EF07  F004         	goto	u7310
  3733  00080A                     u7311:
  3734  00080A  EF47  F004         	goto	l5329
  3735  00080E                     u7310:
  3736  00080E  0EBF               	movlw	191
  3737  000810  6E5F               	movwf	??_efgtoa^0,c
  3738  000812  0EFF               	movlw	255
  3739  000814  6E60               	movwf	(??_efgtoa+1)^0,c
  3740  000816  505E               	movf	efgtoa@c^0,w,c
  3741  000818  6E61               	movwf	(??_efgtoa+2)^0,c
  3742  00081A  6A62               	clrf	(??_efgtoa+3)^0,c
  3743  00081C  505F               	movf	??_efgtoa^0,w,c
  3744  00081E  2661               	addwf	(??_efgtoa+2)^0,f,c
  3745  000820  5060               	movf	(??_efgtoa+1)^0,w,c
  3746  000822  2262               	addwfc	(??_efgtoa+3)^0,f,c
  3747  000824  5062               	movf	(??_efgtoa+3)^0,w,c
  3748  000826  E10A               	bnz	u7320
  3749  000828  0E1A               	movlw	26
  3750  00082A  5C61               	subwf	(??_efgtoa+2)^0,w,c
  3751  00082C  A0D8               	btfss	status,0,c
  3752  00082E  EF1B  F004         	goto	u7321
  3753  000832  EF1E  F004         	goto	u7320
  3754  000836                     u7321:
  3755  000836  0E01               	movlw	1
  3756  000838  EF1F  F004         	goto	u7330
  3757  00083C                     u7320:
  3758  00083C  0E00               	movlw	0
  3759  00083E                     u7330:
  3760  00083E  0100               	movlb	0	; () banked
  3761  000840  6F88               	movwf	_efgtoa$662& (0+255),b
  3762  000842  6B89               	clrf	(_efgtoa$662+1)& (0+255),b
  3763  000844                     
  3764                           ; BSR set to: 0
  3765  000844  5188               	movf	_efgtoa$662& (0+255),w,b
  3766  000846  1189               	iorwf	(_efgtoa$662+1)& (0+255),w,b
  3767  000848  B4D8               	btfsc	status,2,c
  3768  00084A  EF29  F004         	goto	u7341
  3769  00084E  EF2B  F004         	goto	u7340
  3770  000852                     u7341:
  3771  000852  EF39  F004         	goto	l5321
  3772  000856                     u7340:
  3773  000856                     
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3776  000856  0E00               	movlw	low _dbuf
  3777  000858  25B2               	addwf	efgtoa@n& (0+255),w,b
  3778  00085A  6E04               	movwf	strcpy@dest^0,c
  3779  00085C  0E01               	movlw	high _dbuf
  3780  00085E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3781  000860  6E05               	movwf	(strcpy@dest+1)^0,c
  3782  000862  0E46               	movlw	low STR_7
  3783  000864  6E06               	movwf	strcpy@src^0,c
  3784  000866  0E06               	movlw	high STR_7
  3785  000868  6E07               	movwf	(strcpy@src+1)^0,c
  3786  00086A  EC14  F01E         	call	_strcpy	;wreg free
  3787                           
  3788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3789  00086E  EFDB  F003         	goto	l5305
  3790  000872                     l5321:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3794  000872  0E00               	movlw	low _dbuf
  3795  000874  25B2               	addwf	efgtoa@n& (0+255),w,b
  3796  000876  6E04               	movwf	strcpy@dest^0,c
  3797  000878  0E01               	movlw	high _dbuf
  3798  00087A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3799  00087C  6E05               	movwf	(strcpy@dest+1)^0,c
  3800  00087E  0E4E               	movlw	low STR_8
  3801  000880  6E06               	movwf	strcpy@src^0,c
  3802  000882  0E06               	movlw	high STR_8
  3803  000884  6E07               	movwf	(strcpy@src+1)^0,c
  3804  000886  EC14  F01E         	call	_strcpy	;wreg free
  3805  00088A  EFDB  F003         	goto	l5305
  3806  00088E                     l5329:
  3807                           
  3808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3809  00088E  0E00               	movlw	0
  3810  000890  0100               	movlb	0	; () banked
  3811  000892  6FB4               	movwf	efgtoa@u& (0+255),b
  3812  000894  0E00               	movlw	0
  3813  000896  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3814  000898  0E80               	movlw	128
  3815  00089A  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3816  00089C  0E3F               	movlw	63
  3817  00089E  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3818                           
  3819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3820  0008A0  0E00               	movlw	0
  3821  0008A2  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3822  0008A4  0E00               	movlw	0
  3823  0008A6  6FB0               	movwf	efgtoa@e& (0+255),b
  3824  0008A8                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3827  0008A8  C0AC  F004         	movff	efgtoa@g,___fleq@ff1
  3828  0008AC  C0AD  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  3829  0008B0  C0AE  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  3830  0008B4  C0AF  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  3831  0008B8  0E00               	movlw	0
  3832  0008BA  6E08               	movwf	___fleq@ff2^0,c
  3833  0008BC  0E00               	movlw	0
  3834  0008BE  6E09               	movwf	(___fleq@ff2+1)^0,c
  3835  0008C0  0E00               	movlw	0
  3836  0008C2  6E0A               	movwf	(___fleq@ff2+2)^0,c
  3837  0008C4  0E00               	movlw	0
  3838  0008C6  6E0B               	movwf	(___fleq@ff2+3)^0,c
  3839  0008C8  ECFA  F01C         	call	___fleq	;wreg free
  3840  0008CC  B0D8               	btfsc	status,0,c
  3841  0008CE  EF6B  F004         	goto	u7351
  3842  0008D2  EF6D  F004         	goto	u7350
  3843  0008D6                     u7351:
  3844  0008D6  EFF0  F004         	goto	l5347
  3845  0008DA                     u7350:
  3846  0008DA  EF8C  F004         	goto	l5339
  3847  0008DE                     l5335:
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3850  0008DE  C0B4  F012         	movff	efgtoa@u,___flmul@b
  3851  0008E2  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  3852  0008E6  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  3853  0008EA  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  3854  0008EE  0E00               	movlw	0
  3855  0008F0  6E16               	movwf	___flmul@a^0,c
  3856  0008F2  0E00               	movlw	0
  3857  0008F4  6E17               	movwf	(___flmul@a+1)^0,c
  3858  0008F6  0E20               	movlw	32
  3859  0008F8  6E18               	movwf	(___flmul@a+2)^0,c
  3860  0008FA  0E41               	movlw	65
  3861  0008FC  6E19               	movwf	(___flmul@a+3)^0,c
  3862  0008FE  EC15  F00F         	call	___flmul	;wreg free
  3863  000902  C012  F0B4         	movff	?___flmul,efgtoa@u
  3864  000906  C013  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3865  00090A  C014  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3866  00090E  C015  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3867  000912                     
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3869  000912  0100               	movlb	0	; () banked
  3870  000914  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3871  000916  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3872  000918                     l5339:
  3873                           
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3875  000918  C0AC  F02B         	movff	efgtoa@g,___flge@ff1
  3876  00091C  C0AD  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  3877  000920  C0AE  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  3878  000924  C0AF  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  3879  000928  0E00               	movlw	0
  3880  00092A  6E16               	movwf	___flmul@a^0,c
  3881  00092C  0E00               	movlw	0
  3882  00092E  6E17               	movwf	(___flmul@a+1)^0,c
  3883  000930  0E20               	movlw	32
  3884  000932  6E18               	movwf	(___flmul@a+2)^0,c
  3885  000934  0E41               	movlw	65
  3886  000936  6E19               	movwf	(___flmul@a+3)^0,c
  3887  000938  C0B4  F012         	movff	efgtoa@u,___flmul@b
  3888  00093C  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  3889  000940  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  3890  000944  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  3891  000948  EC15  F00F         	call	___flmul	;wreg free
  3892  00094C  C012  F02F         	movff	?___flmul,___flge@ff2
  3893  000950  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  3894  000954  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  3895  000958  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  3896  00095C  EC30  F019         	call	___flge	;wreg free
  3897  000960  B0D8               	btfsc	status,0,c
  3898  000962  EFB5  F004         	goto	u7361
  3899  000966  EFB7  F004         	goto	u7360
  3900  00096A                     u7361:
  3901  00096A  EF6F  F004         	goto	l5335
  3902  00096E                     u7360:
  3903  00096E  EFD7  F004         	goto	l5345
  3904  000972                     l5341:
  3905                           
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3907  000972  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  3908  000976  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  3909  00097A  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  3910  00097E  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  3911  000982  0E00               	movlw	0
  3912  000984  6E2F               	movwf	___fldiv@a^0,c
  3913  000986  0E00               	movlw	0
  3914  000988  6E30               	movwf	(___fldiv@a+1)^0,c
  3915  00098A  0E20               	movlw	32
  3916  00098C  6E31               	movwf	(___fldiv@a+2)^0,c
  3917  00098E  0E41               	movlw	65
  3918  000990  6E32               	movwf	(___fldiv@a+3)^0,c
  3919  000992  EC2A  F011         	call	___fldiv	;wreg free
  3920  000996  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  3921  00099A  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3922  00099E  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3923  0009A2  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3924  0009A6                     
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3926  0009A6  0100               	movlb	0	; () banked
  3927  0009A8  07B0               	decf	efgtoa@e& (0+255),f,b
  3928  0009AA  A0D8               	btfss	status,0,c
  3929  0009AC  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3930  0009AE                     l5345:
  3931                           
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3933  0009AE  C0AC  F02B         	movff	efgtoa@g,___flge@ff1
  3934  0009B2  C0AD  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  3935  0009B6  C0AE  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  3936  0009BA  C0AF  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  3937  0009BE  C0B4  F02F         	movff	efgtoa@u,___flge@ff2
  3938  0009C2  C0B5  F030         	movff	efgtoa@u+1,___flge@ff2+1
  3939  0009C6  C0B6  F031         	movff	efgtoa@u+2,___flge@ff2+2
  3940  0009CA  C0B7  F032         	movff	efgtoa@u+3,___flge@ff2+3
  3941  0009CE  EC30  F019         	call	___flge	;wreg free
  3942  0009D2  A0D8               	btfss	status,0,c
  3943  0009D4  EFEE  F004         	goto	u7371
  3944  0009D8  EFF0  F004         	goto	u7370
  3945  0009DC                     u7371:
  3946  0009DC  EFB9  F004         	goto	l5341
  3947  0009E0                     u7370:
  3948  0009E0                     l5347:
  3949                           
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3951  0009E0  C05E  F00A         	movff	efgtoa@c,tolower@c
  3952  0009E4  6A0B               	clrf	(tolower@c+1)^0,c
  3953  0009E6  ECB5  F01D         	call	_tolower	;wreg free
  3954  0009EA  500A               	movf	?_tolower^0,w,c
  3955  0009EC  0100               	movlb	0	; () banked
  3956  0009EE  6FA1               	movwf	efgtoa@mode& (0+255),b
  3957  0009F0                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3960  0009F0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3961  0009F4                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3964  0009F4  0E67               	movlw	103
  3965  0009F6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3966  0009F8  A4D8               	btfss	status,2,c
  3967  0009FA  EF01  F005         	goto	u7381
  3968  0009FE  EF03  F005         	goto	u7380
  3969  000A02                     u7381:
  3970  000A02  EF29  F005         	goto	l5361
  3971  000A06                     u7380:
  3972  000A06                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3975  000A06  5076               	movf	_prec^0,w,c
  3976  000A08  1077               	iorwf	(_prec+1)^0,w,c
  3977  000A0A  A4D8               	btfss	status,2,c
  3978  000A0C  EF0A  F005         	goto	u7391
  3979  000A10  EF0C  F005         	goto	u7390
  3980  000A14                     u7391:
  3981  000A14  EF10  F005         	goto	l5357
  3982  000A18                     u7390:
  3983  000A18                     
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3986  000A18  0E00               	movlw	0
  3987  000A1A  6E77               	movwf	(_prec+1)^0,c
  3988  000A1C  0E01               	movlw	1
  3989  000A1E  6E76               	movwf	_prec^0,c
  3990  000A20                     l5357:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3994  000A20  BE77               	btfsc	(_prec+1)^0,7,c
  3995  000A22  EF1D  F005         	goto	u7400
  3996  000A26  5077               	movf	(_prec+1)^0,w,c
  3997  000A28  E106               	bnz	u7401
  3998  000A2A  0476               	decf	_prec^0,w,c
  3999  000A2C  B0D8               	btfsc	status,0,c
  4000  000A2E  EF1B  F005         	goto	u7401
  4001  000A32  EF1D  F005         	goto	u7400
  4002  000A36                     u7401:
  4003  000A36  EF23  F005         	goto	l187
  4004  000A3A                     u7400:
  4005  000A3A                     l5359:
  4006                           
  4007                           ; BSR set to: 0
  4008  000A3A  0E00               	movlw	0
  4009  000A3C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4010  000A3E  0E06               	movlw	6
  4011  000A40  6F9C               	movwf	efgtoa@p& (0+255),b
  4012  000A42  EF32  F005         	goto	l5367
  4013  000A46                     l187:
  4014                           
  4015                           ; BSR set to: 0
  4016  000A46  C076  F09C         	movff	_prec,efgtoa@p
  4017  000A4A  C077  F09D         	movff	_prec+1,efgtoa@p+1
  4018  000A4E  EF32  F005         	goto	l5367
  4019  000A52                     l5361:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4023  000A52  BE77               	btfsc	(_prec+1)^0,7,c
  4024  000A54  EF2E  F005         	goto	u7411
  4025  000A58  EF30  F005         	goto	u7410
  4026  000A5C                     u7411:
  4027  000A5C  EF1D  F005         	goto	l5359
  4028  000A60                     u7410:
  4029  000A60  EF23  F005         	goto	l187
  4030  000A64                     l5367:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4034  000A64  0E67               	movlw	103
  4035  000A66  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4036  000A68  A4D8               	btfss	status,2,c
  4037  000A6A  EF39  F005         	goto	u7421
  4038  000A6E  EF3B  F005         	goto	u7420
  4039  000A72                     u7421:
  4040  000A72  EF6A  F005         	goto	l5377
  4041  000A76                     u7420:
  4042  000A76                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4045  000A76  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4046  000A78  EF49  F005         	goto	u7430
  4047  000A7C  0EFC               	movlw	252
  4048  000A7E  5DB0               	subwf	efgtoa@e& (0+255),w,b
  4049  000A80  0EFF               	movlw	255
  4050  000A82  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4051  000A84  A0D8               	btfss	status,0,c
  4052  000A86  EF47  F005         	goto	u7431
  4053  000A8A  EF49  F005         	goto	u7430
  4054  000A8E                     u7431:
  4055  000A8E  EF68  F005         	goto	l5375
  4056  000A92                     u7430:
  4057  000A92                     
  4058                           ; BSR set to: 0
  4059  000A92  0EFF               	movlw	255
  4060  000A94  6E5F               	movwf	??_efgtoa^0,c
  4061  000A96  0EFF               	movlw	255
  4062  000A98  6E60               	movwf	(??_efgtoa+1)^0,c
  4063  000A9A  C09C  F061         	movff	efgtoa@p,??_efgtoa+2
  4064  000A9E  C09D  F062         	movff	efgtoa@p+1,??_efgtoa+3
  4065  000AA2  505F               	movf	??_efgtoa^0,w,c
  4066  000AA4  2661               	addwf	(??_efgtoa+2)^0,f,c
  4067  000AA6  5060               	movf	(??_efgtoa+1)^0,w,c
  4068  000AA8  2262               	addwfc	(??_efgtoa+3)^0,f,c
  4069  000AAA  51B0               	movf	efgtoa@e& (0+255),w,b
  4070  000AAC  5C61               	subwf	(??_efgtoa+2)^0,w,c
  4071  000AAE  5062               	movf	(??_efgtoa+3)^0,w,c
  4072  000AB0  0A80               	xorlw	128
  4073  000AB2  6E63               	movwf	(??_efgtoa+4)^0,c
  4074  000AB4  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4075  000AB6  0A80               	xorlw	128
  4076  000AB8  5863               	subwfb	(??_efgtoa+4)^0,w,c
  4077  000ABA  A0D8               	btfss	status,0,c
  4078  000ABC  EF62  F005         	goto	u7441
  4079  000AC0  EF64  F005         	goto	u7440
  4080  000AC4                     u7441:
  4081  000AC4  EF68  F005         	goto	l5375
  4082  000AC8                     u7440:
  4083  000AC8                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4086  000AC8  0E66               	movlw	102
  4087  000ACA  6F9E               	movwf	efgtoa@nmode& (0+255),b
  4088                           
  4089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  4090  000ACC  EF6A  F005         	goto	l5377
  4091  000AD0                     l5375:
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4095  000AD0  0E65               	movlw	101
  4096  000AD2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  4097  000AD4                     l5377:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4101  000AD4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  4102  000AD8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  4103  000ADC                     
  4104                           ; BSR set to: 0
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4106  000ADC  0E67               	movlw	103
  4107  000ADE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4108  000AE0  A4D8               	btfss	status,2,c
  4109  000AE2  EF75  F005         	goto	u7451
  4110  000AE6  EF77  F005         	goto	u7450
  4111  000AEA                     u7451:
  4112  000AEA  EF87  F005         	goto	l5385
  4113  000AEE                     u7450:
  4114  000AEE                     
  4115                           ; BSR set to: 0
  4116  000AEE  0E66               	movlw	102
  4117  000AF0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4118  000AF2  A4D8               	btfss	status,2,c
  4119  000AF4  EF7E  F005         	goto	u7461
  4120  000AF8  EF80  F005         	goto	u7460
  4121  000AFC                     u7461:
  4122  000AFC  EF89  F005         	goto	l5387
  4123  000B00                     u7460:
  4124  000B00                     
  4125                           ; BSR set to: 0
  4126  000B00  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4127  000B02  EF87  F005         	goto	u7470
  4128  000B06  EF85  F005         	goto	u7471
  4129  000B0A                     u7471:
  4130  000B0A  EF89  F005         	goto	l5387
  4131  000B0E                     u7470:
  4132  000B0E                     l5385:
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4136  000B0E  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4137  000B10  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4138  000B12                     l5387:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4142  000B12  0E66               	movlw	102
  4143  000B14  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4144  000B16  A4D8               	btfss	status,2,c
  4145  000B18  EF90  F005         	goto	u7481
  4146  000B1C  EF92  F005         	goto	u7480
  4147  000B20                     u7481:
  4148  000B20  EFB2  F005         	goto	l5397
  4149  000B24                     u7480:
  4150  000B24                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4153  000B24  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4154  000B26  EF99  F005         	goto	u7490
  4155  000B2A  EF97  F005         	goto	u7491
  4156  000B2E                     u7491:
  4157  000B2E  EFA5  F005         	goto	l5393
  4158  000B32                     u7490:
  4159  000B32                     
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4162  000B32  0E00               	movlw	0
  4163  000B34  6FB4               	movwf	efgtoa@u& (0+255),b
  4164  000B36  0E00               	movlw	0
  4165  000B38  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4166  000B3A  0E80               	movlw	128
  4167  000B3C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4168  000B3E  0E3F               	movlw	63
  4169  000B40  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4170                           
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4172  000B42  0E00               	movlw	0
  4173  000B44  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4174  000B46  0E00               	movlw	0
  4175  000B48  6FB0               	movwf	efgtoa@e& (0+255),b
  4176  000B4A                     l5393:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4180  000B4A  0E67               	movlw	103
  4181  000B4C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4182  000B4E  B4D8               	btfsc	status,2,c
  4183  000B50  EFAC  F005         	goto	u7501
  4184  000B54  EFAE  F005         	goto	u7500
  4185  000B58                     u7501:
  4186  000B58  EFB2  F005         	goto	l5397
  4187  000B5C                     u7500:
  4188  000B5C                     
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4191  000B5C  51B0               	movf	efgtoa@e& (0+255),w,b
  4192  000B5E  2794               	addwf	efgtoa@m& (0+255),f,b
  4193  000B60  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4194  000B62  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4195  000B64                     l5397:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4199  000B64  0E00               	movlw	0
  4200  000B66  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4201  000B68  0E00               	movlw	0
  4202  000B6A  6FAA               	movwf	efgtoa@i& (0+255),b
  4203  000B6C                     
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4206  000B6C  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  4207  000B70  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  4208  000B74  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  4209  000B78  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  4210  000B7C                     
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4213  000B7C  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  4214  000B80  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  4215  000B84  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  4216  000B88  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  4217                           
  4218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4219  000B8C  EF43  F006         	goto	l5411
  4220  000B90                     l5403:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4224  000B90  C0A2  F02B         	movff	efgtoa@h,___fldiv@b
  4225  000B94  C0A3  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  4226  000B98  C0A4  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  4227  000B9C  C0A5  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  4228  000BA0  C0B4  F02F         	movff	efgtoa@u,___fldiv@a
  4229  000BA4  C0B5  F030         	movff	efgtoa@u+1,___fldiv@a+1
  4230  000BA8  C0B6  F031         	movff	efgtoa@u+2,___fldiv@a+2
  4231  000BAC  C0B7  F032         	movff	efgtoa@u+3,___fldiv@a+3
  4232  000BB0  EC2A  F011         	call	___fldiv	;wreg free
  4233  000BB4  C02B  F044         	movff	?___fldiv,floorf@x
  4234  000BB8  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  4235  000BBC  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  4236  000BC0  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  4237  000BC4  ECF7  F012         	call	_floorf	;wreg free
  4238  000BC8  C044  F0A6         	movff	?_floorf,efgtoa@l
  4239  000BCC  C045  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4240  000BD0  C046  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4241  000BD4  C047  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4242                           
  4243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4244  000BD8  C0A6  F004         	movff	efgtoa@l,___fltol@f1
  4245  000BDC  C0A7  F005         	movff	efgtoa@l+1,___fltol@f1+1
  4246  000BE0  C0A8  F006         	movff	efgtoa@l+2,___fltol@f1+2
  4247  000BE4  C0A9  F007         	movff	efgtoa@l+3,___fltol@f1+3
  4248  000BE8  ECAD  F018         	call	___fltol	;wreg free
  4249  000BEC  C004  F098         	movff	?___fltol,efgtoa@d
  4250  000BF0  C005  F099         	movff	?___fltol+1,efgtoa@d+1
  4251  000BF4                     
  4252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4253  000BF4  C0A2  F02B         	movff	efgtoa@h,___flsub@b
  4254  000BF8  C0A3  F02C         	movff	efgtoa@h+1,___flsub@b+1
  4255  000BFC  C0A4  F02D         	movff	efgtoa@h+2,___flsub@b+2
  4256  000C00  C0A5  F02E         	movff	efgtoa@h+3,___flsub@b+3
  4257  000C04  C0B4  F016         	movff	efgtoa@u,___flmul@a
  4258  000C08  C0B5  F017         	movff	efgtoa@u+1,___flmul@a+1
  4259  000C0C  C0B6  F018         	movff	efgtoa@u+2,___flmul@a+2
  4260  000C10  C0B7  F019         	movff	efgtoa@u+3,___flmul@a+3
  4261  000C14  C0A6  F012         	movff	efgtoa@l,___flmul@b
  4262  000C18  C0A7  F013         	movff	efgtoa@l+1,___flmul@b+1
  4263  000C1C  C0A8  F014         	movff	efgtoa@l+2,___flmul@b+2
  4264  000C20  C0A9  F015         	movff	efgtoa@l+3,___flmul@b+3
  4265  000C24  EC15  F00F         	call	___flmul	;wreg free
  4266  000C28  C012  F02F         	movff	?___flmul,___flsub@a
  4267  000C2C  C013  F030         	movff	?___flmul+1,___flsub@a+1
  4268  000C30  C014  F031         	movff	?___flmul+2,___flsub@a+2
  4269  000C34  C015  F032         	movff	?___flmul+3,___flsub@a+3
  4270  000C38  EC97  F01E         	call	___flsub	;wreg free
  4271  000C3C  C02B  F0A2         	movff	?___flsub,efgtoa@h
  4272  000C40  C02C  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4273  000C44  C02D  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4274  000C48  C02E  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4275  000C4C                     
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4277  000C4C  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  4278  000C50  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  4279  000C54  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  4280  000C58  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  4281  000C5C  0E00               	movlw	0
  4282  000C5E  6E2F               	movwf	___fldiv@a^0,c
  4283  000C60  0E00               	movlw	0
  4284  000C62  6E30               	movwf	(___fldiv@a+1)^0,c
  4285  000C64  0E20               	movlw	32
  4286  000C66  6E31               	movwf	(___fldiv@a+2)^0,c
  4287  000C68  0E41               	movlw	65
  4288  000C6A  6E32               	movwf	(___fldiv@a+3)^0,c
  4289  000C6C  EC2A  F011         	call	___fldiv	;wreg free
  4290  000C70  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  4291  000C74  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4292  000C78  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4293  000C7C  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4294  000C80                     
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4296  000C80  0100               	movlb	0	; () banked
  4297  000C82  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4298  000C84  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4299  000C86                     l5411:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4303  000C86  5194               	movf	efgtoa@m& (0+255),w,b
  4304  000C88  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4305  000C8A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4306  000C8C  0A80               	xorlw	128
  4307  000C8E  6E5F               	movwf	??_efgtoa^0,c
  4308  000C90  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4309  000C92  0A80               	xorlw	128
  4310  000C94  585F               	subwfb	??_efgtoa^0,w,c
  4311  000C96  A0D8               	btfss	status,0,c
  4312  000C98  EF50  F006         	goto	u7511
  4313  000C9C  EF52  F006         	goto	u7510
  4314  000CA0                     u7511:
  4315  000CA0  EFC8  F005         	goto	l5403
  4316  000CA4                     u7510:
  4317  000CA4                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4320  000CA4  C0B4  F012         	movff	efgtoa@u,___flmul@b
  4321  000CA8  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  4322  000CAC  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  4323  000CB0  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  4324  000CB4  0E00               	movlw	0
  4325  000CB6  6E16               	movwf	___flmul@a^0,c
  4326  000CB8  0E00               	movlw	0
  4327  000CBA  6E17               	movwf	(___flmul@a+1)^0,c
  4328  000CBC  0EA0               	movlw	160
  4329  000CBE  6E18               	movwf	(___flmul@a+2)^0,c
  4330  000CC0  0E40               	movlw	64
  4331  000CC2  6E19               	movwf	(___flmul@a+3)^0,c
  4332  000CC4  EC15  F00F         	call	___flmul	;wreg free
  4333  000CC8  C012  F0A6         	movff	?___flmul,efgtoa@l
  4334  000CCC  C013  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4335  000CD0  C014  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4336  000CD4  C015  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4337  000CD8                     
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4339  000CD8  C0A2  F02B         	movff	efgtoa@h,___flge@ff1
  4340  000CDC  C0A3  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  4341  000CE0  C0A4  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  4342  000CE4  C0A5  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  4343  000CE8  C0A6  F02F         	movff	efgtoa@l,___flge@ff2
  4344  000CEC  C0A7  F030         	movff	efgtoa@l+1,___flge@ff2+1
  4345  000CF0  C0A8  F031         	movff	efgtoa@l+2,___flge@ff2+2
  4346  000CF4  C0A9  F032         	movff	efgtoa@l+3,___flge@ff2+3
  4347  000CF8  EC30  F019         	call	___flge	;wreg free
  4348  000CFC  B0D8               	btfsc	status,0,c
  4349  000CFE  EF83  F006         	goto	u7521
  4350  000D02  EF85  F006         	goto	u7520
  4351  000D06                     u7521:
  4352  000D06  EF90  F006         	goto	l5419
  4353  000D0A                     u7520:
  4354  000D0A                     
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4356  000D0A  0E00               	movlw	0
  4357  000D0C  0100               	movlb	0	; () banked
  4358  000D0E  6FA6               	movwf	efgtoa@l& (0+255),b
  4359  000D10  0E00               	movlw	0
  4360  000D12  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4361  000D14  0E00               	movlw	0
  4362  000D16  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4363  000D18  0E00               	movlw	0
  4364  000D1A  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4365                           
  4366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4367  000D1C  EFB9  F006         	goto	l5425
  4368  000D20                     l5419:
  4369                           
  4370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4371  000D20  C0A2  F004         	movff	efgtoa@h,___fleq@ff1
  4372  000D24  C0A3  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  4373  000D28  C0A4  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  4374  000D2C  C0A5  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  4375  000D30  C0A6  F008         	movff	efgtoa@l,___fleq@ff2
  4376  000D34  C0A7  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  4377  000D38  C0A8  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  4378  000D3C  C0A9  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  4379  000D40  ECFA  F01C         	call	___fleq	;wreg free
  4380  000D44  A0D8               	btfss	status,0,c
  4381  000D46  EFA7  F006         	goto	u7531
  4382  000D4A  EFA9  F006         	goto	u7530
  4383  000D4E                     u7531:
  4384  000D4E  EFB9  F006         	goto	l5425
  4385  000D52                     u7530:
  4386  000D52  0100               	movlb	0	; () banked
  4387  000D54  B198               	btfsc	efgtoa@d& (0+255),0,b
  4388  000D56  EFAF  F006         	goto	u7541
  4389  000D5A  EFB1  F006         	goto	u7540
  4390  000D5E                     u7541:
  4391  000D5E  EFB9  F006         	goto	l5425
  4392  000D62                     u7540:
  4393  000D62                     
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4396  000D62  0E00               	movlw	0
  4397  000D64  6FA6               	movwf	efgtoa@l& (0+255),b
  4398  000D66  0E00               	movlw	0
  4399  000D68  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4400  000D6A  0E00               	movlw	0
  4401  000D6C  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4402  000D6E  0E00               	movlw	0
  4403  000D70  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4404  000D72                     l5425:
  4405                           
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4407  000D72  C0AC  F004         	movff	efgtoa@g,___fladd@b
  4408  000D76  C0AD  F005         	movff	efgtoa@g+1,___fladd@b+1
  4409  000D7A  C0AE  F006         	movff	efgtoa@g+2,___fladd@b+2
  4410  000D7E  C0AF  F007         	movff	efgtoa@g+3,___fladd@b+3
  4411  000D82  C0A6  F008         	movff	efgtoa@l,___fladd@a
  4412  000D86  C0A7  F009         	movff	efgtoa@l+1,___fladd@a+1
  4413  000D8A  C0A8  F00A         	movff	efgtoa@l+2,___fladd@a+2
  4414  000D8E  C0A9  F00B         	movff	efgtoa@l+3,___fladd@a+3
  4415  000D92  ECB5  F00C         	call	___fladd	;wreg free
  4416  000D96  C004  F0A2         	movff	?___fladd,efgtoa@h
  4417  000D9A  C005  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4418  000D9E  C006  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4419  000DA2  C007  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4420  000DA6                     
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4422  000DA6  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4423  000DAA  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4424  000DAE  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4425  000DB2  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4426  000DB6                     
  4427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4428  000DB6  0E65               	movlw	101
  4429  000DB8  0100               	movlb	0	; () banked
  4430  000DBA  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4431  000DBC  B4D8               	btfsc	status,2,c
  4432  000DBE  EFE3  F006         	goto	u7551
  4433  000DC2  EFE5  F006         	goto	u7550
  4434  000DC6                     u7551:
  4435  000DC6  EFEB  F006         	goto	l5433
  4436  000DCA                     u7550:
  4437  000DCA                     
  4438                           ; BSR set to: 0
  4439  000DCA  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4440  000DCE  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4441  000DD2  EFEF  F006         	goto	l213
  4442  000DD6                     l5433:
  4443                           
  4444                           ; BSR set to: 0
  4445  000DD6  0E00               	movlw	0
  4446  000DD8  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4447  000DDA  0E00               	movlw	0
  4448  000DDC  6F96               	movwf	efgtoa@ne& (0+255),b
  4449  000DDE                     l213:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4453  000DDE  0E00               	movlw	0
  4454  000DE0  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4455  000DE2  0E00               	movlw	0
  4456  000DE4  6F92               	movwf	efgtoa@pp& (0+255),b
  4457                           
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4459  000DE6  0E00               	movlw	0
  4460  000DE8  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4461  000DEA  0E00               	movlw	0
  4462  000DEC  6F90               	movwf	efgtoa@t& (0+255),b
  4463                           
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4465  000DEE  0E00               	movlw	0
  4466  000DF0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4467  000DF2  0E00               	movlw	0
  4468  000DF4  6FAA               	movwf	efgtoa@i& (0+255),b
  4469                           
  4470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4471  000DF6  EFEB  F007         	goto	l5483
  4472  000DFA                     l5435:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4476  000DFA  C0A2  F02B         	movff	efgtoa@h,___fldiv@b
  4477  000DFE  C0A3  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  4478  000E02  C0A4  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  4479  000E06  C0A5  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  4480  000E0A  C0B4  F02F         	movff	efgtoa@u,___fldiv@a
  4481  000E0E  C0B5  F030         	movff	efgtoa@u+1,___fldiv@a+1
  4482  000E12  C0B6  F031         	movff	efgtoa@u+2,___fldiv@a+2
  4483  000E16  C0B7  F032         	movff	efgtoa@u+3,___fldiv@a+3
  4484  000E1A  EC2A  F011         	call	___fldiv	;wreg free
  4485  000E1E  C02B  F044         	movff	?___fldiv,floorf@x
  4486  000E22  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  4487  000E26  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  4488  000E2A  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  4489  000E2E  ECF7  F012         	call	_floorf	;wreg free
  4490  000E32  C044  F0A6         	movff	?_floorf,efgtoa@l
  4491  000E36  C045  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4492  000E3A  C046  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4493  000E3E  C047  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4494                           
  4495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4496  000E42  C0A6  F004         	movff	efgtoa@l,___fltol@f1
  4497  000E46  C0A7  F005         	movff	efgtoa@l+1,___fltol@f1+1
  4498  000E4A  C0A8  F006         	movff	efgtoa@l+2,___fltol@f1+2
  4499  000E4E  C0A9  F007         	movff	efgtoa@l+3,___fltol@f1+3
  4500  000E52  ECAD  F018         	call	___fltol	;wreg free
  4501  000E56  C004  F098         	movff	?___fltol,efgtoa@d
  4502  000E5A  C005  F099         	movff	?___fltol+1,efgtoa@d+1
  4503  000E5E                     
  4504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4505  000E5E  B878               	btfsc	_flags^0,4,c
  4506  000E60  EF34  F007         	goto	u7561
  4507  000E64  EF36  F007         	goto	u7560
  4508  000E68                     u7561:
  4509  000E68  EF54  F007         	goto	l5447
  4510  000E6C                     u7560:
  4511  000E6C  0100               	movlb	0	; () banked
  4512  000E6E  5198               	movf	efgtoa@d& (0+255),w,b
  4513  000E70  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4514  000E72  A4D8               	btfss	status,2,c
  4515  000E74  EF3E  F007         	goto	u7571
  4516  000E78  EF40  F007         	goto	u7570
  4517  000E7C                     u7571:
  4518  000E7C  EF54  F007         	goto	l5447
  4519  000E80                     u7570:
  4520  000E80                     
  4521                           ; BSR set to: 0
  4522  000E80  0E67               	movlw	103
  4523  000E82  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4524  000E84  A4D8               	btfss	status,2,c
  4525  000E86  EF47  F007         	goto	u7581
  4526  000E8A  EF49  F007         	goto	u7580
  4527  000E8E                     u7581:
  4528  000E8E  EF54  F007         	goto	l5447
  4529  000E92                     u7580:
  4530  000E92                     
  4531                           ; BSR set to: 0
  4532  000E92  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4533  000E94  EF50  F007         	goto	u7590
  4534  000E98  EF4E  F007         	goto	u7591
  4535  000E9C                     u7591:
  4536  000E9C  EF54  F007         	goto	l5447
  4537  000EA0                     u7590:
  4538  000EA0                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4541  000EA0  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4542  000EA2  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4543                           
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4545  000EA4  EF9F  F007         	goto	l5475
  4546  000EA8                     l5447:
  4547                           
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4549  000EA8  0100               	movlb	0	; () banked
  4550  000EAA  5192               	movf	efgtoa@pp& (0+255),w,b
  4551  000EAC  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4552  000EAE  A4D8               	btfss	status,2,c
  4553  000EB0  EF5C  F007         	goto	u7601
  4554  000EB4  EF5E  F007         	goto	u7600
  4555  000EB8                     u7601:
  4556  000EB8  EF88  F007         	goto	l5467
  4557  000EBC                     u7600:
  4558  000EBC                     
  4559                           ; BSR set to: 0
  4560  000EBC  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4561  000EBE  EF65  F007         	goto	u7610
  4562  000EC2  EF63  F007         	goto	u7611
  4563  000EC6                     u7611:
  4564  000EC6  EF88  F007         	goto	l5467
  4565  000ECA                     u7610:
  4566  000ECA                     
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4569  000ECA  0E00               	movlw	low _dbuf
  4570  000ECC  25B2               	addwf	efgtoa@n& (0+255),w,b
  4571  000ECE  6ED9               	movwf	fsr2l,c
  4572  000ED0  0E01               	movlw	high _dbuf
  4573  000ED2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4574  000ED4  6EDA               	movwf	fsr2h,c
  4575  000ED6  0E2E               	movlw	46
  4576  000ED8  6EDF               	movwf	indf2,c
  4577  000EDA                     
  4578                           ; BSR set to: 0
  4579  000EDA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4580  000EDC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4581  000EDE                     
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4584  000EDE  079F               	decf	efgtoa@w& (0+255),f,b
  4585  000EE0  A0D8               	btfss	status,0,c
  4586  000EE2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4587  000EE4                     
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4590  000EE4  0E00               	movlw	0
  4591  000EE6  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4592  000EE8  0E01               	movlw	1
  4593  000EEA  6F92               	movwf	efgtoa@pp& (0+255),b
  4594  000EEC  EF88  F007         	goto	l5467
  4595  000EF0                     l5459:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4599  000EF0  0E00               	movlw	low _dbuf
  4600  000EF2  25B2               	addwf	efgtoa@n& (0+255),w,b
  4601  000EF4  6ED9               	movwf	fsr2l,c
  4602  000EF6  0E01               	movlw	high _dbuf
  4603  000EF8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4604  000EFA  6EDA               	movwf	fsr2h,c
  4605  000EFC  0E30               	movlw	48
  4606  000EFE  6EDF               	movwf	indf2,c
  4607  000F00                     
  4608                           ; BSR set to: 0
  4609  000F00  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4610  000F02  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4611  000F04                     
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4614  000F04  079F               	decf	efgtoa@w& (0+255),f,b
  4615  000F06  A0D8               	btfss	status,0,c
  4616  000F08  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4617  000F0A                     
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4620  000F0A  0790               	decf	efgtoa@t& (0+255),f,b
  4621  000F0C  A0D8               	btfss	status,0,c
  4622  000F0E  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  4623  000F10                     l5467:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4627  000F10  5190               	movf	efgtoa@t& (0+255),w,b
  4628  000F12  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4629  000F14  A4D8               	btfss	status,2,c
  4630  000F16  EF8F  F007         	goto	u7621
  4631  000F1A  EF91  F007         	goto	u7620
  4632  000F1E                     u7621:
  4633  000F1E  EF78  F007         	goto	l5459
  4634  000F22                     u7620:
  4635  000F22                     
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4638  000F22  0E00               	movlw	low _dbuf
  4639  000F24  25B2               	addwf	efgtoa@n& (0+255),w,b
  4640  000F26  6ED9               	movwf	fsr2l,c
  4641  000F28  0E01               	movlw	high _dbuf
  4642  000F2A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4643  000F2C  6EDA               	movwf	fsr2h,c
  4644  000F2E  5198               	movf	efgtoa@d& (0+255),w,b
  4645  000F30  0F30               	addlw	48
  4646  000F32  6EDF               	movwf	indf2,c
  4647  000F34                     
  4648                           ; BSR set to: 0
  4649  000F34  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4650  000F36  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4651  000F38                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4654  000F38  079F               	decf	efgtoa@w& (0+255),f,b
  4655  000F3A  A0D8               	btfss	status,0,c
  4656  000F3C  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4657  000F3E                     l5475:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4661  000F3E  C0A2  F02B         	movff	efgtoa@h,___flsub@b
  4662  000F42  C0A3  F02C         	movff	efgtoa@h+1,___flsub@b+1
  4663  000F46  C0A4  F02D         	movff	efgtoa@h+2,___flsub@b+2
  4664  000F4A  C0A5  F02E         	movff	efgtoa@h+3,___flsub@b+3
  4665  000F4E  C0B4  F016         	movff	efgtoa@u,___flmul@a
  4666  000F52  C0B5  F017         	movff	efgtoa@u+1,___flmul@a+1
  4667  000F56  C0B6  F018         	movff	efgtoa@u+2,___flmul@a+2
  4668  000F5A  C0B7  F019         	movff	efgtoa@u+3,___flmul@a+3
  4669  000F5E  C0A6  F012         	movff	efgtoa@l,___flmul@b
  4670  000F62  C0A7  F013         	movff	efgtoa@l+1,___flmul@b+1
  4671  000F66  C0A8  F014         	movff	efgtoa@l+2,___flmul@b+2
  4672  000F6A  C0A9  F015         	movff	efgtoa@l+3,___flmul@b+3
  4673  000F6E  EC15  F00F         	call	___flmul	;wreg free
  4674  000F72  C012  F02F         	movff	?___flmul,___flsub@a
  4675  000F76  C013  F030         	movff	?___flmul+1,___flsub@a+1
  4676  000F7A  C014  F031         	movff	?___flmul+2,___flsub@a+2
  4677  000F7E  C015  F032         	movff	?___flmul+3,___flsub@a+3
  4678  000F82  EC97  F01E         	call	___flsub	;wreg free
  4679  000F86  C02B  F0A2         	movff	?___flsub,efgtoa@h
  4680  000F8A  C02C  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4681  000F8E  C02D  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4682  000F92  C02E  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4683  000F96                     
  4684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4685  000F96  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  4686  000F9A  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  4687  000F9E  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  4688  000FA2  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  4689  000FA6  0E00               	movlw	0
  4690  000FA8  6E2F               	movwf	___fldiv@a^0,c
  4691  000FAA  0E00               	movlw	0
  4692  000FAC  6E30               	movwf	(___fldiv@a+1)^0,c
  4693  000FAE  0E20               	movlw	32
  4694  000FB0  6E31               	movwf	(___fldiv@a+2)^0,c
  4695  000FB2  0E41               	movlw	65
  4696  000FB4  6E32               	movwf	(___fldiv@a+3)^0,c
  4697  000FB6  EC2A  F011         	call	___fldiv	;wreg free
  4698  000FBA  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  4699  000FBE  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4700  000FC2  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4701  000FC6  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4702  000FCA                     
  4703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4704  000FCA  0100               	movlb	0	; () banked
  4705  000FCC  0796               	decf	efgtoa@ne& (0+255),f,b
  4706  000FCE  A0D8               	btfss	status,0,c
  4707  000FD0  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4708  000FD2                     
  4709                           ; BSR set to: 0
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4711  000FD2  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4712  000FD4  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4713  000FD6                     l5483:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4717  000FD6  5194               	movf	efgtoa@m& (0+255),w,b
  4718  000FD8  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4719  000FDA  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4720  000FDC  0A80               	xorlw	128
  4721  000FDE  6E5F               	movwf	??_efgtoa^0,c
  4722  000FE0  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4723  000FE2  0A80               	xorlw	128
  4724  000FE4  585F               	subwfb	??_efgtoa^0,w,c
  4725  000FE6  B0D8               	btfsc	status,0,c
  4726  000FE8  EFF8  F007         	goto	u7631
  4727  000FEC  EFFA  F007         	goto	u7630
  4728  000FF0                     u7631:
  4729  000FF0  EF08  F008         	goto	l5487
  4730  000FF4                     u7630:
  4731  000FF4                     
  4732                           ; BSR set to: 0
  4733  000FF4  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4734  000FF6  EF06  F008         	goto	u7641
  4735  000FFA  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4736  000FFC  E109               	bnz	u7640
  4737  000FFE  0E4B               	movlw	75
  4738  001000  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4739  001002  A0D8               	btfss	status,0,c
  4740  001004  EF06  F008         	goto	u7641
  4741  001008  EF08  F008         	goto	u7640
  4742  00100C                     u7641:
  4743  00100C  EFFD  F006         	goto	l5435
  4744  001010                     u7640:
  4745  001010                     l5487:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4749  001010  5192               	movf	efgtoa@pp& (0+255),w,b
  4750  001012  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4751  001014  A4D8               	btfss	status,2,c
  4752  001016  EF0F  F008         	goto	u7651
  4753  00101A  EF11  F008         	goto	u7650
  4754  00101E                     u7651:
  4755  00101E  EF22  F008         	goto	l5495
  4756  001022                     u7650:
  4757  001022                     
  4758                           ; BSR set to: 0
  4759  001022  A878               	btfss	_flags^0,4,c
  4760  001024  EF16  F008         	goto	u7661
  4761  001028  EF18  F008         	goto	u7660
  4762  00102C                     u7661:
  4763  00102C  EF22  F008         	goto	l5495
  4764  001030                     u7660:
  4765  001030                     
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4768  001030  0E00               	movlw	low _dbuf
  4769  001032  25B2               	addwf	efgtoa@n& (0+255),w,b
  4770  001034  6ED9               	movwf	fsr2l,c
  4771  001036  0E01               	movlw	high _dbuf
  4772  001038  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4773  00103A  6EDA               	movwf	fsr2h,c
  4774  00103C  0E2E               	movlw	46
  4775  00103E  6EDF               	movwf	indf2,c
  4776  001040                     
  4777                           ; BSR set to: 0
  4778  001040  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4779  001042  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4780  001044                     l5495:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4784  001044  0E00               	movlw	low _dbuf
  4785  001046  25B2               	addwf	efgtoa@n& (0+255),w,b
  4786  001048  6ED9               	movwf	fsr2l,c
  4787  00104A  0E01               	movlw	high _dbuf
  4788  00104C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4789  00104E  6EDA               	movwf	fsr2h,c
  4790  001050  0E00               	movlw	0
  4791  001052  6EDF               	movwf	indf2,c
  4792  001054                     
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4795  001054  0E65               	movlw	101
  4796  001056  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4797  001058  A4D8               	btfss	status,2,c
  4798  00105A  EF31  F008         	goto	u7671
  4799  00105E  EF33  F008         	goto	u7670
  4800  001062                     u7671:
  4801  001062  EFE0  F003         	goto	l5307
  4802  001066                     u7670:
  4803  001066                     
  4804                           ; BSR set to: 0
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4806  001066  0E00               	movlw	0
  4807  001068  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4808  00106A  0E4F               	movlw	79
  4809  00106C  6FAA               	movwf	efgtoa@i& (0+255),b
  4810  00106E                     
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4813  00106E  0E00               	movlw	low _dbuf
  4814  001070  25AA               	addwf	efgtoa@i& (0+255),w,b
  4815  001072  6ED9               	movwf	fsr2l,c
  4816  001074  0E01               	movlw	high _dbuf
  4817  001076  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4818  001078  6EDA               	movwf	fsr2h,c
  4819  00107A  0E00               	movlw	0
  4820  00107C  6EDF               	movwf	indf2,c
  4821  00107E                     
  4822                           ; BSR set to: 0
  4823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4824  00107E  0E00               	movlw	0
  4825  001080  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4826  001082  0E00               	movlw	0
  4827  001084  6F9A               	movwf	efgtoa@sign& (0+255),b
  4828  001086                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4831  001086  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4832  001088  EF4A  F008         	goto	u7680
  4833  00108C  EF48  F008         	goto	u7681
  4834  001090                     u7681:
  4835  001090  EF52  F008         	goto	l5511
  4836  001094                     u7680:
  4837  001094                     
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4840  001094  0E00               	movlw	0
  4841  001096  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4842  001098  0E01               	movlw	1
  4843  00109A  6F9A               	movwf	efgtoa@sign& (0+255),b
  4844  00109C                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4847  00109C  6DB0               	negf	efgtoa@e& (0+255),b
  4848  00109E  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4849  0010A0  B0D8               	btfsc	status,0,c
  4850  0010A2  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4851  0010A4                     l5511:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4855  0010A4  0E00               	movlw	0
  4856  0010A6  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4857  0010A8  0E02               	movlw	2
  4858  0010AA  6F9C               	movwf	efgtoa@p& (0+255),b
  4859                           
  4860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4861  0010AC  EF83  F008         	goto	l5523
  4862  0010B0                     l5513:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4866  0010B0  07AA               	decf	efgtoa@i& (0+255),f,b
  4867  0010B2  A0D8               	btfss	status,0,c
  4868  0010B4  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4869  0010B6                     
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4872  0010B6  0E00               	movlw	low _dbuf
  4873  0010B8  25AA               	addwf	efgtoa@i& (0+255),w,b
  4874  0010BA  6ED9               	movwf	fsr2l,c
  4875  0010BC  0E01               	movlw	high _dbuf
  4876  0010BE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4877  0010C0  6EDA               	movwf	fsr2h,c
  4878  0010C2  C0B0  F004         	movff	efgtoa@e,___awmod@dividend
  4879  0010C6  C0B1  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  4880  0010CA  0E00               	movlw	0
  4881  0010CC  6E07               	movwf	(___awmod@divisor+1)^0,c
  4882  0010CE  0E0A               	movlw	10
  4883  0010D0  6E06               	movwf	___awmod@divisor^0,c
  4884  0010D2  ECA2  F01C         	call	___awmod	;wreg free
  4885  0010D6  5004               	movf	?___awmod^0,w,c
  4886  0010D8  0F30               	addlw	48
  4887  0010DA  6EDF               	movwf	indf2,c
  4888  0010DC                     
  4889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4890  0010DC  C0B0  F004         	movff	efgtoa@e,___awdiv@dividend
  4891  0010E0  C0B1  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  4892  0010E4  0E00               	movlw	0
  4893  0010E6  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4894  0010E8  0E0A               	movlw	10
  4895  0010EA  6E06               	movwf	___awdiv@divisor^0,c
  4896  0010EC  ECDF  F01B         	call	___awdiv	;wreg free
  4897  0010F0  C004  F0B0         	movff	?___awdiv,efgtoa@e
  4898  0010F4  C005  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4899  0010F8                     
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4901  0010F8  0100               	movlb	0	; () banked
  4902  0010FA  079C               	decf	efgtoa@p& (0+255),f,b
  4903  0010FC  A0D8               	btfss	status,0,c
  4904  0010FE  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4905  001100                     
  4906                           ; BSR set to: 0
  4907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4908  001100  079F               	decf	efgtoa@w& (0+255),f,b
  4909  001102  A0D8               	btfss	status,0,c
  4910  001104  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4911  001106                     l5523:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4915  001106  51B0               	movf	efgtoa@e& (0+255),w,b
  4916  001108  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4917  00110A  A4D8               	btfss	status,2,c
  4918  00110C  EF8A  F008         	goto	u7691
  4919  001110  EF8C  F008         	goto	u7690
  4920  001114                     u7691:
  4921  001114  EF58  F008         	goto	l5513
  4922  001118                     u7690:
  4923  001118                     
  4924                           ; BSR set to: 0
  4925  001118  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4926  00111A  EF99  F008         	goto	u7700
  4927  00111E  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4928  001120  E106               	bnz	u7701
  4929  001122  059C               	decf	efgtoa@p& (0+255),w,b
  4930  001124  B0D8               	btfsc	status,0,c
  4931  001126  EF97  F008         	goto	u7701
  4932  00112A  EF99  F008         	goto	u7700
  4933  00112E                     u7701:
  4934  00112E  EF58  F008         	goto	l5513
  4935  001132                     u7700:
  4936  001132                     
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4939  001132  07AA               	decf	efgtoa@i& (0+255),f,b
  4940  001134  A0D8               	btfss	status,0,c
  4941  001136  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4942  001138                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4945  001138  519A               	movf	efgtoa@sign& (0+255),w,b
  4946  00113A  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4947  00113C  A4D8               	btfss	status,2,c
  4948  00113E  EFA3  F008         	goto	u7711
  4949  001142  EFA5  F008         	goto	u7710
  4950  001146                     u7711:
  4951  001146  EFAB  F008         	goto	l5533
  4952  00114A                     u7710:
  4953  00114A                     
  4954                           ; BSR set to: 0
  4955  00114A  0E00               	movlw	0
  4956  00114C  6F8B               	movwf	(_efgtoa$666+1)& (0+255),b
  4957  00114E  0E2B               	movlw	43
  4958  001150  6F8A               	movwf	_efgtoa$666& (0+255),b
  4959  001152  EFAF  F008         	goto	l5535
  4960  001156                     l5533:
  4961                           
  4962                           ; BSR set to: 0
  4963  001156  0E00               	movlw	0
  4964  001158  6F8B               	movwf	(_efgtoa$666+1)& (0+255),b
  4965  00115A  0E2D               	movlw	45
  4966  00115C  6F8A               	movwf	_efgtoa$666& (0+255),b
  4967  00115E                     l5535:
  4968                           
  4969                           ; BSR set to: 0
  4970  00115E  0E00               	movlw	low _dbuf
  4971  001160  25AA               	addwf	efgtoa@i& (0+255),w,b
  4972  001162  6ED9               	movwf	fsr2l,c
  4973  001164  0E01               	movlw	high _dbuf
  4974  001166  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4975  001168  6EDA               	movwf	fsr2h,c
  4976  00116A  C08A  FFDF         	movff	_efgtoa$666,indf2
  4977  00116E                     
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4980  00116E  079F               	decf	efgtoa@w& (0+255),f,b
  4981  001170  A0D8               	btfss	status,0,c
  4982  001172  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4983  001174                     
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4986  001174  07AA               	decf	efgtoa@i& (0+255),f,b
  4987  001176  A0D8               	btfss	status,0,c
  4988  001178  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4989  00117A                     
  4990                           ; BSR set to: 0
  4991  00117A  0EBF               	movlw	191
  4992  00117C  6E5F               	movwf	??_efgtoa^0,c
  4993  00117E  0EFF               	movlw	255
  4994  001180  6E60               	movwf	(??_efgtoa+1)^0,c
  4995  001182  505E               	movf	efgtoa@c^0,w,c
  4996  001184  6E61               	movwf	(??_efgtoa+2)^0,c
  4997  001186  6A62               	clrf	(??_efgtoa+3)^0,c
  4998  001188  505F               	movf	??_efgtoa^0,w,c
  4999  00118A  2661               	addwf	(??_efgtoa+2)^0,f,c
  5000  00118C  5060               	movf	(??_efgtoa+1)^0,w,c
  5001  00118E  2262               	addwfc	(??_efgtoa+3)^0,f,c
  5002  001190  5062               	movf	(??_efgtoa+3)^0,w,c
  5003  001192  E10A               	bnz	u7720
  5004  001194  0E1A               	movlw	26
  5005  001196  5C61               	subwf	(??_efgtoa+2)^0,w,c
  5006  001198  A0D8               	btfss	status,0,c
  5007  00119A  EFD1  F008         	goto	u7721
  5008  00119E  EFD4  F008         	goto	u7720
  5009  0011A2                     u7721:
  5010  0011A2  0E01               	movlw	1
  5011  0011A4  EFD5  F008         	goto	u7730
  5012  0011A8                     u7720:
  5013  0011A8  0E00               	movlw	0
  5014  0011AA                     u7730:
  5015  0011AA  6F8E               	movwf	_efgtoa$668& (0+255),b
  5016  0011AC  6B8F               	clrf	(_efgtoa$668+1)& (0+255),b
  5017  0011AE                     
  5018                           ; BSR set to: 0
  5019  0011AE  518E               	movf	_efgtoa$668& (0+255),w,b
  5020  0011B0  118F               	iorwf	(_efgtoa$668+1)& (0+255),w,b
  5021  0011B2  A4D8               	btfss	status,2,c
  5022  0011B4  EFDE  F008         	goto	u7741
  5023  0011B8  EFE0  F008         	goto	u7740
  5024  0011BC                     u7741:
  5025  0011BC  EFE6  F008         	goto	l5549
  5026  0011C0                     u7740:
  5027  0011C0                     
  5028                           ; BSR set to: 0
  5029  0011C0  0E00               	movlw	0
  5030  0011C2  6F8D               	movwf	(_efgtoa$667+1)& (0+255),b
  5031  0011C4  0E65               	movlw	101
  5032  0011C6  6F8C               	movwf	_efgtoa$667& (0+255),b
  5033  0011C8  EFEA  F008         	goto	l5551
  5034  0011CC                     l5549:
  5035                           
  5036                           ; BSR set to: 0
  5037  0011CC  0E00               	movlw	0
  5038  0011CE  6F8D               	movwf	(_efgtoa$667+1)& (0+255),b
  5039  0011D0  0E45               	movlw	69
  5040  0011D2  6F8C               	movwf	_efgtoa$667& (0+255),b
  5041  0011D4                     l5551:
  5042                           
  5043                           ; BSR set to: 0
  5044  0011D4  0E00               	movlw	low _dbuf
  5045  0011D6  25AA               	addwf	efgtoa@i& (0+255),w,b
  5046  0011D8  6ED9               	movwf	fsr2l,c
  5047  0011DA  0E01               	movlw	high _dbuf
  5048  0011DC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5049  0011DE  6EDA               	movwf	fsr2h,c
  5050  0011E0  C08C  FFDF         	movff	_efgtoa$667,indf2
  5051  0011E4                     
  5052                           ; BSR set to: 0
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5054  0011E4  079F               	decf	efgtoa@w& (0+255),f,b
  5055  0011E6  A0D8               	btfss	status,0,c
  5056  0011E8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5057  0011EA                     
  5058                           ; BSR set to: 0
  5059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5060  0011EA  0E00               	movlw	low _dbuf
  5061  0011EC  25B2               	addwf	efgtoa@n& (0+255),w,b
  5062  0011EE  6E04               	movwf	strcpy@dest^0,c
  5063  0011F0  0E01               	movlw	high _dbuf
  5064  0011F2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5065  0011F4  6E05               	movwf	(strcpy@dest+1)^0,c
  5066  0011F6  0E00               	movlw	low _dbuf
  5067  0011F8  25AA               	addwf	efgtoa@i& (0+255),w,b
  5068  0011FA  6E06               	movwf	strcpy@src^0,c
  5069  0011FC  0E01               	movlw	high _dbuf
  5070  0011FE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5071  001200  6E07               	movwf	(strcpy@src+1)^0,c
  5072  001202  EC14  F01E         	call	_strcpy	;wreg free
  5073  001206  EFE0  F003         	goto	l5307
  5074  00120A                     l169:
  5075  00120A  0012               	return		;funcret
  5076  00120C                     __end_of_efgtoa:
  5077                           	opt callstack 0
  5078                           
  5079 ;; *************** function _tolower *****************
  5080 ;; Defined at:
  5081 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  c               2    9[COMRAM] int 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    9[COMRAM] int 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5095 ;;      Params:         2       0       0       0       0       0       0
  5096 ;;      Locals:         2       0       0       0       0       0       0
  5097 ;;      Temps:          4       0       0       0       0       0       0
  5098 ;;      Totals:         8       0       0       0       0       0       0
  5099 ;;Total ram usage:        8 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    3
  5102 ;; This function calls:
  5103 ;;		_isupper
  5104 ;; This function is called by:
  5105 ;;		_efgtoa
  5106 ;;		_vfpfcnvrt
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text11
  5111  003B6A                     __ptext11:
  5112                           	opt callstack 0
  5113  003B6A                     _tolower:
  5114                           	opt callstack 24
  5115  003B6A  0EBF               	movlw	191
  5116  003B6C  6E0C               	movwf	??_tolower^0,c
  5117  003B6E  0EFF               	movlw	255
  5118  003B70  6E0D               	movwf	(??_tolower+1)^0,c
  5119  003B72  C00A  F00E         	movff	tolower@c,??_tolower+2
  5120  003B76  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  5121  003B7A  500C               	movf	??_tolower^0,w,c
  5122  003B7C  260E               	addwf	(??_tolower+2)^0,f,c
  5123  003B7E  500D               	movf	(??_tolower+1)^0,w,c
  5124  003B80  220F               	addwfc	(??_tolower+3)^0,f,c
  5125  003B82  500F               	movf	(??_tolower+3)^0,w,c
  5126  003B84  E10A               	bnz	u6290
  5127  003B86  0E1A               	movlw	26
  5128  003B88  5C0E               	subwf	(??_tolower+2)^0,w,c
  5129  003B8A  A0D8               	btfss	status,0,c
  5130  003B8C  EFCA  F01D         	goto	u6291
  5131  003B90  EFCD  F01D         	goto	u6290
  5132  003B94                     u6291:
  5133  003B94  0E01               	movlw	1
  5134  003B96  EFCE  F01D         	goto	u6300
  5135  003B9A                     u6290:
  5136  003B9A  0E00               	movlw	0
  5137  003B9C                     u6300:
  5138  003B9C  6E10               	movwf	_tolower$1287^0,c
  5139  003B9E  6A11               	clrf	(_tolower$1287+1)^0,c
  5140  003BA0  5010               	movf	_tolower$1287^0,w,c
  5141  003BA2  1011               	iorwf	(_tolower$1287+1)^0,w,c
  5142  003BA4  B4D8               	btfsc	status,2,c
  5143  003BA6  EFD7  F01D         	goto	u6311
  5144  003BAA  EFD9  F01D         	goto	u6310
  5145  003BAE                     u6311:
  5146  003BAE  EFE0  F01D         	goto	l1117
  5147  003BB2                     u6310:
  5148  003BB2  0E20               	movlw	32
  5149  003BB4  100A               	iorwf	tolower@c^0,w,c
  5150  003BB6  6E0A               	movwf	?_tolower^0,c
  5151  003BB8  500B               	movf	(tolower@c+1)^0,w,c
  5152  003BBA  6E0B               	movwf	(?_tolower+1)^0,c
  5153  003BBC  EFE4  F01D         	goto	l1122
  5154  003BC0                     l1117:
  5155  003BC0  C00A  F00A         	movff	tolower@c,?_tolower
  5156  003BC4  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  5157  003BC8                     l1122:
  5158  003BC8  0012               	return		;funcret
  5159  003BCA                     __end_of_tolower:
  5160                           	opt callstack 0
  5161                           
  5162 ;; *************** function _isupper *****************
  5163 ;; Defined at:
  5164 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  c               2    3[COMRAM] int 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  2    3[COMRAM] int 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5178 ;;      Params:         2       0       0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0
  5180 ;;      Temps:          4       0       0       0       0       0       0
  5181 ;;      Totals:         6       0       0       0       0       0       0
  5182 ;;Total ram usage:        6 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    2
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_efgtoa
  5189 ;;		_vfpfcnvrt
  5190 ;;		_tolower
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text12
  5195  003DB8                     __ptext12:
  5196                           	opt callstack 0
  5197  003DB8                     _isupper:
  5198                           	opt callstack 24
  5199  003DB8  0EBF               	movlw	191
  5200  003DBA  6E06               	movwf	??_isupper^0,c
  5201  003DBC  0EFF               	movlw	255
  5202  003DBE  6E07               	movwf	(??_isupper+1)^0,c
  5203  003DC0  C004  F008         	movff	isupper@c,??_isupper+2
  5204  003DC4  C005  F009         	movff	isupper@c+1,??_isupper+3
  5205  003DC8  5006               	movf	??_isupper^0,w,c
  5206  003DCA  2608               	addwf	(??_isupper+2)^0,f,c
  5207  003DCC  5007               	movf	(??_isupper+1)^0,w,c
  5208  003DCE  2209               	addwfc	(??_isupper+3)^0,f,c
  5209  003DD0  5009               	movf	(??_isupper+3)^0,w,c
  5210  003DD2  E10A               	bnz	u5750
  5211  003DD4  0E1A               	movlw	26
  5212  003DD6  5C08               	subwf	(??_isupper+2)^0,w,c
  5213  003DD8  A0D8               	btfss	status,0,c
  5214  003DDA  EFF1  F01E         	goto	u5751
  5215  003DDE  EFF4  F01E         	goto	u5750
  5216  003DE2                     u5751:
  5217  003DE2  0E01               	movlw	1
  5218  003DE4  EFF5  F01E         	goto	u5760
  5219  003DE8                     u5750:
  5220  003DE8  0E00               	movlw	0
  5221  003DEA                     u5760:
  5222  003DEA  6E04               	movwf	?_isupper^0,c
  5223  003DEC  6A05               	clrf	(?_isupper+1)^0,c
  5224  003DEE  0012               	return		;funcret
  5225  003DF0                     __end_of_isupper:
  5226                           	opt callstack 0
  5227                           
  5228 ;; *************** function _strcpy *****************
  5229 ;; Defined at:
  5230 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  dest            2    3[COMRAM] PTR unsigned char 
  5233 ;;		 -> dbuf(80), 
  5234 ;;  src             2    5[COMRAM] PTR const unsigned char 
  5235 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5236 ;;		 -> dbuf(80), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  d               2   11[COMRAM] PTR unsigned char 
  5239 ;;		 -> dbuf(80), 
  5240 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5241 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5242 ;;		 -> dbuf(80), 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  2    3[COMRAM] PTR unsigned char 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5252 ;;      Params:         4       0       0       0       0       0       0
  5253 ;;      Locals:         4       0       0       0       0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0
  5255 ;;      Totals:        10       0       0       0       0       0       0
  5256 ;;Total ram usage:       10 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    2
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_efgtoa
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text13
  5267  003C28                     __ptext13:
  5268                           	opt callstack 0
  5269  003C28                     _strcpy:
  5270                           	opt callstack 24
  5271  003C28  C006  F00A         	movff	strcpy@src,strcpy@s
  5272  003C2C  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  5273  003C30  C004  F00C         	movff	strcpy@dest,strcpy@d
  5274  003C34  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  5275  003C38                     l4719:
  5276  003C38  500A               	movf	strcpy@s^0,w,c
  5277  003C3A  6E08               	movwf	??_strcpy^0,c
  5278  003C3C  500B               	movf	(strcpy@s+1)^0,w,c
  5279  003C3E  6E09               	movwf	(??_strcpy+1)^0,c
  5280  003C40  4A0A               	infsnz	strcpy@s^0,f,c
  5281  003C42  2A0B               	incf	(strcpy@s+1)^0,f,c
  5282  003C44  C008  FFF6         	movff	??_strcpy,tblptrl
  5283  003C48  C009  FFF7         	movff	??_strcpy+1,tblptrh
  5284  003C4C  6AF8               	clrf	tblptru,c
  5285  003C4E  C00C  FFD9         	movff	strcpy@d,fsr2l
  5286  003C52  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  5287  003C56  4A0C               	infsnz	strcpy@d^0,f,c
  5288  003C58  2A0D               	incf	(strcpy@d+1)^0,f,c
  5289  003C5A  0E05               	movlw	(high __ramtop+-1)
  5290  003C5C  64F7               	cpfsgt	tblptrh,c
  5291  003C5E  D003               	bra	u6277
  5292  003C60  0008               	tblrd		*
  5293  003C62  50F5               	movf	tablat,w,c
  5294  003C64  D005               	bra	u6270
  5295  003C66                     u6277:
  5296  003C66  CFF6 FFE1          	movff	tblptrl,fsr1l
  5297  003C6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5298  003C6E  50E7               	movf	indf1,w,c
  5299  003C70                     u6270:
  5300  003C70  6EDF               	movwf	indf2,c
  5301  003C72  50DF               	movf	indf2,w,c
  5302  003C74  A4D8               	btfss	status,2,c
  5303  003C76  EF3F  F01E         	goto	u6281
  5304  003C7A  EF41  F01E         	goto	u6280
  5305  003C7E                     u6281:
  5306  003C7E  EF1C  F01E         	goto	l4719
  5307  003C82                     u6280:
  5308  003C82  0012               	return		;funcret
  5309  003C84                     __end_of_strcpy:
  5310                           	opt callstack 0
  5311                           
  5312 ;; *************** function _pad *****************
  5313 ;; Defined at:
  5314 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5317 ;;		 -> sprintf@f(6), 
  5318 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5319 ;;		 -> dbuf(80), 
  5320 ;;  p               2   23[COMRAM] int 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  w               2   28[COMRAM] int 
  5323 ;;  i               2   26[COMRAM] int 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2   19[COMRAM] int 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5333 ;;      Params:         6       0       0       0       0       0       0
  5334 ;;      Locals:         4       0       0       0       0       0       0
  5335 ;;      Temps:          1       0       0       0       0       0       0
  5336 ;;      Totals:        11       0       0       0       0       0       0
  5337 ;;Total ram usage:       11 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    5
  5340 ;; This function calls:
  5341 ;;		_fputc
  5342 ;;		_fputs
  5343 ;;		_strlen
  5344 ;; This function is called by:
  5345 ;;		_efgtoa
  5346 ;;		_utoa
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text14
  5351  003882                     __ptext14:
  5352                           	opt callstack 0
  5353  003882                     _pad:
  5354                           	opt callstack 21
  5355  003882                     
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5357  003882  A078               	btfss	_flags^0,0,c
  5358  003884  EF46  F01C         	goto	u6161
  5359  003888  EF48  F01C         	goto	u6160
  5360  00388C                     u6161:
  5361  00388C  EF52  F01C         	goto	l4677
  5362  003890                     u6160:
  5363  003890                     
  5364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5365  003890  C016  F00D         	movff	pad@buf,fputs@s
  5366  003894  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5367  003898  C014  F00F         	movff	pad@fp,fputs@fp
  5368  00389C  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5369  0038A0  ECBA  F01E         	call	_fputs	;wreg free
  5370  0038A4                     l4677:
  5371                           
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5373  0038A4  BE19               	btfsc	(pad@p+1)^0,7,c
  5374  0038A6  EF57  F01C         	goto	u6171
  5375  0038AA  EF59  F01C         	goto	u6170
  5376  0038AE                     u6171:
  5377  0038AE  EF5F  F01C         	goto	l4681
  5378  0038B2                     u6170:
  5379  0038B2  C018  F01D         	movff	pad@p,pad@w
  5380  0038B6  C019  F01E         	movff	pad@p+1,pad@w+1
  5381  0038BA  EF63  F01C         	goto	l146
  5382  0038BE                     l4681:
  5383  0038BE  0E00               	movlw	0
  5384  0038C0  6E1E               	movwf	(pad@w+1)^0,c
  5385  0038C2  0E00               	movlw	0
  5386  0038C4  6E1D               	movwf	pad@w^0,c
  5387  0038C6                     l146:
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5390  0038C6  0E00               	movlw	0
  5391  0038C8  6E1C               	movwf	(pad@i+1)^0,c
  5392  0038CA  0E00               	movlw	0
  5393  0038CC  6E1B               	movwf	pad@i^0,c
  5394                           
  5395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5396  0038CE  EF75  F01C         	goto	l4687
  5397  0038D2                     l4683:
  5398                           
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5400  0038D2  0E00               	movlw	0
  5401  0038D4  6E05               	movwf	(fputc@c+1)^0,c
  5402  0038D6  0E20               	movlw	32
  5403  0038D8  6E04               	movwf	fputc@c^0,c
  5404  0038DA  C014  F006         	movff	pad@fp,fputc@fp
  5405  0038DE  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5406  0038E2  EC7A  F01B         	call	_fputc	;wreg free
  5407  0038E6                     
  5408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5409  0038E6  4A1B               	infsnz	pad@i^0,f,c
  5410  0038E8  2A1C               	incf	(pad@i+1)^0,f,c
  5411  0038EA                     l4687:
  5412                           
  5413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5414  0038EA  501D               	movf	pad@w^0,w,c
  5415  0038EC  5C1B               	subwf	pad@i^0,w,c
  5416  0038EE  501C               	movf	(pad@i+1)^0,w,c
  5417  0038F0  0A80               	xorlw	128
  5418  0038F2  6E1A               	movwf	??_pad^0,c
  5419  0038F4  501E               	movf	(pad@w+1)^0,w,c
  5420  0038F6  0A80               	xorlw	128
  5421  0038F8  581A               	subwfb	??_pad^0,w,c
  5422  0038FA  A0D8               	btfss	status,0,c
  5423  0038FC  EF82  F01C         	goto	u6181
  5424  003900  EF84  F01C         	goto	u6180
  5425  003904                     u6181:
  5426  003904  EF69  F01C         	goto	l4683
  5427  003908                     u6180:
  5428  003908                     
  5429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5430  003908  B078               	btfsc	_flags^0,0,c
  5431  00390A  EF89  F01C         	goto	u6191
  5432  00390E  EF8B  F01C         	goto	u6190
  5433  003912                     u6191:
  5434  003912  EF95  F01C         	goto	l4691
  5435  003916                     u6190:
  5436  003916                     
  5437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5438  003916  C016  F00D         	movff	pad@buf,fputs@s
  5439  00391A  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5440  00391E  C014  F00F         	movff	pad@fp,fputs@fp
  5441  003922  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5442  003926  ECBA  F01E         	call	_fputs	;wreg free
  5443  00392A                     l4691:
  5444                           
  5445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5446  00392A  C016  F004         	movff	pad@buf,strlen@s
  5447  00392E  C017  F005         	movff	pad@buf+1,strlen@s+1
  5448  003932  EC30  F01F         	call	_strlen	;wreg free
  5449  003936  501D               	movf	pad@w^0,w,c
  5450  003938  2404               	addwf	?_strlen^0,w,c
  5451  00393A  6E14               	movwf	?_pad^0,c
  5452  00393C  501E               	movf	(pad@w+1)^0,w,c
  5453  00393E  2005               	addwfc	(?_strlen+1)^0,w,c
  5454  003940  6E15               	movwf	(?_pad+1)^0,c
  5455  003942  0012               	return		;funcret
  5456  003944                     __end_of_pad:
  5457                           	opt callstack 0
  5458                           
  5459 ;; *************** function _strlen *****************
  5460 ;; Defined at:
  5461 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  s               2    3[COMRAM] PTR const unsigned char 
  5464 ;;		 -> dbuf(80), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5467 ;;		 -> dbuf(80), 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  2    3[COMRAM] unsigned int 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5477 ;;      Params:         2       0       0       0       0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0
  5480 ;;      Totals:         4       0       0       0       0       0       0
  5481 ;;Total ram usage:        4 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    2
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_pad
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text15
  5492  003E60                     __ptext15:
  5493                           	opt callstack 0
  5494  003E60                     _strlen:
  5495                           	opt callstack 23
  5496  003E60  C004  F006         	movff	strlen@s,strlen@a
  5497  003E64  C005  F007         	movff	strlen@s+1,strlen@a+1
  5498  003E68  EF38  F01F         	goto	l4461
  5499  003E6C                     l4459:
  5500  003E6C  4A04               	infsnz	strlen@s^0,f,c
  5501  003E6E  2A05               	incf	(strlen@s+1)^0,f,c
  5502  003E70                     l4461:
  5503  003E70  C004  FFD9         	movff	strlen@s,fsr2l
  5504  003E74  C005  FFDA         	movff	strlen@s+1,fsr2h
  5505  003E78  50DF               	movf	indf2,w,c
  5506  003E7A  A4D8               	btfss	status,2,c
  5507  003E7C  EF42  F01F         	goto	u5741
  5508  003E80  EF44  F01F         	goto	u5740
  5509  003E84                     u5741:
  5510  003E84  EF36  F01F         	goto	l4459
  5511  003E88                     u5740:
  5512  003E88  5006               	movf	strlen@a^0,w,c
  5513  003E8A  5C04               	subwf	strlen@s^0,w,c
  5514  003E8C  6E04               	movwf	?_strlen^0,c
  5515  003E8E  5007               	movf	(strlen@a+1)^0,w,c
  5516  003E90  5805               	subwfb	(strlen@s+1)^0,w,c
  5517  003E92  6E05               	movwf	(?_strlen+1)^0,c
  5518  003E94  0012               	return		;funcret
  5519  003E96                     __end_of_strlen:
  5520                           	opt callstack 0
  5521                           
  5522 ;; *************** function _fputs *****************
  5523 ;; Defined at:
  5524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5527 ;;		 -> dbuf(80), 
  5528 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5529 ;;		 -> sprintf@f(6), 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  i               2   17[COMRAM] int 
  5532 ;;  c               1   16[COMRAM] unsigned char 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  2   12[COMRAM] int 
  5535 ;; Registers used:
  5536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5542 ;;      Params:         4       0       0       0       0       0       0
  5543 ;;      Locals:         3       0       0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0
  5545 ;;      Totals:         7       0       0       0       0       0       0
  5546 ;;Total ram usage:        7 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    4
  5549 ;; This function calls:
  5550 ;;		_fputc
  5551 ;; This function is called by:
  5552 ;;		_pad
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text16
  5557  003D74                     __ptext16:
  5558                           	opt callstack 0
  5559  003D74                     _fputs:
  5560                           	opt callstack 21
  5561  003D74  0E00               	movlw	0
  5562  003D76  6E13               	movwf	(fputs@i+1)^0,c
  5563  003D78  0E00               	movlw	0
  5564  003D7A  6E12               	movwf	fputs@i^0,c
  5565  003D7C  EFCB  F01E         	goto	l4455
  5566  003D80                     l4451:
  5567  003D80  C011  F004         	movff	fputs@c,fputc@c
  5568  003D84  6A05               	clrf	(fputc@c+1)^0,c
  5569  003D86  C00F  F006         	movff	fputs@fp,fputc@fp
  5570  003D8A  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  5571  003D8E  EC7A  F01B         	call	_fputc	;wreg free
  5572  003D92  4A12               	infsnz	fputs@i^0,f,c
  5573  003D94  2A13               	incf	(fputs@i+1)^0,f,c
  5574  003D96                     l4455:
  5575  003D96  5012               	movf	fputs@i^0,w,c
  5576  003D98  240D               	addwf	fputs@s^0,w,c
  5577  003D9A  6ED9               	movwf	fsr2l,c
  5578  003D9C  5013               	movf	(fputs@i+1)^0,w,c
  5579  003D9E  200E               	addwfc	(fputs@s+1)^0,w,c
  5580  003DA0  6EDA               	movwf	fsr2h,c
  5581  003DA2  50DF               	movf	indf2,w,c
  5582  003DA4  6E11               	movwf	fputs@c^0,c
  5583  003DA6  5011               	movf	fputs@c^0,w,c
  5584  003DA8  A4D8               	btfss	status,2,c
  5585  003DAA  EFD9  F01E         	goto	u5731
  5586  003DAE  EFDB  F01E         	goto	u5730
  5587  003DB2                     u5731:
  5588  003DB2  EFC0  F01E         	goto	l4451
  5589  003DB6                     u5730:
  5590  003DB6  0012               	return		;funcret
  5591  003DB8                     __end_of_fputs:
  5592                           	opt callstack 0
  5593                           
  5594 ;; *************** function _fputc *****************
  5595 ;; Defined at:
  5596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  c               2    3[COMRAM] int 
  5599 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  5600 ;;		 -> sprintf@f(6), 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  2    3[COMRAM] int 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:         4       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0
  5614 ;;      Temps:          5       0       0       0       0       0       0
  5615 ;;      Totals:         9       0       0       0       0       0       0
  5616 ;;Total ram usage:        9 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    3
  5619 ;; This function calls:
  5620 ;;		_putch
  5621 ;; This function is called by:
  5622 ;;		_pad
  5623 ;;		_vfpfcnvrt
  5624 ;;		_fputs
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text17
  5629  0036F4                     __ptext17:
  5630                           	opt callstack 0
  5631  0036F4                     _fputc:
  5632                           	opt callstack 21
  5633  0036F4  5006               	movf	fputc@fp^0,w,c
  5634  0036F6  1007               	iorwf	(fputc@fp+1)^0,w,c
  5635  0036F8  B4D8               	btfsc	status,2,c
  5636  0036FA  EF81  F01B         	goto	u5691
  5637  0036FE  EF83  F01B         	goto	u5690
  5638  003702                     u5691:
  5639  003702  EF8C  F01B         	goto	l4439
  5640  003706                     u5690:
  5641  003706  5006               	movf	fputc@fp^0,w,c
  5642  003708  1007               	iorwf	(fputc@fp+1)^0,w,c
  5643  00370A  A4D8               	btfss	status,2,c
  5644  00370C  EF8A  F01B         	goto	u5701
  5645  003710  EF8C  F01B         	goto	u5700
  5646  003714                     u5701:
  5647  003714  EF91  F01B         	goto	l4441
  5648  003718                     u5700:
  5649  003718                     l4439:
  5650  003718  5004               	movf	fputc@c^0,w,c
  5651  00371A  EC93  F01F         	call	_putch
  5652  00371E  EFDE  F01B         	goto	l1073
  5653  003722                     l4441:
  5654  003722  EE20 F004          	lfsr	2,4
  5655  003726  5006               	movf	fputc@fp^0,w,c
  5656  003728  26D9               	addwf	fsr2l,f,c
  5657  00372A  5007               	movf	(fputc@fp+1)^0,w,c
  5658  00372C  22DA               	addwfc	fsr2h,f,c
  5659  00372E  50DE               	movf	postinc2,w,c
  5660  003730  10DE               	iorwf	postinc2,w,c
  5661  003732  B4D8               	btfsc	status,2,c
  5662  003734  EF9E  F01B         	goto	u5711
  5663  003738  EFA0  F01B         	goto	u5710
  5664  00373C                     u5711:
  5665  00373C  EFBB  F01B         	goto	l4445
  5666  003740                     u5710:
  5667  003740  EE20 F004          	lfsr	2,4
  5668  003744  5006               	movf	fputc@fp^0,w,c
  5669  003746  26D9               	addwf	fsr2l,f,c
  5670  003748  5007               	movf	(fputc@fp+1)^0,w,c
  5671  00374A  22DA               	addwfc	fsr2h,f,c
  5672  00374C  EE10 F002          	lfsr	1,2
  5673  003750  5006               	movf	fputc@fp^0,w,c
  5674  003752  26E1               	addwf	fsr1l,f,c
  5675  003754  5007               	movf	(fputc@fp+1)^0,w,c
  5676  003756  22E2               	addwfc	fsr1h,f,c
  5677  003758  50DE               	movf	postinc2,w,c
  5678  00375A  5CE6               	subwf	postinc1,w,c
  5679  00375C  50E6               	movf	postinc1,w,c
  5680  00375E  0A80               	xorlw	128
  5681  003760  6E0C               	movwf	(??_fputc+4)^0,c
  5682  003762  50DE               	movf	postinc2,w,c
  5683  003764  0A80               	xorlw	128
  5684  003766  580C               	subwfb	(??_fputc+4)^0,w,c
  5685  003768  B0D8               	btfsc	status,0,c
  5686  00376A  EFB9  F01B         	goto	u5721
  5687  00376E  EFBB  F01B         	goto	u5720
  5688  003772                     u5721:
  5689  003772  EFDE  F01B         	goto	l1073
  5690  003776                     u5720:
  5691  003776                     l4445:
  5692  003776  EE20 F002          	lfsr	2,2
  5693  00377A  5006               	movf	fputc@fp^0,w,c
  5694  00377C  26D9               	addwf	fsr2l,f,c
  5695  00377E  5007               	movf	(fputc@fp+1)^0,w,c
  5696  003780  22DA               	addwfc	fsr2h,f,c
  5697  003782  CFDE F008          	movff	postinc2,??_fputc
  5698  003786  CFDD F009          	movff	postdec2,??_fputc+1
  5699  00378A  C006  FFD9         	movff	fputc@fp,fsr2l
  5700  00378E  C007  FFDA         	movff	fputc@fp+1,fsr2h
  5701  003792  CFDE F00A          	movff	postinc2,??_fputc+2
  5702  003796  CFDD F00B          	movff	postdec2,??_fputc+3
  5703  00379A  5008               	movf	??_fputc^0,w,c
  5704  00379C  240A               	addwf	(??_fputc+2)^0,w,c
  5705  00379E  6ED9               	movwf	fsr2l,c
  5706  0037A0  5009               	movf	(??_fputc+1)^0,w,c
  5707  0037A2  200B               	addwfc	(??_fputc+3)^0,w,c
  5708  0037A4  6EDA               	movwf	fsr2h,c
  5709  0037A6  C004  FFDF         	movff	fputc@c,indf2
  5710  0037AA  EE20 F002          	lfsr	2,2
  5711  0037AE  5006               	movf	fputc@fp^0,w,c
  5712  0037B0  26D9               	addwf	fsr2l,f,c
  5713  0037B2  5007               	movf	(fputc@fp+1)^0,w,c
  5714  0037B4  22DA               	addwfc	fsr2h,f,c
  5715  0037B6  2ADE               	incf	postinc2,f,c
  5716  0037B8  0E00               	movlw	0
  5717  0037BA  22DD               	addwfc	postdec2,f,c
  5718  0037BC                     l1073:
  5719  0037BC  0012               	return		;funcret
  5720  0037BE                     __end_of_fputc:
  5721                           	opt callstack 0
  5722                           
  5723 ;; *************** function _putch *****************
  5724 ;; Defined at:
  5725 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  c               1    wreg     unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  c               1    0[COMRAM] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         0       0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0
  5742 ;;      Totals:         0       0       0       0       0       0       0
  5743 ;;Total ram usage:        0 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    2
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_fputc
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text18
  5754  003F26                     __ptext18:
  5755                           	opt callstack 0
  5756  003F26                     _putch:
  5757                           	opt callstack 21
  5758  003F26  0012               	return		;funcret
  5759  003F28                     __end_of_putch:
  5760                           	opt callstack 0
  5761                           
  5762 ;; *************** function _floorf *****************
  5763 ;; Defined at:
  5764 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  x               4   67[COMRAM] float 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  u               4   83[COMRAM] struct .
  5769 ;;  m               4   77[COMRAM] unsigned long 
  5770 ;;  e               2   81[COMRAM] int 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  4   67[COMRAM] float 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5780 ;;      Params:         4       0       0       0       0       0       0
  5781 ;;      Locals:        10       0       0       0       0       0       0
  5782 ;;      Temps:          6       0       0       0       0       0       0
  5783 ;;      Totals:        20       0       0       0       0       0       0
  5784 ;;Total ram usage:       20 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    2
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_efgtoa
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text19
  5795  0025EE                     __ptext19:
  5796                           	opt callstack 0
  5797  0025EE                     _floorf:
  5798                           	opt callstack 24
  5799  0025EE  C0E0  F054         	movff	floorf@F524,floorf@u
  5800  0025F2  C0E1  F055         	movff	floorf@F524+1,floorf@u+1
  5801  0025F6  C0E2  F056         	movff	floorf@F524+2,floorf@u+2
  5802  0025FA  C0E3  F057         	movff	floorf@F524+3,floorf@u+3
  5803  0025FE  C044  F054         	movff	floorf@x,floorf@u
  5804  002602  C045  F055         	movff	floorf@x+1,floorf@u+1
  5805  002606  C046  F056         	movff	floorf@x+2,floorf@u+2
  5806  00260A  C047  F057         	movff	floorf@x+3,floorf@u+3
  5807  00260E  0E81               	movlw	129
  5808  002610  6E48               	movwf	??_floorf^0,c
  5809  002612  0EFF               	movlw	255
  5810  002614  6E49               	movwf	(??_floorf+1)^0,c
  5811  002616  C054  F04A         	movff	floorf@u,??_floorf+2
  5812  00261A  C055  F04B         	movff	floorf@u+1,??_floorf+3
  5813  00261E  C056  F04C         	movff	floorf@u+2,??_floorf+4
  5814  002622  C057  F04D         	movff	floorf@u+3,??_floorf+5
  5815  002626  0E18               	movlw	24
  5816  002628  EF1B  F013         	goto	u6320
  5817  00262C                     u6325:
  5818  00262C  90D8               	bcf	status,0,c
  5819  00262E  324D               	rrcf	(??_floorf+5)^0,f,c
  5820  002630  324C               	rrcf	(??_floorf+4)^0,f,c
  5821  002632  324B               	rrcf	(??_floorf+3)^0,f,c
  5822  002634  324A               	rrcf	(??_floorf+2)^0,f,c
  5823  002636                     u6320:
  5824  002636  2EE8               	decfsz	wreg,f,c
  5825  002638  EF16  F013         	goto	u6325
  5826  00263C  504A               	movf	(??_floorf+2)^0,w,c
  5827  00263E  2448               	addwf	??_floorf^0,w,c
  5828  002640  6E52               	movwf	floorf@e^0,c
  5829  002642  0E00               	movlw	0
  5830  002644  2049               	addwfc	(??_floorf+1)^0,w,c
  5831  002646  6E53               	movwf	(floorf@e+1)^0,c
  5832  002648  BE53               	btfsc	(floorf@e+1)^0,7,c
  5833  00264A  EF30  F013         	goto	u6331
  5834  00264E  5053               	movf	(floorf@e+1)^0,w,c
  5835  002650  E109               	bnz	u6330
  5836  002652  0E17               	movlw	23
  5837  002654  5C52               	subwf	floorf@e^0,w,c
  5838  002656  A0D8               	btfss	status,0,c
  5839  002658  EF30  F013         	goto	u6331
  5840  00265C  EF32  F013         	goto	u6330
  5841  002660                     u6331:
  5842  002660  EF3C  F013         	goto	l4737
  5843  002664                     u6330:
  5844  002664                     l4735:
  5845  002664  C044  F044         	movff	floorf@x,?_floorf
  5846  002668  C045  F045         	movff	floorf@x+1,?_floorf+1
  5847  00266C  C046  F046         	movff	floorf@x+2,?_floorf+2
  5848  002670  C047  F047         	movff	floorf@x+3,?_floorf+3
  5849  002674  EFFF  F013         	goto	l1034
  5850  002678                     l4737:
  5851  002678  BE53               	btfsc	(floorf@e+1)^0,7,c
  5852  00267A  EF41  F013         	goto	u6341
  5853  00267E  EF43  F013         	goto	u6340
  5854  002682                     u6341:
  5855  002682  EFB3  F013         	goto	l4747
  5856  002686                     u6340:
  5857  002686  C052  F048         	movff	floorf@e,??_floorf
  5858  00268A  0EFF               	movlw	255
  5859  00268C  6E49               	movwf	(??_floorf+1)^0,c
  5860  00268E  0EFF               	movlw	255
  5861  002690  6E4A               	movwf	(??_floorf+2)^0,c
  5862  002692  0E7F               	movlw	127
  5863  002694  6E4B               	movwf	(??_floorf+3)^0,c
  5864  002696  0E00               	movlw	0
  5865  002698  6E4C               	movwf	(??_floorf+4)^0,c
  5866  00269A                     u6355:
  5867  00269A  6648               	tstfsz	??_floorf^0,c
  5868  00269C  EF52  F013         	goto	u6356
  5869  0026A0  EF5A  F013         	goto	u6357
  5870  0026A4                     u6356:
  5871  0026A4  344C               	rlcf	(??_floorf+4)^0,w,c
  5872  0026A6  324C               	rrcf	(??_floorf+4)^0,f,c
  5873  0026A8  324B               	rrcf	(??_floorf+3)^0,f,c
  5874  0026AA  324A               	rrcf	(??_floorf+2)^0,f,c
  5875  0026AC  3249               	rrcf	(??_floorf+1)^0,f,c
  5876  0026AE  2E48               	decfsz	??_floorf^0,f,c
  5877  0026B0  EF4D  F013         	goto	u6355
  5878  0026B4                     u6357:
  5879  0026B4  C049  F04E         	movff	??_floorf+1,floorf@m
  5880  0026B8  C04A  F04F         	movff	??_floorf+2,floorf@m+1
  5881  0026BC  C04B  F050         	movff	??_floorf+3,floorf@m+2
  5882  0026C0  C04C  F051         	movff	??_floorf+4,floorf@m+3
  5883  0026C4  504E               	movf	floorf@m^0,w,c
  5884  0026C6  1454               	andwf	floorf@u^0,w,c
  5885  0026C8  6E48               	movwf	??_floorf^0,c
  5886  0026CA  504F               	movf	(floorf@m+1)^0,w,c
  5887  0026CC  1455               	andwf	(floorf@u+1)^0,w,c
  5888  0026CE  6E49               	movwf	(??_floorf+1)^0,c
  5889  0026D0  5050               	movf	(floorf@m+2)^0,w,c
  5890  0026D2  1456               	andwf	(floorf@u+2)^0,w,c
  5891  0026D4  6E4A               	movwf	(??_floorf+2)^0,c
  5892  0026D6  5051               	movf	(floorf@m+3)^0,w,c
  5893  0026D8  1457               	andwf	(floorf@u+3)^0,w,c
  5894  0026DA  6E4B               	movwf	(??_floorf+3)^0,c
  5895  0026DC  5048               	movf	??_floorf^0,w,c
  5896  0026DE  1049               	iorwf	(??_floorf+1)^0,w,c
  5897  0026E0  104A               	iorwf	(??_floorf+2)^0,w,c
  5898  0026E2  104B               	iorwf	(??_floorf+3)^0,w,c
  5899  0026E4  A4D8               	btfss	status,2,c
  5900  0026E6  EF77  F013         	goto	u6361
  5901  0026EA  EF79  F013         	goto	u6360
  5902  0026EE                     u6361:
  5903  0026EE  EF7B  F013         	goto	l4743
  5904  0026F2                     u6360:
  5905  0026F2  EF32  F013         	goto	l4735
  5906  0026F6                     l4743:
  5907  0026F6  C054  F048         	movff	floorf@u,??_floorf
  5908  0026FA  C055  F049         	movff	floorf@u+1,??_floorf+1
  5909  0026FE  C056  F04A         	movff	floorf@u+2,??_floorf+2
  5910  002702  C057  F04B         	movff	floorf@u+3,??_floorf+3
  5911  002706  0E20               	movlw	32
  5912  002708  EF8B  F013         	goto	u6370
  5913  00270C                     u6375:
  5914  00270C  90D8               	bcf	status,0,c
  5915  00270E  324B               	rrcf	(??_floorf+3)^0,f,c
  5916  002710  324A               	rrcf	(??_floorf+2)^0,f,c
  5917  002712  3249               	rrcf	(??_floorf+1)^0,f,c
  5918  002714  3248               	rrcf	??_floorf^0,f,c
  5919  002716                     u6370:
  5920  002716  2EE8               	decfsz	wreg,f,c
  5921  002718  EF86  F013         	goto	u6375
  5922  00271C  5048               	movf	??_floorf^0,w,c
  5923  00271E  1049               	iorwf	(??_floorf+1)^0,w,c
  5924  002720  104A               	iorwf	(??_floorf+2)^0,w,c
  5925  002722  104B               	iorwf	(??_floorf+3)^0,w,c
  5926  002724  B4D8               	btfsc	status,2,c
  5927  002726  EF97  F013         	goto	u6381
  5928  00272A  EF99  F013         	goto	u6380
  5929  00272E                     u6381:
  5930  00272E  EFA1  F013         	goto	l1037
  5931  002732                     u6380:
  5932  002732  504E               	movf	floorf@m^0,w,c
  5933  002734  2654               	addwf	floorf@u^0,f,c
  5934  002736  504F               	movf	(floorf@m+1)^0,w,c
  5935  002738  2255               	addwfc	(floorf@u+1)^0,f,c
  5936  00273A  5050               	movf	(floorf@m+2)^0,w,c
  5937  00273C  2256               	addwfc	(floorf@u+2)^0,f,c
  5938  00273E  5051               	movf	(floorf@m+3)^0,w,c
  5939  002740  2257               	addwfc	(floorf@u+3)^0,f,c
  5940  002742                     l1037:
  5941  002742  1C4E               	comf	floorf@m^0,w,c
  5942  002744  6E48               	movwf	??_floorf^0,c
  5943  002746  1C4F               	comf	(floorf@m+1)^0,w,c
  5944  002748  6E49               	movwf	(??_floorf+1)^0,c
  5945  00274A  1C50               	comf	(floorf@m+2)^0,w,c
  5946  00274C  6E4A               	movwf	(??_floorf+2)^0,c
  5947  00274E  1C51               	comf	(floorf@m+3)^0,w,c
  5948  002750  6E4B               	movwf	(??_floorf+3)^0,c
  5949  002752  5048               	movf	??_floorf^0,w,c
  5950  002754  1654               	andwf	floorf@u^0,f,c
  5951  002756  5049               	movf	(??_floorf+1)^0,w,c
  5952  002758  1655               	andwf	(floorf@u+1)^0,f,c
  5953  00275A  504A               	movf	(??_floorf+2)^0,w,c
  5954  00275C  1656               	andwf	(floorf@u+2)^0,f,c
  5955  00275E  504B               	movf	(??_floorf+3)^0,w,c
  5956  002760  1657               	andwf	(floorf@u+3)^0,f,c
  5957  002762  EFF7  F013         	goto	l4755
  5958  002766                     l4747:
  5959  002766  C054  F048         	movff	floorf@u,??_floorf
  5960  00276A  C055  F049         	movff	floorf@u+1,??_floorf+1
  5961  00276E  C056  F04A         	movff	floorf@u+2,??_floorf+2
  5962  002772  C057  F04B         	movff	floorf@u+3,??_floorf+3
  5963  002776  0E20               	movlw	32
  5964  002778  EFC3  F013         	goto	u6390
  5965  00277C                     u6395:
  5966  00277C  90D8               	bcf	status,0,c
  5967  00277E  324B               	rrcf	(??_floorf+3)^0,f,c
  5968  002780  324A               	rrcf	(??_floorf+2)^0,f,c
  5969  002782  3249               	rrcf	(??_floorf+1)^0,f,c
  5970  002784  3248               	rrcf	??_floorf^0,f,c
  5971  002786                     u6390:
  5972  002786  2EE8               	decfsz	wreg,f,c
  5973  002788  EFBE  F013         	goto	u6395
  5974  00278C  5048               	movf	??_floorf^0,w,c
  5975  00278E  1049               	iorwf	(??_floorf+1)^0,w,c
  5976  002790  104A               	iorwf	(??_floorf+2)^0,w,c
  5977  002792  104B               	iorwf	(??_floorf+3)^0,w,c
  5978  002794  A4D8               	btfss	status,2,c
  5979  002796  EFCF  F013         	goto	u6401
  5980  00279A  EFD1  F013         	goto	u6400
  5981  00279E                     u6401:
  5982  00279E  EFDB  F013         	goto	l4751
  5983  0027A2                     u6400:
  5984  0027A2  0E00               	movlw	0
  5985  0027A4  6E54               	movwf	floorf@u^0,c
  5986  0027A6  0E00               	movlw	0
  5987  0027A8  6E55               	movwf	(floorf@u+1)^0,c
  5988  0027AA  0E00               	movlw	0
  5989  0027AC  6E56               	movwf	(floorf@u+2)^0,c
  5990  0027AE  0E00               	movlw	0
  5991  0027B0  6E57               	movwf	(floorf@u+3)^0,c
  5992  0027B2  EFF7  F013         	goto	l4755
  5993  0027B6                     l4751:
  5994  0027B6  90D8               	bcf	status,0,c
  5995  0027B8  3454               	rlcf	floorf@u^0,w,c
  5996  0027BA  6E48               	movwf	??_floorf^0,c
  5997  0027BC  3455               	rlcf	(floorf@u+1)^0,w,c
  5998  0027BE  6E49               	movwf	(??_floorf+1)^0,c
  5999  0027C0  3456               	rlcf	(floorf@u+2)^0,w,c
  6000  0027C2  6E4A               	movwf	(??_floorf+2)^0,c
  6001  0027C4  3457               	rlcf	(floorf@u+3)^0,w,c
  6002  0027C6  6E4B               	movwf	(??_floorf+3)^0,c
  6003  0027C8  5048               	movf	??_floorf^0,w,c
  6004  0027CA  1049               	iorwf	(??_floorf+1)^0,w,c
  6005  0027CC  104A               	iorwf	(??_floorf+2)^0,w,c
  6006  0027CE  104B               	iorwf	(??_floorf+3)^0,w,c
  6007  0027D0  B4D8               	btfsc	status,2,c
  6008  0027D2  EFED  F013         	goto	u6411
  6009  0027D6  EFEF  F013         	goto	u6410
  6010  0027DA                     u6411:
  6011  0027DA  EFF7  F013         	goto	l4755
  6012  0027DE                     u6410:
  6013  0027DE  0E00               	movlw	0
  6014  0027E0  6E54               	movwf	floorf@u^0,c
  6015  0027E2  0E00               	movlw	0
  6016  0027E4  6E55               	movwf	(floorf@u+1)^0,c
  6017  0027E6  0E80               	movlw	128
  6018  0027E8  6E56               	movwf	(floorf@u+2)^0,c
  6019  0027EA  0EBF               	movlw	191
  6020  0027EC  6E57               	movwf	(floorf@u+3)^0,c
  6021  0027EE                     l4755:
  6022  0027EE  C054  F044         	movff	floorf@u,?_floorf
  6023  0027F2  C055  F045         	movff	floorf@u+1,?_floorf+1
  6024  0027F6  C056  F046         	movff	floorf@u+2,?_floorf+2
  6025  0027FA  C057  F047         	movff	floorf@u+3,?_floorf+3
  6026  0027FE                     l1034:
  6027  0027FE  0012               	return		;funcret
  6028  002800                     __end_of_floorf:
  6029                           	opt callstack 0
  6030                           
  6031 ;; *************** function ___fpclassifyf *****************
  6032 ;; Defined at:
  6033 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  x               4    3[COMRAM] float 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  u               4   13[COMRAM] struct .
  6038 ;;  e               2   11[COMRAM] int 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2    3[COMRAM] int 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6048 ;;      Params:         4       0       0       0       0       0       0
  6049 ;;      Locals:         6       0       0       0       0       0       0
  6050 ;;      Temps:          4       0       0       0       0       0       0
  6051 ;;      Totals:        14       0       0       0       0       0       0
  6052 ;;Total ram usage:       14 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    2
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_efgtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text20
  6063  003364                     __ptext20:
  6064                           	opt callstack 0
  6065  003364                     ___fpclassifyf:
  6066                           	opt callstack 24
  6067  003364  C0E4  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6068  003368  C0E5  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6069  00336C  C0E6  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6070  003370  C0E7  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6071  003374  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6072  003378  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6073  00337C  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6074  003380  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6075  003384  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  6076  003388  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6077  00338C  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6078  003390  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6079  003394  0E18               	movlw	24
  6080  003396  EFD2  F019         	goto	u6200
  6081  00339A                     u6205:
  6082  00339A  90D8               	bcf	status,0,c
  6083  00339C  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6084  00339E  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6085  0033A0  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  6086  0033A2  3208               	rrcf	??___fpclassifyf^0,f,c
  6087  0033A4                     u6200:
  6088  0033A4  2EE8               	decfsz	wreg,f,c
  6089  0033A6  EFCD  F019         	goto	u6205
  6090  0033AA  5008               	movf	??___fpclassifyf^0,w,c
  6091  0033AC  6E0C               	movwf	___fpclassifyf@e^0,c
  6092  0033AE  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  6093  0033B0  500C               	movf	___fpclassifyf@e^0,w,c
  6094  0033B2  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6095  0033B4  A4D8               	btfss	status,2,c
  6096  0033B6  EFDF  F019         	goto	u6211
  6097  0033BA  EFE1  F019         	goto	u6210
  6098  0033BE                     u6211:
  6099  0033BE  EF01  F01A         	goto	l4707
  6100  0033C2                     u6210:
  6101  0033C2  90D8               	bcf	status,0,c
  6102  0033C4  340E               	rlcf	___fpclassifyf@u^0,w,c
  6103  0033C6  6E08               	movwf	??___fpclassifyf^0,c
  6104  0033C8  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6105  0033CA  6E09               	movwf	(??___fpclassifyf+1)^0,c
  6106  0033CC  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6107  0033CE  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  6108  0033D0  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6109  0033D2  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  6110  0033D4  5008               	movf	??___fpclassifyf^0,w,c
  6111  0033D6  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  6112  0033D8  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6113  0033DA  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6114  0033DC  A4D8               	btfss	status,2,c
  6115  0033DE  EFF3  F019         	goto	u6221
  6116  0033E2  EFF5  F019         	goto	u6220
  6117  0033E6                     u6221:
  6118  0033E6  EFFB  F019         	goto	l4703
  6119  0033EA                     u6220:
  6120  0033EA  0E00               	movlw	0
  6121  0033EC  6E05               	movwf	(?___fpclassifyf+1)^0,c
  6122  0033EE  0E02               	movlw	2
  6123  0033F0  6E04               	movwf	?___fpclassifyf^0,c
  6124  0033F2  EF30  F01A         	goto	l996
  6125  0033F6                     l4703:
  6126  0033F6  0E00               	movlw	0
  6127  0033F8  6E05               	movwf	(?___fpclassifyf+1)^0,c
  6128  0033FA  0E03               	movlw	3
  6129  0033FC  6E04               	movwf	?___fpclassifyf^0,c
  6130  0033FE  EF30  F01A         	goto	l996
  6131  003402                     l4707:
  6132  003402  280C               	incf	___fpclassifyf@e^0,w,c
  6133  003404  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6134  003406  A4D8               	btfss	status,2,c
  6135  003408  EF08  F01A         	goto	u6231
  6136  00340C  EF0A  F01A         	goto	u6230
  6137  003410                     u6231:
  6138  003410  EF2C  F01A         	goto	l4713
  6139  003414                     u6230:
  6140  003414  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  6141  003418  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6142  00341C  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6143  003420  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6144  003424  0E09               	movlw	9
  6145  003426                     u6245:
  6146  003426  90D8               	bcf	status,0,c
  6147  003428  3608               	rlcf	??___fpclassifyf^0,f,c
  6148  00342A  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  6149  00342C  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6150  00342E  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6151  003430  2EE8               	decfsz	wreg,f,c
  6152  003432  EF13  F01A         	goto	u6245
  6153  003436  5008               	movf	??___fpclassifyf^0,w,c
  6154  003438  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  6155  00343A  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6156  00343C  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6157  00343E  B4D8               	btfsc	status,2,c
  6158  003440  EF24  F01A         	goto	u6251
  6159  003444  EF27  F01A         	goto	u6250
  6160  003448                     u6251:
  6161  003448  0E01               	movlw	1
  6162  00344A  EF28  F01A         	goto	u6260
  6163  00344E                     u6250:
  6164  00344E  0E00               	movlw	0
  6165  003450                     u6260:
  6166  003450  6E04               	movwf	?___fpclassifyf^0,c
  6167  003452  6A05               	clrf	(?___fpclassifyf+1)^0,c
  6168  003454  EF30  F01A         	goto	l996
  6169  003458                     l4713:
  6170  003458  0E00               	movlw	0
  6171  00345A  6E05               	movwf	(?___fpclassifyf+1)^0,c
  6172  00345C  0E04               	movlw	4
  6173  00345E  6E04               	movwf	?___fpclassifyf^0,c
  6174  003460                     l996:
  6175  003460  0012               	return		;funcret
  6176  003462                     __end_of___fpclassifyf:
  6177                           	opt callstack 0
  6178                           
  6179 ;; *************** function ___fltol *****************
  6180 ;; Defined at:
  6181 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  f1              4    3[COMRAM] int 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  exp1            1   12[COMRAM] unsigned char 
  6186 ;;  sign1           1   11[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  4    3[COMRAM] long 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6196 ;;      Params:         4       0       0       0       0       0       0
  6197 ;;      Locals:         2       0       0       0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0
  6199 ;;      Totals:        10       0       0       0       0       0       0
  6200 ;;Total ram usage:       10 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    2
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_efgtoa
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text21
  6211  00315A                     __ptext21:
  6212                           	opt callstack 0
  6213  00315A                     ___fltol:
  6214                           	opt callstack 24
  6215  00315A  3406               	rlcf	(___fltol@f1+2)^0,w,c
  6216  00315C  3407               	rlcf	(___fltol@f1+3)^0,w,c
  6217  00315E  6E0D               	movwf	___fltol@exp1^0,c
  6218  003160  500D               	movf	___fltol@exp1^0,w,c
  6219  003162  A4D8               	btfss	status,2,c
  6220  003164  EFB6  F018         	goto	u7071
  6221  003168  EFB8  F018         	goto	u7070
  6222  00316C                     u7071:
  6223  00316C  EFC2  F018         	goto	l5175
  6224  003170                     u7070:
  6225  003170                     l5171:
  6226  003170  0E00               	movlw	0
  6227  003172  6E04               	movwf	?___fltol^0,c
  6228  003174  0E00               	movlw	0
  6229  003176  6E05               	movwf	(?___fltol+1)^0,c
  6230  003178  0E00               	movlw	0
  6231  00317A  6E06               	movwf	(?___fltol+2)^0,c
  6232  00317C  0E00               	movlw	0
  6233  00317E  6E07               	movwf	(?___fltol+3)^0,c
  6234  003180  EF2F  F019         	goto	l612
  6235  003184                     l5175:
  6236  003184  C004  F008         	movff	___fltol@f1,??___fltol
  6237  003188  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  6238  00318C  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  6239  003190  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  6240  003194  0E20               	movlw	32
  6241  003196  EFD2  F018         	goto	u7080
  6242  00319A                     u7085:
  6243  00319A  90D8               	bcf	status,0,c
  6244  00319C  320B               	rrcf	(??___fltol+3)^0,f,c
  6245  00319E  320A               	rrcf	(??___fltol+2)^0,f,c
  6246  0031A0  3209               	rrcf	(??___fltol+1)^0,f,c
  6247  0031A2  3208               	rrcf	??___fltol^0,f,c
  6248  0031A4                     u7080:
  6249  0031A4  2EE8               	decfsz	wreg,f,c
  6250  0031A6  EFCD  F018         	goto	u7085
  6251  0031AA  5008               	movf	??___fltol^0,w,c
  6252  0031AC  6E0C               	movwf	___fltol@sign1^0,c
  6253  0031AE  8E06               	bsf	(___fltol@f1+2)^0,7,c
  6254  0031B0  0EFF               	movlw	255
  6255  0031B2  1604               	andwf	___fltol@f1^0,f,c
  6256  0031B4  0EFF               	movlw	255
  6257  0031B6  1605               	andwf	(___fltol@f1+1)^0,f,c
  6258  0031B8  0EFF               	movlw	255
  6259  0031BA  1606               	andwf	(___fltol@f1+2)^0,f,c
  6260  0031BC  0E00               	movlw	0
  6261  0031BE  1607               	andwf	(___fltol@f1+3)^0,f,c
  6262  0031C0  0E96               	movlw	150
  6263  0031C2  5E0D               	subwf	___fltol@exp1^0,f,c
  6264  0031C4  BE0D               	btfsc	___fltol@exp1^0,7,c
  6265  0031C6  EFE9  F018         	goto	u7090
  6266  0031CA  EFE7  F018         	goto	u7091
  6267  0031CE                     u7091:
  6268  0031CE  EFFF  F018         	goto	l5195
  6269  0031D2                     u7090:
  6270  0031D2  500D               	movf	___fltol@exp1^0,w,c
  6271  0031D4  0A80               	xorlw	128
  6272  0031D6  0F97               	addlw	151
  6273  0031D8  B0D8               	btfsc	status,0,c
  6274  0031DA  EFF1  F018         	goto	u7101
  6275  0031DE  EFF3  F018         	goto	u7100
  6276  0031E2                     u7101:
  6277  0031E2  EFF5  F018         	goto	l5191
  6278  0031E6                     u7100:
  6279  0031E6  EFB8  F018         	goto	l5171
  6280  0031EA                     l5191:
  6281  0031EA  90D8               	bcf	status,0,c
  6282  0031EC  3207               	rrcf	(___fltol@f1+3)^0,f,c
  6283  0031EE  3206               	rrcf	(___fltol@f1+2)^0,f,c
  6284  0031F0  3205               	rrcf	(___fltol@f1+1)^0,f,c
  6285  0031F2  3204               	rrcf	___fltol@f1^0,f,c
  6286  0031F4  3E0D               	incfsz	___fltol@exp1^0,f,c
  6287  0031F6  EFF5  F018         	goto	l5191
  6288  0031FA  EF17  F019         	goto	l5205
  6289  0031FE                     l5195:
  6290  0031FE  0E1F               	movlw	31
  6291  003200  640D               	cpfsgt	___fltol@exp1^0,c
  6292  003202  EF05  F019         	goto	u7111
  6293  003206  EF07  F019         	goto	u7110
  6294  00320A                     u7111:
  6295  00320A  EF0F  F019         	goto	l5203
  6296  00320E                     u7110:
  6297  00320E  EFB8  F018         	goto	l5171
  6298  003212                     l5201:
  6299  003212  90D8               	bcf	status,0,c
  6300  003214  3604               	rlcf	___fltol@f1^0,f,c
  6301  003216  3605               	rlcf	(___fltol@f1+1)^0,f,c
  6302  003218  3606               	rlcf	(___fltol@f1+2)^0,f,c
  6303  00321A  3607               	rlcf	(___fltol@f1+3)^0,f,c
  6304  00321C  060D               	decf	___fltol@exp1^0,f,c
  6305  00321E                     l5203:
  6306  00321E  500D               	movf	___fltol@exp1^0,w,c
  6307  003220  A4D8               	btfss	status,2,c
  6308  003222  EF15  F019         	goto	u7121
  6309  003226  EF17  F019         	goto	u7120
  6310  00322A                     u7121:
  6311  00322A  EF09  F019         	goto	l5201
  6312  00322E                     u7120:
  6313  00322E                     l5205:
  6314  00322E  500C               	movf	___fltol@sign1^0,w,c
  6315  003230  B4D8               	btfsc	status,2,c
  6316  003232  EF1D  F019         	goto	u7131
  6317  003236  EF1F  F019         	goto	u7130
  6318  00323A                     u7131:
  6319  00323A  EF27  F019         	goto	l5209
  6320  00323E                     u7130:
  6321  00323E  1E07               	comf	(___fltol@f1+3)^0,f,c
  6322  003240  1E06               	comf	(___fltol@f1+2)^0,f,c
  6323  003242  1E05               	comf	(___fltol@f1+1)^0,f,c
  6324  003244  6C04               	negf	___fltol@f1^0,c
  6325  003246  0E00               	movlw	0
  6326  003248  2205               	addwfc	(___fltol@f1+1)^0,f,c
  6327  00324A  2206               	addwfc	(___fltol@f1+2)^0,f,c
  6328  00324C  2207               	addwfc	(___fltol@f1+3)^0,f,c
  6329  00324E                     l5209:
  6330  00324E  C004  F004         	movff	___fltol@f1,?___fltol
  6331  003252  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  6332  003256  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  6333  00325A  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  6334  00325E                     l612:
  6335  00325E  0012               	return		;funcret
  6336  003260                     __end_of___fltol:
  6337                           	opt callstack 0
  6338                           
  6339 ;; *************** function ___flsub *****************
  6340 ;; Defined at:
  6341 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  b               4   42[COMRAM] long 
  6344 ;;  a               4   46[COMRAM] long 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  4   42[COMRAM] long 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6356 ;;      Params:         8       0       0       0       0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0
  6359 ;;      Totals:         8       0       0       0       0       0       0
  6360 ;;Total ram usage:        8 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    3
  6363 ;; This function calls:
  6364 ;;		___fladd
  6365 ;; This function is called by:
  6366 ;;		_efgtoa
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text22
  6371  003D2E                     __ptext22:
  6372                           	opt callstack 0
  6373  003D2E                     ___flsub:
  6374                           	opt callstack 23
  6375  003D2E  0E00               	movlw	0
  6376  003D30  1A2F               	xorwf	___flsub@a^0,f,c
  6377  003D32  0E00               	movlw	0
  6378  003D34  1A30               	xorwf	(___flsub@a+1)^0,f,c
  6379  003D36  0E00               	movlw	0
  6380  003D38  1A31               	xorwf	(___flsub@a+2)^0,f,c
  6381  003D3A  0E80               	movlw	128
  6382  003D3C  1A32               	xorwf	(___flsub@a+3)^0,f,c
  6383  003D3E  C02B  F004         	movff	___flsub@b,___fladd@b
  6384  003D42  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  6385  003D46  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  6386  003D4A  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  6387  003D4E  C02F  F008         	movff	___flsub@a,___fladd@a
  6388  003D52  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  6389  003D56  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  6390  003D5A  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  6391  003D5E  ECB5  F00C         	call	___fladd	;wreg free
  6392  003D62  C004  F02B         	movff	?___fladd,?___flsub
  6393  003D66  C005  F02C         	movff	?___fladd+1,?___flsub+1
  6394  003D6A  C006  F02D         	movff	?___fladd+2,?___flsub+2
  6395  003D6E  C007  F02E         	movff	?___fladd+3,?___flsub+3
  6396  003D72  0012               	return		;funcret
  6397  003D74                     __end_of___flsub:
  6398                           	opt callstack 0
  6399                           
  6400 ;; *************** function ___fladd *****************
  6401 ;; Defined at:
  6402 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  b               4    3[COMRAM] long 
  6405 ;;  a               4    7[COMRAM] long 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  grs             1   18[COMRAM] unsigned char 
  6408 ;;  bexp            1   17[COMRAM] unsigned char 
  6409 ;;  aexp            1   16[COMRAM] unsigned char 
  6410 ;;  signs           1   15[COMRAM] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  4    3[COMRAM] unsigned char 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6420 ;;      Params:         8       0       0       0       0       0       0
  6421 ;;      Locals:         4       0       0       0       0       0       0
  6422 ;;      Temps:          4       0       0       0       0       0       0
  6423 ;;      Totals:        16       0       0       0       0       0       0
  6424 ;;Total ram usage:       16 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    2
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_efgtoa
  6431 ;;		___flsub
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text23
  6436  00196A                     __ptext23:
  6437                           	opt callstack 0
  6438  00196A                     ___fladd:
  6439                           	opt callstack 23
  6440  00196A  5007               	movf	(___fladd@b+3)^0,w,c
  6441  00196C  0B80               	andlw	128
  6442  00196E  6E10               	movwf	___fladd@signs^0,c
  6443  001970  5007               	movf	(___fladd@b+3)^0,w,c
  6444  001972  2407               	addwf	(___fladd@b+3)^0,w,c
  6445  001974  6E12               	movwf	___fladd@bexp^0,c
  6446  001976  AE06               	btfss	(___fladd@b+2)^0,7,c
  6447  001978  EFC0  F00C         	goto	u5771
  6448  00197C  EFC2  F00C         	goto	u5770
  6449  001980                     u5771:
  6450  001980  EFC3  F00C         	goto	l4477
  6451  001984                     u5770:
  6452  001984  8012               	bsf	___fladd@bexp^0,0,c
  6453  001986                     l4477:
  6454  001986  5012               	movf	___fladd@bexp^0,w,c
  6455  001988  B4D8               	btfsc	status,2,c
  6456  00198A  EFC9  F00C         	goto	u5781
  6457  00198E  EFCB  F00C         	goto	u5780
  6458  001992                     u5781:
  6459  001992  EFE0  F00C         	goto	l4487
  6460  001996                     u5780:
  6461  001996  2812               	incf	___fladd@bexp^0,w,c
  6462  001998  A4D8               	btfss	status,2,c
  6463  00199A  EFD1  F00C         	goto	u5791
  6464  00199E  EFD3  F00C         	goto	u5790
  6465  0019A2                     u5791:
  6466  0019A2  EFDB  F00C         	goto	l4483
  6467  0019A6                     u5790:
  6468  0019A6  0E00               	movlw	0
  6469  0019A8  6E04               	movwf	___fladd@b^0,c
  6470  0019AA  0E00               	movlw	0
  6471  0019AC  6E05               	movwf	(___fladd@b+1)^0,c
  6472  0019AE  0E00               	movlw	0
  6473  0019B0  6E06               	movwf	(___fladd@b+2)^0,c
  6474  0019B2  0E00               	movlw	0
  6475  0019B4  6E07               	movwf	(___fladd@b+3)^0,c
  6476  0019B6                     l4483:
  6477  0019B6  8E06               	bsf	(___fladd@b+2)^0,7,c
  6478  0019B8  0E00               	movlw	0
  6479  0019BA  6E07               	movwf	(___fladd@b+3)^0,c
  6480  0019BC  EFE8  F00C         	goto	l4489
  6481  0019C0                     l4487:
  6482  0019C0  0E00               	movlw	0
  6483  0019C2  6E04               	movwf	___fladd@b^0,c
  6484  0019C4  0E00               	movlw	0
  6485  0019C6  6E05               	movwf	(___fladd@b+1)^0,c
  6486  0019C8  0E00               	movlw	0
  6487  0019CA  6E06               	movwf	(___fladd@b+2)^0,c
  6488  0019CC  0E00               	movlw	0
  6489  0019CE  6E07               	movwf	(___fladd@b+3)^0,c
  6490  0019D0                     l4489:
  6491  0019D0  500B               	movf	(___fladd@a+3)^0,w,c
  6492  0019D2  0B80               	andlw	128
  6493  0019D4  6E11               	movwf	___fladd@aexp^0,c
  6494  0019D6  5010               	movf	___fladd@signs^0,w,c
  6495  0019D8  1811               	xorwf	___fladd@aexp^0,w,c
  6496  0019DA  B4D8               	btfsc	status,2,c
  6497  0019DC  EFF2  F00C         	goto	u5801
  6498  0019E0  EFF4  F00C         	goto	u5800
  6499  0019E4                     u5801:
  6500  0019E4  EFF5  F00C         	goto	l4495
  6501  0019E8                     u5800:
  6502  0019E8  8C10               	bsf	___fladd@signs^0,6,c
  6503  0019EA                     l4495:
  6504  0019EA  500B               	movf	(___fladd@a+3)^0,w,c
  6505  0019EC  240B               	addwf	(___fladd@a+3)^0,w,c
  6506  0019EE  6E11               	movwf	___fladd@aexp^0,c
  6507  0019F0  AE0A               	btfss	(___fladd@a+2)^0,7,c
  6508  0019F2  EFFD  F00C         	goto	u5811
  6509  0019F6  EFFF  F00C         	goto	u5810
  6510  0019FA                     u5811:
  6511  0019FA  EF00  F00D         	goto	l4501
  6512  0019FE                     u5810:
  6513  0019FE  8011               	bsf	___fladd@aexp^0,0,c
  6514  001A00                     l4501:
  6515  001A00  5011               	movf	___fladd@aexp^0,w,c
  6516  001A02  B4D8               	btfsc	status,2,c
  6517  001A04  EF06  F00D         	goto	u5821
  6518  001A08  EF08  F00D         	goto	u5820
  6519  001A0C                     u5821:
  6520  001A0C  EF1D  F00D         	goto	l4511
  6521  001A10                     u5820:
  6522  001A10  2811               	incf	___fladd@aexp^0,w,c
  6523  001A12  A4D8               	btfss	status,2,c
  6524  001A14  EF0E  F00D         	goto	u5831
  6525  001A18  EF10  F00D         	goto	u5830
  6526  001A1C                     u5831:
  6527  001A1C  EF18  F00D         	goto	l4507
  6528  001A20                     u5830:
  6529  001A20  0E00               	movlw	0
  6530  001A22  6E08               	movwf	___fladd@a^0,c
  6531  001A24  0E00               	movlw	0
  6532  001A26  6E09               	movwf	(___fladd@a+1)^0,c
  6533  001A28  0E00               	movlw	0
  6534  001A2A  6E0A               	movwf	(___fladd@a+2)^0,c
  6535  001A2C  0E00               	movlw	0
  6536  001A2E  6E0B               	movwf	(___fladd@a+3)^0,c
  6537  001A30                     l4507:
  6538  001A30  8E0A               	bsf	(___fladd@a+2)^0,7,c
  6539  001A32  0E00               	movlw	0
  6540  001A34  6E0B               	movwf	(___fladd@a+3)^0,c
  6541  001A36  EF25  F00D         	goto	l4513
  6542  001A3A                     l4511:
  6543  001A3A  0E00               	movlw	0
  6544  001A3C  6E08               	movwf	___fladd@a^0,c
  6545  001A3E  0E00               	movlw	0
  6546  001A40  6E09               	movwf	(___fladd@a+1)^0,c
  6547  001A42  0E00               	movlw	0
  6548  001A44  6E0A               	movwf	(___fladd@a+2)^0,c
  6549  001A46  0E00               	movlw	0
  6550  001A48  6E0B               	movwf	(___fladd@a+3)^0,c
  6551  001A4A                     l4513:
  6552  001A4A  5012               	movf	___fladd@bexp^0,w,c
  6553  001A4C  5C11               	subwf	___fladd@aexp^0,w,c
  6554  001A4E  B0D8               	btfsc	status,0,c
  6555  001A50  EF2C  F00D         	goto	u5841
  6556  001A54  EF2E  F00D         	goto	u5840
  6557  001A58                     u5841:
  6558  001A58  EF55  F00D         	goto	l4549
  6559  001A5C                     u5840:
  6560  001A5C  AC10               	btfss	___fladd@signs^0,6,c
  6561  001A5E  EF33  F00D         	goto	u5851
  6562  001A62  EF35  F00D         	goto	u5850
  6563  001A66                     u5851:
  6564  001A66  EF37  F00D         	goto	l4519
  6565  001A6A                     u5850:
  6566  001A6A  0E80               	movlw	128
  6567  001A6C  1A10               	xorwf	___fladd@signs^0,f,c
  6568  001A6E                     l4519:
  6569  001A6E  C012  F013         	movff	___fladd@bexp,___fladd@grs
  6570  001A72  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  6571  001A76  C013  F011         	movff	___fladd@grs,___fladd@aexp
  6572  001A7A  C004  F013         	movff	___fladd@b,___fladd@grs
  6573  001A7E  C008  F004         	movff	___fladd@a,___fladd@b
  6574  001A82  C013  F008         	movff	___fladd@grs,___fladd@a
  6575  001A86  C005  F013         	movff	___fladd@b+1,___fladd@grs
  6576  001A8A  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  6577  001A8E  C013  F009         	movff	___fladd@grs,___fladd@a+1
  6578  001A92  C006  F013         	movff	___fladd@b+2,___fladd@grs
  6579  001A96  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  6580  001A9A  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  6581  001A9E  C007  F013         	movff	___fladd@b+3,___fladd@grs
  6582  001AA2  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  6583  001AA6  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  6584  001AAA                     l4549:
  6585  001AAA  0E00               	movlw	0
  6586  001AAC  6E13               	movwf	___fladd@grs^0,c
  6587  001AAE  5012               	movf	___fladd@bexp^0,w,c
  6588  001AB0  C011  F00C         	movff	___fladd@aexp,??___fladd
  6589  001AB4  6A0D               	clrf	(??___fladd+1)^0,c
  6590  001AB6  5E0C               	subwf	??___fladd^0,f,c
  6591  001AB8  0E00               	movlw	0
  6592  001ABA  5A0D               	subwfb	(??___fladd+1)^0,f,c
  6593  001ABC  BE0D               	btfsc	(??___fladd+1)^0,7,c
  6594  001ABE  EF6A  F00D         	goto	u5861
  6595  001AC2  500D               	movf	(??___fladd+1)^0,w,c
  6596  001AC4  E109               	bnz	u5860
  6597  001AC6  0E1A               	movlw	26
  6598  001AC8  5C0C               	subwf	??___fladd^0,w,c
  6599  001ACA  A0D8               	btfss	status,0,c
  6600  001ACC  EF6A  F00D         	goto	u5861
  6601  001AD0  EF6C  F00D         	goto	u5860
  6602  001AD4                     u5861:
  6603  001AD4  EFA3  F00D         	goto	l844
  6604  001AD8                     u5860:
  6605  001AD8  5004               	movf	___fladd@b^0,w,c
  6606  001ADA  1005               	iorwf	(___fladd@b+1)^0,w,c
  6607  001ADC  1006               	iorwf	(___fladd@b+2)^0,w,c
  6608  001ADE  1007               	iorwf	(___fladd@b+3)^0,w,c
  6609  001AE0  A4D8               	btfss	status,2,c
  6610  001AE2  EF75  F00D         	goto	u5871
  6611  001AE6  EF78  F00D         	goto	u5870
  6612  001AEA                     u5871:
  6613  001AEA  0E01               	movlw	1
  6614  001AEC  EF79  F00D         	goto	u5880
  6615  001AF0                     u5870:
  6616  001AF0  0E00               	movlw	0
  6617  001AF2                     u5880:
  6618  001AF2  6E13               	movwf	___fladd@grs^0,c
  6619  001AF4  0E00               	movlw	0
  6620  001AF6  6E04               	movwf	___fladd@b^0,c
  6621  001AF8  0E00               	movlw	0
  6622  001AFA  6E05               	movwf	(___fladd@b+1)^0,c
  6623  001AFC  0E00               	movlw	0
  6624  001AFE  6E06               	movwf	(___fladd@b+2)^0,c
  6625  001B00  0E00               	movlw	0
  6626  001B02  6E07               	movwf	(___fladd@b+3)^0,c
  6627  001B04  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  6628  001B08  EFAC  F00D         	goto	l843
  6629  001B0C                     l845:
  6630  001B0C  A013               	btfss	___fladd@grs^0,0,c
  6631  001B0E  EF8B  F00D         	goto	u5891
  6632  001B12  EF8D  F00D         	goto	u5890
  6633  001B16                     u5891:
  6634  001B16  EF93  F00D         	goto	l4561
  6635  001B1A                     u5890:
  6636  001B1A  90D8               	bcf	status,0,c
  6637  001B1C  3013               	rrcf	___fladd@grs^0,w,c
  6638  001B1E  0901               	iorlw	1
  6639  001B20  6E13               	movwf	___fladd@grs^0,c
  6640  001B22  EF95  F00D         	goto	l4563
  6641  001B26                     l4561:
  6642  001B26  90D8               	bcf	status,0,c
  6643  001B28  3213               	rrcf	___fladd@grs^0,f,c
  6644  001B2A                     l4563:
  6645  001B2A  A004               	btfss	___fladd@b^0,0,c
  6646  001B2C  EF9A  F00D         	goto	u5901
  6647  001B30  EF9C  F00D         	goto	u5900
  6648  001B34                     u5901:
  6649  001B34  EF9D  F00D         	goto	l4567
  6650  001B38                     u5900:
  6651  001B38  8E13               	bsf	___fladd@grs^0,7,c
  6652  001B3A                     l4567:
  6653  001B3A  3407               	rlcf	(___fladd@b+3)^0,w,c
  6654  001B3C  3207               	rrcf	(___fladd@b+3)^0,f,c
  6655  001B3E  3206               	rrcf	(___fladd@b+2)^0,f,c
  6656  001B40  3205               	rrcf	(___fladd@b+1)^0,f,c
  6657  001B42  3204               	rrcf	___fladd@b^0,f,c
  6658  001B44  2A12               	incf	___fladd@bexp^0,f,c
  6659  001B46                     l844:
  6660  001B46  5011               	movf	___fladd@aexp^0,w,c
  6661  001B48  5C12               	subwf	___fladd@bexp^0,w,c
  6662  001B4A  A0D8               	btfss	status,0,c
  6663  001B4C  EFAA  F00D         	goto	u5911
  6664  001B50  EFAC  F00D         	goto	u5910
  6665  001B54                     u5911:
  6666  001B54  EF86  F00D         	goto	l845
  6667  001B58                     u5910:
  6668  001B58                     l843:
  6669  001B58  BC10               	btfsc	___fladd@signs^0,6,c
  6670  001B5A  EFB1  F00D         	goto	u5921
  6671  001B5E  EFB3  F00D         	goto	u5920
  6672  001B62                     u5921:
  6673  001B62  EFF3  F00D         	goto	l4595
  6674  001B66                     u5920:
  6675  001B66  5012               	movf	___fladd@bexp^0,w,c
  6676  001B68  A4D8               	btfss	status,2,c
  6677  001B6A  EFB9  F00D         	goto	u5931
  6678  001B6E  EFBB  F00D         	goto	u5930
  6679  001B72                     u5931:
  6680  001B72  EFC5  F00D         	goto	l4577
  6681  001B76                     u5930:
  6682  001B76  0E00               	movlw	0
  6683  001B78  6E04               	movwf	?___fladd^0,c
  6684  001B7A  0E00               	movlw	0
  6685  001B7C  6E05               	movwf	(?___fladd+1)^0,c
  6686  001B7E  0E00               	movlw	0
  6687  001B80  6E06               	movwf	(?___fladd+2)^0,c
  6688  001B82  0E00               	movlw	0
  6689  001B84  6E07               	movwf	(?___fladd+3)^0,c
  6690  001B86  EF14  F00F         	goto	l852
  6691  001B8A                     l4577:
  6692  001B8A  5008               	movf	___fladd@a^0,w,c
  6693  001B8C  2604               	addwf	___fladd@b^0,f,c
  6694  001B8E  5009               	movf	(___fladd@a+1)^0,w,c
  6695  001B90  2205               	addwfc	(___fladd@b+1)^0,f,c
  6696  001B92  500A               	movf	(___fladd@a+2)^0,w,c
  6697  001B94  2206               	addwfc	(___fladd@b+2)^0,f,c
  6698  001B96  500B               	movf	(___fladd@a+3)^0,w,c
  6699  001B98  2207               	addwfc	(___fladd@b+3)^0,f,c
  6700  001B9A  A007               	btfss	(___fladd@b+3)^0,0,c
  6701  001B9C  EFD2  F00D         	goto	u5941
  6702  001BA0  EFD4  F00D         	goto	u5940
  6703  001BA4                     u5941:
  6704  001BA4  EF80  F00E         	goto	l4631
  6705  001BA8                     u5940:
  6706  001BA8  A013               	btfss	___fladd@grs^0,0,c
  6707  001BAA  EFD9  F00D         	goto	u5951
  6708  001BAE  EFDB  F00D         	goto	u5950
  6709  001BB2                     u5951:
  6710  001BB2  EFE1  F00D         	goto	l4585
  6711  001BB6                     u5950:
  6712  001BB6  90D8               	bcf	status,0,c
  6713  001BB8  3013               	rrcf	___fladd@grs^0,w,c
  6714  001BBA  0901               	iorlw	1
  6715  001BBC  6E13               	movwf	___fladd@grs^0,c
  6716  001BBE  EFE3  F00D         	goto	l4587
  6717  001BC2                     l4585:
  6718  001BC2  90D8               	bcf	status,0,c
  6719  001BC4  3213               	rrcf	___fladd@grs^0,f,c
  6720  001BC6                     l4587:
  6721  001BC6  A004               	btfss	___fladd@b^0,0,c
  6722  001BC8  EFE8  F00D         	goto	u5961
  6723  001BCC  EFEA  F00D         	goto	u5960
  6724  001BD0                     u5961:
  6725  001BD0  EFEB  F00D         	goto	l4591
  6726  001BD4                     u5960:
  6727  001BD4  8E13               	bsf	___fladd@grs^0,7,c
  6728  001BD6                     l4591:
  6729  001BD6  3407               	rlcf	(___fladd@b+3)^0,w,c
  6730  001BD8  3207               	rrcf	(___fladd@b+3)^0,f,c
  6731  001BDA  3206               	rrcf	(___fladd@b+2)^0,f,c
  6732  001BDC  3205               	rrcf	(___fladd@b+1)^0,f,c
  6733  001BDE  3204               	rrcf	___fladd@b^0,f,c
  6734  001BE0  2A12               	incf	___fladd@bexp^0,f,c
  6735  001BE2  EF80  F00E         	goto	l4631
  6736  001BE6                     l4595:
  6737  001BE6  5008               	movf	___fladd@a^0,w,c
  6738  001BE8  5C04               	subwf	___fladd@b^0,w,c
  6739  001BEA  5009               	movf	(___fladd@a+1)^0,w,c
  6740  001BEC  5805               	subwfb	(___fladd@b+1)^0,w,c
  6741  001BEE  500A               	movf	(___fladd@a+2)^0,w,c
  6742  001BF0  5806               	subwfb	(___fladd@b+2)^0,w,c
  6743  001BF2  5007               	movf	(___fladd@b+3)^0,w,c
  6744  001BF4  0A80               	xorlw	128
  6745  001BF6  6E0C               	movwf	??___fladd^0,c
  6746  001BF8  500B               	movf	(___fladd@a+3)^0,w,c
  6747  001BFA  0A80               	xorlw	128
  6748  001BFC  580C               	subwfb	??___fladd^0,w,c
  6749  001BFE  B0D8               	btfsc	status,0,c
  6750  001C00  EF04  F00E         	goto	u5971
  6751  001C04  EF06  F00E         	goto	u5970
  6752  001C08                     u5971:
  6753  001C08  EF31  F00E         	goto	l4605
  6754  001C0C                     u5970:
  6755  001C0C  5004               	movf	___fladd@b^0,w,c
  6756  001C0E  5C08               	subwf	___fladd@a^0,w,c
  6757  001C10  6E0C               	movwf	??___fladd^0,c
  6758  001C12  5005               	movf	(___fladd@b+1)^0,w,c
  6759  001C14  5809               	subwfb	(___fladd@a+1)^0,w,c
  6760  001C16  6E0D               	movwf	(??___fladd+1)^0,c
  6761  001C18  5006               	movf	(___fladd@b+2)^0,w,c
  6762  001C1A  580A               	subwfb	(___fladd@a+2)^0,w,c
  6763  001C1C  6E0E               	movwf	(??___fladd+2)^0,c
  6764  001C1E  5007               	movf	(___fladd@b+3)^0,w,c
  6765  001C20  580B               	subwfb	(___fladd@a+3)^0,w,c
  6766  001C22  6E0F               	movwf	(??___fladd+3)^0,c
  6767  001C24  0EFF               	movlw	255
  6768  001C26  240C               	addwf	??___fladd^0,w,c
  6769  001C28  6E04               	movwf	___fladd@b^0,c
  6770  001C2A  0EFF               	movlw	255
  6771  001C2C  200D               	addwfc	(??___fladd+1)^0,w,c
  6772  001C2E  6E05               	movwf	(___fladd@b+1)^0,c
  6773  001C30  0EFF               	movlw	255
  6774  001C32  200E               	addwfc	(??___fladd+2)^0,w,c
  6775  001C34  6E06               	movwf	(___fladd@b+2)^0,c
  6776  001C36  0EFF               	movlw	255
  6777  001C38  200F               	addwfc	(??___fladd+3)^0,w,c
  6778  001C3A  6E07               	movwf	(___fladd@b+3)^0,c
  6779  001C3C  0E80               	movlw	128
  6780  001C3E  1A10               	xorwf	___fladd@signs^0,f,c
  6781  001C40  6C13               	negf	___fladd@grs^0,c
  6782  001C42  5013               	movf	___fladd@grs^0,w,c
  6783  001C44  A4D8               	btfss	status,2,c
  6784  001C46  EF27  F00E         	goto	u5981
  6785  001C4A  EF29  F00E         	goto	u5980
  6786  001C4E                     u5981:
  6787  001C4E  EF39  F00E         	goto	l860
  6788  001C52                     u5980:
  6789  001C52  0E01               	movlw	1
  6790  001C54  2604               	addwf	___fladd@b^0,f,c
  6791  001C56  0E00               	movlw	0
  6792  001C58  2205               	addwfc	(___fladd@b+1)^0,f,c
  6793  001C5A  2206               	addwfc	(___fladd@b+2)^0,f,c
  6794  001C5C  2207               	addwfc	(___fladd@b+3)^0,f,c
  6795  001C5E  EF39  F00E         	goto	l860
  6796  001C62                     l4605:
  6797  001C62  5008               	movf	___fladd@a^0,w,c
  6798  001C64  5E04               	subwf	___fladd@b^0,f,c
  6799  001C66  5009               	movf	(___fladd@a+1)^0,w,c
  6800  001C68  5A05               	subwfb	(___fladd@b+1)^0,f,c
  6801  001C6A  500A               	movf	(___fladd@a+2)^0,w,c
  6802  001C6C  5A06               	subwfb	(___fladd@b+2)^0,f,c
  6803  001C6E  500B               	movf	(___fladd@a+3)^0,w,c
  6804  001C70  5A07               	subwfb	(___fladd@b+3)^0,f,c
  6805  001C72                     l860:
  6806  001C72  5004               	movf	___fladd@b^0,w,c
  6807  001C74  1005               	iorwf	(___fladd@b+1)^0,w,c
  6808  001C76  1006               	iorwf	(___fladd@b+2)^0,w,c
  6809  001C78  1007               	iorwf	(___fladd@b+3)^0,w,c
  6810  001C7A  A4D8               	btfss	status,2,c
  6811  001C7C  EF42  F00E         	goto	u5991
  6812  001C80  EF44  F00E         	goto	u5990
  6813  001C84                     u5991:
  6814  001C84  EF79  F00E         	goto	l4629
  6815  001C88                     u5990:
  6816  001C88  5013               	movf	___fladd@grs^0,w,c
  6817  001C8A  A4D8               	btfss	status,2,c
  6818  001C8C  EF4A  F00E         	goto	u6001
  6819  001C90  EF4C  F00E         	goto	u6000
  6820  001C94                     u6001:
  6821  001C94  EF79  F00E         	goto	l4629
  6822  001C98                     u6000:
  6823  001C98  0E00               	movlw	0
  6824  001C9A  6E04               	movwf	?___fladd^0,c
  6825  001C9C  0E00               	movlw	0
  6826  001C9E  6E05               	movwf	(?___fladd+1)^0,c
  6827  001CA0  0E00               	movlw	0
  6828  001CA2  6E06               	movwf	(?___fladd+2)^0,c
  6829  001CA4  0E00               	movlw	0
  6830  001CA6  6E07               	movwf	(?___fladd+3)^0,c
  6831  001CA8  EF14  F00F         	goto	l852
  6832  001CAC                     l4613:
  6833  001CAC  90D8               	bcf	status,0,c
  6834  001CAE  3604               	rlcf	___fladd@b^0,f,c
  6835  001CB0  3605               	rlcf	(___fladd@b+1)^0,f,c
  6836  001CB2  3606               	rlcf	(___fladd@b+2)^0,f,c
  6837  001CB4  3607               	rlcf	(___fladd@b+3)^0,f,c
  6838  001CB6  AE13               	btfss	___fladd@grs^0,7,c
  6839  001CB8  EF60  F00E         	goto	u6011
  6840  001CBC  EF62  F00E         	goto	u6010
  6841  001CC0                     u6011:
  6842  001CC0  EF63  F00E         	goto	l4619
  6843  001CC4                     u6010:
  6844  001CC4  8004               	bsf	___fladd@b^0,0,c
  6845  001CC6                     l4619:
  6846  001CC6  A013               	btfss	___fladd@grs^0,0,c
  6847  001CC8  EF68  F00E         	goto	u6021
  6848  001CCC  EF6A  F00E         	goto	u6020
  6849  001CD0                     u6021:
  6850  001CD0  EF6E  F00E         	goto	l4623
  6851  001CD4                     u6020:
  6852  001CD4  80D8               	bsf	status,0,c
  6853  001CD6  3613               	rlcf	___fladd@grs^0,f,c
  6854  001CD8  EF70  F00E         	goto	l4625
  6855  001CDC                     l4623:
  6856  001CDC  90D8               	bcf	status,0,c
  6857  001CDE  3613               	rlcf	___fladd@grs^0,f,c
  6858  001CE0                     l4625:
  6859  001CE0  5012               	movf	___fladd@bexp^0,w,c
  6860  001CE2  B4D8               	btfsc	status,2,c
  6861  001CE4  EF76  F00E         	goto	u6031
  6862  001CE8  EF78  F00E         	goto	u6030
  6863  001CEC                     u6031:
  6864  001CEC  EF79  F00E         	goto	l4629
  6865  001CF0                     u6030:
  6866  001CF0  0612               	decf	___fladd@bexp^0,f,c
  6867  001CF2                     l4629:
  6868  001CF2  AE06               	btfss	(___fladd@b+2)^0,7,c
  6869  001CF4  EF7E  F00E         	goto	u6041
  6870  001CF8  EF80  F00E         	goto	u6040
  6871  001CFC                     u6041:
  6872  001CFC  EF56  F00E         	goto	l4613
  6873  001D00                     u6040:
  6874  001D00                     l4631:
  6875  001D00  0E00               	movlw	0
  6876  001D02  6E11               	movwf	___fladd@aexp^0,c
  6877  001D04  AE13               	btfss	___fladd@grs^0,7,c
  6878  001D06  EF87  F00E         	goto	u6051
  6879  001D0A  EF89  F00E         	goto	u6050
  6880  001D0E                     u6051:
  6881  001D0E  EFA1  F00E         	goto	l869
  6882  001D12                     u6050:
  6883  001D12  C013  F00C         	movff	___fladd@grs,??___fladd
  6884  001D16  0E7F               	movlw	127
  6885  001D18  160C               	andwf	??___fladd^0,f,c
  6886  001D1A  B4D8               	btfsc	status,2,c
  6887  001D1C  EF92  F00E         	goto	u6061
  6888  001D20  EF94  F00E         	goto	u6060
  6889  001D24                     u6061:
  6890  001D24  EF98  F00E         	goto	l870
  6891  001D28                     u6060:
  6892  001D28                     l4637:
  6893  001D28  0E01               	movlw	1
  6894  001D2A  6E11               	movwf	___fladd@aexp^0,c
  6895  001D2C  EFA1  F00E         	goto	l869
  6896  001D30                     l870:
  6897  001D30  A004               	btfss	___fladd@b^0,0,c
  6898  001D32  EF9D  F00E         	goto	u6071
  6899  001D36  EF9F  F00E         	goto	u6070
  6900  001D3A                     u6071:
  6901  001D3A  EFA1  F00E         	goto	l869
  6902  001D3E                     u6070:
  6903  001D3E  EF94  F00E         	goto	l4637
  6904  001D42                     l869:
  6905  001D42  5011               	movf	___fladd@aexp^0,w,c
  6906  001D44  B4D8               	btfsc	status,2,c
  6907  001D46  EFA7  F00E         	goto	u6081
  6908  001D4A  EFA9  F00E         	goto	u6080
  6909  001D4E                     u6081:
  6910  001D4E  EFD4  F00E         	goto	l4649
  6911  001D52                     u6080:
  6912  001D52  0E01               	movlw	1
  6913  001D54  2604               	addwf	___fladd@b^0,f,c
  6914  001D56  0E00               	movlw	0
  6915  001D58  2205               	addwfc	(___fladd@b+1)^0,f,c
  6916  001D5A  2206               	addwfc	(___fladd@b+2)^0,f,c
  6917  001D5C  2207               	addwfc	(___fladd@b+3)^0,f,c
  6918  001D5E  A007               	btfss	(___fladd@b+3)^0,0,c
  6919  001D60  EFB4  F00E         	goto	u6091
  6920  001D64  EFB6  F00E         	goto	u6090
  6921  001D68                     u6091:
  6922  001D68  EFD4  F00E         	goto	l4649
  6923  001D6C                     u6090:
  6924  001D6C  C004  F00C         	movff	___fladd@b,??___fladd
  6925  001D70  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  6926  001D74  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  6927  001D78  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  6928  001D7C  340F               	rlcf	(??___fladd+3)^0,w,c
  6929  001D7E  320F               	rrcf	(??___fladd+3)^0,f,c
  6930  001D80  320E               	rrcf	(??___fladd+2)^0,f,c
  6931  001D82  320D               	rrcf	(??___fladd+1)^0,f,c
  6932  001D84  320C               	rrcf	??___fladd^0,f,c
  6933  001D86  C00C  F004         	movff	??___fladd,___fladd@b
  6934  001D8A  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  6935  001D8E  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  6936  001D92  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  6937  001D96  2812               	incf	___fladd@bexp^0,w,c
  6938  001D98  B4D8               	btfsc	status,2,c
  6939  001D9A  EFD1  F00E         	goto	u6101
  6940  001D9E  EFD3  F00E         	goto	u6100
  6941  001DA2                     u6101:
  6942  001DA2  EFD4  F00E         	goto	l4649
  6943  001DA6                     u6100:
  6944  001DA6  2A12               	incf	___fladd@bexp^0,f,c
  6945  001DA8                     l4649:
  6946  001DA8  2812               	incf	___fladd@bexp^0,w,c
  6947  001DAA  B4D8               	btfsc	status,2,c
  6948  001DAC  EFDA  F00E         	goto	u6111
  6949  001DB0  EFDC  F00E         	goto	u6110
  6950  001DB4                     u6111:
  6951  001DB4  EFE4  F00E         	goto	l4653
  6952  001DB8                     u6110:
  6953  001DB8  5012               	movf	___fladd@bexp^0,w,c
  6954  001DBA  A4D8               	btfss	status,2,c
  6955  001DBC  EFE2  F00E         	goto	u6121
  6956  001DC0  EFE4  F00E         	goto	u6120
  6957  001DC4                     u6121:
  6958  001DC4  EFF6  F00E         	goto	l4657
  6959  001DC8                     u6120:
  6960  001DC8                     l4653:
  6961  001DC8  0E00               	movlw	0
  6962  001DCA  6E04               	movwf	___fladd@b^0,c
  6963  001DCC  0E00               	movlw	0
  6964  001DCE  6E05               	movwf	(___fladd@b+1)^0,c
  6965  001DD0  0E00               	movlw	0
  6966  001DD2  6E06               	movwf	(___fladd@b+2)^0,c
  6967  001DD4  0E00               	movlw	0
  6968  001DD6  6E07               	movwf	(___fladd@b+3)^0,c
  6969  001DD8  5012               	movf	___fladd@bexp^0,w,c
  6970  001DDA  A4D8               	btfss	status,2,c
  6971  001DDC  EFF2  F00E         	goto	u6131
  6972  001DE0  EFF4  F00E         	goto	u6130
  6973  001DE4                     u6131:
  6974  001DE4  EFF6  F00E         	goto	l4657
  6975  001DE8                     u6130:
  6976  001DE8  0E00               	movlw	0
  6977  001DEA  6E10               	movwf	___fladd@signs^0,c
  6978  001DEC                     l4657:
  6979  001DEC  A012               	btfss	___fladd@bexp^0,0,c
  6980  001DEE  EFFB  F00E         	goto	u6141
  6981  001DF2  EFFD  F00E         	goto	u6140
  6982  001DF6                     u6141:
  6983  001DF6  EF00  F00F         	goto	l4661
  6984  001DFA                     u6140:
  6985  001DFA  8E06               	bsf	(___fladd@b+2)^0,7,c
  6986  001DFC  EF01  F00F         	goto	l4663
  6987  001E00                     l4661:
  6988  001E00  9E06               	bcf	(___fladd@b+2)^0,7,c
  6989  001E02                     l4663:
  6990  001E02  90D8               	bcf	status,0,c
  6991  001E04  3012               	rrcf	___fladd@bexp^0,w,c
  6992  001E06  6E07               	movwf	(___fladd@b+3)^0,c
  6993  001E08  AE10               	btfss	___fladd@signs^0,7,c
  6994  001E0A  EF09  F00F         	goto	u6151
  6995  001E0E  EF0B  F00F         	goto	u6150
  6996  001E12                     u6151:
  6997  001E12  EF0C  F00F         	goto	l4669
  6998  001E16                     u6150:
  6999  001E16  8E07               	bsf	(___fladd@b+3)^0,7,c
  7000  001E18                     l4669:
  7001  001E18  C004  F004         	movff	___fladd@b,?___fladd
  7002  001E1C  C005  F005         	movff	___fladd@b+1,?___fladd+1
  7003  001E20  C006  F006         	movff	___fladd@b+2,?___fladd+2
  7004  001E24  C007  F007         	movff	___fladd@b+3,?___fladd+3
  7005  001E28                     l852:
  7006  001E28  0012               	return		;funcret
  7007  001E2A                     __end_of___fladd:
  7008                           	opt callstack 0
  7009                           
  7010 ;; *************** function ___flneg *****************
  7011 ;; Defined at:
  7012 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  f1              4    3[COMRAM] unsigned char 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  4    3[COMRAM] unsigned char 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7026 ;;      Params:         4       0       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0
  7029 ;;      Totals:         4       0       0       0       0       0       0
  7030 ;;Total ram usage:        4 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    2
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_efgtoa
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text24
  7041  003DF0                     __ptext24:
  7042                           	opt callstack 0
  7043  003DF0                     ___flneg:
  7044                           	opt callstack 24
  7045  003DF0  5004               	movf	___flneg@f1^0,w,c
  7046  003DF2  1005               	iorwf	(___flneg@f1+1)^0,w,c
  7047  003DF4  1006               	iorwf	(___flneg@f1+2)^0,w,c
  7048  003DF6  1007               	iorwf	(___flneg@f1+3)^0,w,c
  7049  003DF8  B4D8               	btfsc	status,2,c
  7050  003DFA  EF01  F01F         	goto	u7061
  7051  003DFE  EF03  F01F         	goto	u7060
  7052  003E02                     u7061:
  7053  003E02  EF0B  F01F         	goto	l5165
  7054  003E06                     u7060:
  7055  003E06  0E00               	movlw	0
  7056  003E08  1A04               	xorwf	___flneg@f1^0,f,c
  7057  003E0A  0E00               	movlw	0
  7058  003E0C  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  7059  003E0E  0E00               	movlw	0
  7060  003E10  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  7061  003E12  0E80               	movlw	128
  7062  003E14  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  7063  003E16                     l5165:
  7064  003E16  C004  F004         	movff	___flneg@f1,?___flneg
  7065  003E1A  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  7066  003E1E  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  7067  003E22  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  7068  003E26  0012               	return		;funcret
  7069  003E28                     __end_of___flneg:
  7070                           	opt callstack 0
  7071                           
  7072 ;; *************** function ___flmul *****************
  7073 ;; Defined at:
  7074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  b               4   17[COMRAM] unsigned char 
  7077 ;;  a               4   21[COMRAM] unsigned char 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  prod            4   36[COMRAM] struct .
  7080 ;;  grs             4   31[COMRAM] unsigned long 
  7081 ;;  temp            2   40[COMRAM] struct .
  7082 ;;  bexp            1   35[COMRAM] unsigned char 
  7083 ;;  aexp            1   30[COMRAM] unsigned char 
  7084 ;;  sign            1   29[COMRAM] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4   17[COMRAM] unsigned char 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, prodl, prodh
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7094 ;;      Params:         8       0       0       0       0       0       0
  7095 ;;      Locals:        13       0       0       0       0       0       0
  7096 ;;      Temps:          4       0       0       0       0       0       0
  7097 ;;      Totals:        25       0       0       0       0       0       0
  7098 ;;Total ram usage:       25 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    2
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_main
  7105 ;;		_efgtoa
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text25
  7110  001E2A                     __ptext25:
  7111                           	opt callstack 0
  7112  001E2A                     ___flmul:
  7113                           	opt callstack 24
  7114  001E2A  5015               	movf	(___flmul@b+3)^0,w,c
  7115  001E2C  0B80               	andlw	128
  7116  001E2E  6E1E               	movwf	___flmul@sign^0,c
  7117  001E30  5015               	movf	(___flmul@b+3)^0,w,c
  7118  001E32  2415               	addwf	(___flmul@b+3)^0,w,c
  7119  001E34  6E24               	movwf	___flmul@bexp^0,c
  7120  001E36  AE14               	btfss	(___flmul@b+2)^0,7,c
  7121  001E38  EF20  F00F         	goto	u6671
  7122  001E3C  EF22  F00F         	goto	u6670
  7123  001E40                     u6671:
  7124  001E40  EF23  F00F         	goto	l4913
  7125  001E44                     u6670:
  7126  001E44  8024               	bsf	___flmul@bexp^0,0,c
  7127  001E46                     l4913:
  7128  001E46  5024               	movf	___flmul@bexp^0,w,c
  7129  001E48  B4D8               	btfsc	status,2,c
  7130  001E4A  EF29  F00F         	goto	u6681
  7131  001E4E  EF2B  F00F         	goto	u6680
  7132  001E52                     u6681:
  7133  001E52  EF3E  F00F         	goto	l4921
  7134  001E56                     u6680:
  7135  001E56  2824               	incf	___flmul@bexp^0,w,c
  7136  001E58  A4D8               	btfss	status,2,c
  7137  001E5A  EF31  F00F         	goto	u6691
  7138  001E5E  EF33  F00F         	goto	u6690
  7139  001E62                     u6691:
  7140  001E62  EF3B  F00F         	goto	l4919
  7141  001E66                     u6690:
  7142  001E66  0E00               	movlw	0
  7143  001E68  6E12               	movwf	___flmul@b^0,c
  7144  001E6A  0E00               	movlw	0
  7145  001E6C  6E13               	movwf	(___flmul@b+1)^0,c
  7146  001E6E  0E00               	movlw	0
  7147  001E70  6E14               	movwf	(___flmul@b+2)^0,c
  7148  001E72  0E00               	movlw	0
  7149  001E74  6E15               	movwf	(___flmul@b+3)^0,c
  7150  001E76                     l4919:
  7151  001E76  8E14               	bsf	(___flmul@b+2)^0,7,c
  7152  001E78  EF46  F00F         	goto	l4923
  7153  001E7C                     l4921:
  7154  001E7C  0E00               	movlw	0
  7155  001E7E  6E12               	movwf	___flmul@b^0,c
  7156  001E80  0E00               	movlw	0
  7157  001E82  6E13               	movwf	(___flmul@b+1)^0,c
  7158  001E84  0E00               	movlw	0
  7159  001E86  6E14               	movwf	(___flmul@b+2)^0,c
  7160  001E88  0E00               	movlw	0
  7161  001E8A  6E15               	movwf	(___flmul@b+3)^0,c
  7162  001E8C                     l4923:
  7163  001E8C  5019               	movf	(___flmul@a+3)^0,w,c
  7164  001E8E  0B80               	andlw	128
  7165  001E90  1A1E               	xorwf	___flmul@sign^0,f,c
  7166  001E92  5019               	movf	(___flmul@a+3)^0,w,c
  7167  001E94  2419               	addwf	(___flmul@a+3)^0,w,c
  7168  001E96  6E1F               	movwf	___flmul@aexp^0,c
  7169  001E98  AE18               	btfss	(___flmul@a+2)^0,7,c
  7170  001E9A  EF51  F00F         	goto	u6701
  7171  001E9E  EF53  F00F         	goto	u6700
  7172  001EA2                     u6701:
  7173  001EA2  EF54  F00F         	goto	l4931
  7174  001EA6                     u6700:
  7175  001EA6  801F               	bsf	___flmul@aexp^0,0,c
  7176  001EA8                     l4931:
  7177  001EA8  501F               	movf	___flmul@aexp^0,w,c
  7178  001EAA  B4D8               	btfsc	status,2,c
  7179  001EAC  EF5A  F00F         	goto	u6711
  7180  001EB0  EF5C  F00F         	goto	u6710
  7181  001EB4                     u6711:
  7182  001EB4  EF6F  F00F         	goto	l4939
  7183  001EB8                     u6710:
  7184  001EB8  281F               	incf	___flmul@aexp^0,w,c
  7185  001EBA  A4D8               	btfss	status,2,c
  7186  001EBC  EF62  F00F         	goto	u6721
  7187  001EC0  EF64  F00F         	goto	u6720
  7188  001EC4                     u6721:
  7189  001EC4  EF6C  F00F         	goto	l4937
  7190  001EC8                     u6720:
  7191  001EC8  0E00               	movlw	0
  7192  001ECA  6E16               	movwf	___flmul@a^0,c
  7193  001ECC  0E00               	movlw	0
  7194  001ECE  6E17               	movwf	(___flmul@a+1)^0,c
  7195  001ED0  0E00               	movlw	0
  7196  001ED2  6E18               	movwf	(___flmul@a+2)^0,c
  7197  001ED4  0E00               	movlw	0
  7198  001ED6  6E19               	movwf	(___flmul@a+3)^0,c
  7199  001ED8                     l4937:
  7200  001ED8  8E18               	bsf	(___flmul@a+2)^0,7,c
  7201  001EDA  EF77  F00F         	goto	l929
  7202  001EDE                     l4939:
  7203  001EDE  0E00               	movlw	0
  7204  001EE0  6E16               	movwf	___flmul@a^0,c
  7205  001EE2  0E00               	movlw	0
  7206  001EE4  6E17               	movwf	(___flmul@a+1)^0,c
  7207  001EE6  0E00               	movlw	0
  7208  001EE8  6E18               	movwf	(___flmul@a+2)^0,c
  7209  001EEA  0E00               	movlw	0
  7210  001EEC  6E19               	movwf	(___flmul@a+3)^0,c
  7211  001EEE                     l929:
  7212  001EEE  501F               	movf	___flmul@aexp^0,w,c
  7213  001EF0  B4D8               	btfsc	status,2,c
  7214  001EF2  EF7D  F00F         	goto	u6731
  7215  001EF6  EF7F  F00F         	goto	u6730
  7216  001EFA                     u6731:
  7217  001EFA  EF87  F00F         	goto	l4943
  7218  001EFE                     u6730:
  7219  001EFE  5024               	movf	___flmul@bexp^0,w,c
  7220  001F00  A4D8               	btfss	status,2,c
  7221  001F02  EF85  F00F         	goto	u6741
  7222  001F06  EF87  F00F         	goto	u6740
  7223  001F0A                     u6741:
  7224  001F0A  EF91  F00F         	goto	l4947
  7225  001F0E                     u6740:
  7226  001F0E                     l4943:
  7227  001F0E  0E00               	movlw	0
  7228  001F10  6E12               	movwf	?___flmul^0,c
  7229  001F12  0E00               	movlw	0
  7230  001F14  6E13               	movwf	(?___flmul+1)^0,c
  7231  001F16  0E00               	movlw	0
  7232  001F18  6E14               	movwf	(?___flmul+2)^0,c
  7233  001F1A  0E00               	movlw	0
  7234  001F1C  6E15               	movwf	(?___flmul+3)^0,c
  7235  001F1E  EF29  F011         	goto	l933
  7236  001F22                     l4947:
  7237  001F22  5018               	movf	(___flmul@a+2)^0,w,c
  7238  001F24  0212               	mulwf	___flmul@b^0,c
  7239  001F26  CFF3 F029          	movff	prodl,___flmul@temp
  7240  001F2A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7241  001F2E  5029               	movf	___flmul@temp^0,w,c
  7242  001F30  6E20               	movwf	___flmul@grs^0,c
  7243  001F32  6A21               	clrf	(___flmul@grs+1)^0,c
  7244  001F34  6A22               	clrf	(___flmul@grs+2)^0,c
  7245  001F36  6A23               	clrf	(___flmul@grs+3)^0,c
  7246  001F38  502A               	movf	(___flmul@temp+1)^0,w,c
  7247  001F3A  6E25               	movwf	___flmul@prod^0,c
  7248  001F3C  6A26               	clrf	(___flmul@prod+1)^0,c
  7249  001F3E  6A27               	clrf	(___flmul@prod+2)^0,c
  7250  001F40  6A28               	clrf	(___flmul@prod+3)^0,c
  7251  001F42  5017               	movf	(___flmul@a+1)^0,w,c
  7252  001F44  0213               	mulwf	(___flmul@b+1)^0,c
  7253  001F46  CFF3 F029          	movff	prodl,___flmul@temp
  7254  001F4A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7255  001F4E  5029               	movf	___flmul@temp^0,w,c
  7256  001F50  2620               	addwf	___flmul@grs^0,f,c
  7257  001F52  0E00               	movlw	0
  7258  001F54  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7259  001F56  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7260  001F58  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7261  001F5A  502A               	movf	(___flmul@temp+1)^0,w,c
  7262  001F5C  2625               	addwf	___flmul@prod^0,f,c
  7263  001F5E  0E00               	movlw	0
  7264  001F60  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7265  001F62  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7266  001F64  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7267  001F66  5016               	movf	___flmul@a^0,w,c
  7268  001F68  0214               	mulwf	(___flmul@b+2)^0,c
  7269  001F6A  CFF3 F029          	movff	prodl,___flmul@temp
  7270  001F6E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7271  001F72  5029               	movf	___flmul@temp^0,w,c
  7272  001F74  2620               	addwf	___flmul@grs^0,f,c
  7273  001F76  0E00               	movlw	0
  7274  001F78  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7275  001F7A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7276  001F7C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7277  001F7E  502A               	movf	(___flmul@temp+1)^0,w,c
  7278  001F80  2625               	addwf	___flmul@prod^0,f,c
  7279  001F82  0E00               	movlw	0
  7280  001F84  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7281  001F86  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7282  001F88  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7283  001F8A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7284  001F8E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7285  001F92  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7286  001F96  6A20               	clrf	___flmul@grs^0,c
  7287  001F98  5016               	movf	___flmul@a^0,w,c
  7288  001F9A  0213               	mulwf	(___flmul@b+1)^0,c
  7289  001F9C  CFF3 F029          	movff	prodl,___flmul@temp
  7290  001FA0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7291  001FA4  5029               	movf	___flmul@temp^0,w,c
  7292  001FA6  2620               	addwf	___flmul@grs^0,f,c
  7293  001FA8  502A               	movf	(___flmul@temp+1)^0,w,c
  7294  001FAA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7295  001FAC  0E00               	movlw	0
  7296  001FAE  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7297  001FB0  0E00               	movlw	0
  7298  001FB2  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7299  001FB4  5017               	movf	(___flmul@a+1)^0,w,c
  7300  001FB6  0212               	mulwf	___flmul@b^0,c
  7301  001FB8  CFF3 F029          	movff	prodl,___flmul@temp
  7302  001FBC  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7303  001FC0  5029               	movf	___flmul@temp^0,w,c
  7304  001FC2  2620               	addwf	___flmul@grs^0,f,c
  7305  001FC4  502A               	movf	(___flmul@temp+1)^0,w,c
  7306  001FC6  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7307  001FC8  0E00               	movlw	0
  7308  001FCA  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7309  001FCC  0E00               	movlw	0
  7310  001FCE  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7311  001FD0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7312  001FD4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7313  001FD8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7314  001FDC  6A20               	clrf	___flmul@grs^0,c
  7315  001FDE  5016               	movf	___flmul@a^0,w,c
  7316  001FE0  0212               	mulwf	___flmul@b^0,c
  7317  001FE2  CFF3 F029          	movff	prodl,___flmul@temp
  7318  001FE6  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7319  001FEA  5029               	movf	___flmul@temp^0,w,c
  7320  001FEC  2620               	addwf	___flmul@grs^0,f,c
  7321  001FEE  502A               	movf	(___flmul@temp+1)^0,w,c
  7322  001FF0  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7323  001FF2  0E00               	movlw	0
  7324  001FF4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7325  001FF6  0E00               	movlw	0
  7326  001FF8  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7327  001FFA  5018               	movf	(___flmul@a+2)^0,w,c
  7328  001FFC  0213               	mulwf	(___flmul@b+1)^0,c
  7329  001FFE  CFF3 F029          	movff	prodl,___flmul@temp
  7330  002002  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7331  002006  5029               	movf	___flmul@temp^0,w,c
  7332  002008  2625               	addwf	___flmul@prod^0,f,c
  7333  00200A  502A               	movf	(___flmul@temp+1)^0,w,c
  7334  00200C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7335  00200E  0E00               	movlw	0
  7336  002010  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7337  002012  0E00               	movlw	0
  7338  002014  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7339  002016  5017               	movf	(___flmul@a+1)^0,w,c
  7340  002018  0214               	mulwf	(___flmul@b+2)^0,c
  7341  00201A  CFF3 F029          	movff	prodl,___flmul@temp
  7342  00201E  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7343  002022  5029               	movf	___flmul@temp^0,w,c
  7344  002024  2625               	addwf	___flmul@prod^0,f,c
  7345  002026  502A               	movf	(___flmul@temp+1)^0,w,c
  7346  002028  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7347  00202A  0E00               	movlw	0
  7348  00202C  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7349  00202E  0E00               	movlw	0
  7350  002030  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7351  002032  5018               	movf	(___flmul@a+2)^0,w,c
  7352  002034  0214               	mulwf	(___flmul@b+2)^0,c
  7353  002036  CFF3 F029          	movff	prodl,___flmul@temp
  7354  00203A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  7355  00203E  5029               	movf	___flmul@temp^0,w,c
  7356  002040  6E1A               	movwf	??___flmul^0,c
  7357  002042  502A               	movf	(___flmul@temp+1)^0,w,c
  7358  002044  6E1B               	movwf	(??___flmul+1)^0,c
  7359  002046  6A1C               	clrf	(??___flmul+2)^0,c
  7360  002048  6A1D               	clrf	(??___flmul+3)^0,c
  7361  00204A  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  7362  00204E  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  7363  002052  C01A  F01B         	movff	??___flmul,??___flmul+1
  7364  002056  6A1A               	clrf	??___flmul^0,c
  7365  002058  501A               	movf	??___flmul^0,w,c
  7366  00205A  2625               	addwf	___flmul@prod^0,f,c
  7367  00205C  501B               	movf	(??___flmul+1)^0,w,c
  7368  00205E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7369  002060  501C               	movf	(??___flmul+2)^0,w,c
  7370  002062  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7371  002064  501D               	movf	(??___flmul+3)^0,w,c
  7372  002066  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7373  002068  C020  F01A         	movff	___flmul@grs,??___flmul
  7374  00206C  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
  7375  002070  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
  7376  002074  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
  7377  002078  0E19               	movlw	25
  7378  00207A  EF44  F010         	goto	u6750
  7379  00207E                     u6755:
  7380  00207E  90D8               	bcf	status,0,c
  7381  002080  321D               	rrcf	(??___flmul+3)^0,f,c
  7382  002082  321C               	rrcf	(??___flmul+2)^0,f,c
  7383  002084  321B               	rrcf	(??___flmul+1)^0,f,c
  7384  002086  321A               	rrcf	??___flmul^0,f,c
  7385  002088                     u6750:
  7386  002088  2EE8               	decfsz	wreg,f,c
  7387  00208A  EF3F  F010         	goto	u6755
  7388  00208E  501A               	movf	??___flmul^0,w,c
  7389  002090  2625               	addwf	___flmul@prod^0,f,c
  7390  002092  501B               	movf	(??___flmul+1)^0,w,c
  7391  002094  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7392  002096  501C               	movf	(??___flmul+2)^0,w,c
  7393  002098  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7394  00209A  501D               	movf	(??___flmul+3)^0,w,c
  7395  00209C  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7396  00209E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7397  0020A2  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7398  0020A6  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7399  0020AA  6A20               	clrf	___flmul@grs^0,c
  7400  0020AC  501F               	movf	___flmul@aexp^0,w,c
  7401  0020AE  C024  F01A         	movff	___flmul@bexp,??___flmul
  7402  0020B2  6A1B               	clrf	(??___flmul+1)^0,c
  7403  0020B4  261A               	addwf	??___flmul^0,f,c
  7404  0020B6  0E00               	movlw	0
  7405  0020B8  221B               	addwfc	(??___flmul+1)^0,f,c
  7406  0020BA  0E82               	movlw	130
  7407  0020BC  241A               	addwf	??___flmul^0,w,c
  7408  0020BE  6E29               	movwf	___flmul@temp^0,c
  7409  0020C0  0EFF               	movlw	255
  7410  0020C2  201B               	addwfc	(??___flmul+1)^0,w,c
  7411  0020C4  6E2A               	movwf	(___flmul@temp+1)^0,c
  7412  0020C6  EF7A  F010         	goto	l4995
  7413  0020CA                     l4989:
  7414  0020CA  90D8               	bcf	status,0,c
  7415  0020CC  3625               	rlcf	___flmul@prod^0,f,c
  7416  0020CE  3626               	rlcf	(___flmul@prod+1)^0,f,c
  7417  0020D0  3627               	rlcf	(___flmul@prod+2)^0,f,c
  7418  0020D2  3628               	rlcf	(___flmul@prod+3)^0,f,c
  7419  0020D4  AE23               	btfss	(___flmul@grs+3)^0,7,c
  7420  0020D6  EF6F  F010         	goto	u6761
  7421  0020DA  EF71  F010         	goto	u6760
  7422  0020DE                     u6761:
  7423  0020DE  EF72  F010         	goto	l936
  7424  0020E2                     u6760:
  7425  0020E2  8025               	bsf	___flmul@prod^0,0,c
  7426  0020E4                     l936:
  7427  0020E4  90D8               	bcf	status,0,c
  7428  0020E6  3620               	rlcf	___flmul@grs^0,f,c
  7429  0020E8  3621               	rlcf	(___flmul@grs+1)^0,f,c
  7430  0020EA  3622               	rlcf	(___flmul@grs+2)^0,f,c
  7431  0020EC  3623               	rlcf	(___flmul@grs+3)^0,f,c
  7432  0020EE  0629               	decf	___flmul@temp^0,f,c
  7433  0020F0  A0D8               	btfss	status,0,c
  7434  0020F2  062A               	decf	(___flmul@temp+1)^0,f,c
  7435  0020F4                     l4995:
  7436  0020F4  AE27               	btfss	(___flmul@prod+2)^0,7,c
  7437  0020F6  EF7F  F010         	goto	u6771
  7438  0020FA  EF81  F010         	goto	u6770
  7439  0020FE                     u6771:
  7440  0020FE  EF65  F010         	goto	l4989
  7441  002102                     u6770:
  7442  002102  0E00               	movlw	0
  7443  002104  6E1F               	movwf	___flmul@aexp^0,c
  7444  002106  AE23               	btfss	(___flmul@grs+3)^0,7,c
  7445  002108  EF88  F010         	goto	u6781
  7446  00210C  EF8A  F010         	goto	u6780
  7447  002110                     u6781:
  7448  002110  EFAE  F010         	goto	l938
  7449  002114                     u6780:
  7450  002114  0EFF               	movlw	255
  7451  002116  1420               	andwf	___flmul@grs^0,w,c
  7452  002118  6E1A               	movwf	??___flmul^0,c
  7453  00211A  0EFF               	movlw	255
  7454  00211C  1421               	andwf	(___flmul@grs+1)^0,w,c
  7455  00211E  6E1B               	movwf	(??___flmul+1)^0,c
  7456  002120  0EFF               	movlw	255
  7457  002122  1422               	andwf	(___flmul@grs+2)^0,w,c
  7458  002124  6E1C               	movwf	(??___flmul+2)^0,c
  7459  002126  0E7F               	movlw	127
  7460  002128  1423               	andwf	(___flmul@grs+3)^0,w,c
  7461  00212A  6E1D               	movwf	(??___flmul+3)^0,c
  7462  00212C  501A               	movf	??___flmul^0,w,c
  7463  00212E  101B               	iorwf	(??___flmul+1)^0,w,c
  7464  002130  101C               	iorwf	(??___flmul+2)^0,w,c
  7465  002132  101D               	iorwf	(??___flmul+3)^0,w,c
  7466  002134  B4D8               	btfsc	status,2,c
  7467  002136  EF9F  F010         	goto	u6791
  7468  00213A  EFA1  F010         	goto	u6790
  7469  00213E                     u6791:
  7470  00213E  EFA5  F010         	goto	l939
  7471  002142                     u6790:
  7472  002142                     l5003:
  7473  002142  0E01               	movlw	1
  7474  002144  6E1F               	movwf	___flmul@aexp^0,c
  7475  002146  EFAE  F010         	goto	l938
  7476  00214A                     l939:
  7477  00214A  A025               	btfss	___flmul@prod^0,0,c
  7478  00214C  EFAA  F010         	goto	u6801
  7479  002150  EFAC  F010         	goto	u6800
  7480  002154                     u6801:
  7481  002154  EFAE  F010         	goto	l938
  7482  002158                     u6800:
  7483  002158  EFA1  F010         	goto	l5003
  7484  00215C                     l938:
  7485  00215C  501F               	movf	___flmul@aexp^0,w,c
  7486  00215E  B4D8               	btfsc	status,2,c
  7487  002160  EFB4  F010         	goto	u6811
  7488  002164  EFB6  F010         	goto	u6810
  7489  002168                     u6811:
  7490  002168  EFDA  F010         	goto	l5015
  7491  00216C                     u6810:
  7492  00216C  0E01               	movlw	1
  7493  00216E  2625               	addwf	___flmul@prod^0,f,c
  7494  002170  0E00               	movlw	0
  7495  002172  2226               	addwfc	(___flmul@prod+1)^0,f,c
  7496  002174  2227               	addwfc	(___flmul@prod+2)^0,f,c
  7497  002176  2228               	addwfc	(___flmul@prod+3)^0,f,c
  7498  002178  A028               	btfss	(___flmul@prod+3)^0,0,c
  7499  00217A  EFC1  F010         	goto	u6821
  7500  00217E  EFC3  F010         	goto	u6820
  7501  002182                     u6821:
  7502  002182  EFDA  F010         	goto	l5015
  7503  002186                     u6820:
  7504  002186  C025  F01A         	movff	___flmul@prod,??___flmul
  7505  00218A  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  7506  00218E  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  7507  002192  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  7508  002196  341D               	rlcf	(??___flmul+3)^0,w,c
  7509  002198  321D               	rrcf	(??___flmul+3)^0,f,c
  7510  00219A  321C               	rrcf	(??___flmul+2)^0,f,c
  7511  00219C  321B               	rrcf	(??___flmul+1)^0,f,c
  7512  00219E  321A               	rrcf	??___flmul^0,f,c
  7513  0021A0  C01A  F025         	movff	??___flmul,___flmul@prod
  7514  0021A4  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  7515  0021A8  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  7516  0021AC  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  7517  0021B0  4A29               	infsnz	___flmul@temp^0,f,c
  7518  0021B2  2A2A               	incf	(___flmul@temp+1)^0,f,c
  7519  0021B4                     l5015:
  7520  0021B4  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  7521  0021B6  EFE5  F010         	goto	u6831
  7522  0021BA  502A               	movf	(___flmul@temp+1)^0,w,c
  7523  0021BC  E108               	bnz	u6830
  7524  0021BE  2829               	incf	___flmul@temp^0,w,c
  7525  0021C0  A0D8               	btfss	status,0,c
  7526  0021C2  EFE5  F010         	goto	u6831
  7527  0021C6  EFE7  F010         	goto	u6830
  7528  0021CA                     u6831:
  7529  0021CA  EFF1  F010         	goto	l5019
  7530  0021CE                     u6830:
  7531  0021CE  0E00               	movlw	0
  7532  0021D0  6E25               	movwf	___flmul@prod^0,c
  7533  0021D2  0E00               	movlw	0
  7534  0021D4  6E26               	movwf	(___flmul@prod+1)^0,c
  7535  0021D6  0E80               	movlw	128
  7536  0021D8  6E27               	movwf	(___flmul@prod+2)^0,c
  7537  0021DA  0E7F               	movlw	127
  7538  0021DC  6E28               	movwf	(___flmul@prod+3)^0,c
  7539  0021DE  EF1F  F011         	goto	l5031
  7540  0021E2                     l5019:
  7541  0021E2  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  7542  0021E4  EFFE  F010         	goto	u6840
  7543  0021E8  502A               	movf	(___flmul@temp+1)^0,w,c
  7544  0021EA  E106               	bnz	u6841
  7545  0021EC  0429               	decf	___flmul@temp^0,w,c
  7546  0021EE  B0D8               	btfsc	status,0,c
  7547  0021F0  EFFC  F010         	goto	u6841
  7548  0021F4  EFFE  F010         	goto	u6840
  7549  0021F8                     u6841:
  7550  0021F8  EF0A  F011         	goto	l946
  7551  0021FC                     u6840:
  7552  0021FC  0E00               	movlw	0
  7553  0021FE  6E25               	movwf	___flmul@prod^0,c
  7554  002200  0E00               	movlw	0
  7555  002202  6E26               	movwf	(___flmul@prod+1)^0,c
  7556  002204  0E00               	movlw	0
  7557  002206  6E27               	movwf	(___flmul@prod+2)^0,c
  7558  002208  0E00               	movlw	0
  7559  00220A  6E28               	movwf	(___flmul@prod+3)^0,c
  7560  00220C  0E00               	movlw	0
  7561  00220E  6E1E               	movwf	___flmul@sign^0,c
  7562  002210  EF1F  F011         	goto	l5031
  7563  002214                     l946:
  7564  002214  C029  F024         	movff	___flmul@temp,___flmul@bexp
  7565  002218  0EFF               	movlw	255
  7566  00221A  1625               	andwf	___flmul@prod^0,f,c
  7567  00221C  0EFF               	movlw	255
  7568  00221E  1626               	andwf	(___flmul@prod+1)^0,f,c
  7569  002220  0E7F               	movlw	127
  7570  002222  1627               	andwf	(___flmul@prod+2)^0,f,c
  7571  002224  0E00               	movlw	0
  7572  002226  1628               	andwf	(___flmul@prod+3)^0,f,c
  7573  002228  A024               	btfss	___flmul@bexp^0,0,c
  7574  00222A  EF19  F011         	goto	u6851
  7575  00222E  EF1B  F011         	goto	u6850
  7576  002232                     u6851:
  7577  002232  EF1C  F011         	goto	l5029
  7578  002236                     u6850:
  7579  002236  8E27               	bsf	(___flmul@prod+2)^0,7,c
  7580  002238                     l5029:
  7581  002238  90D8               	bcf	status,0,c
  7582  00223A  3024               	rrcf	___flmul@bexp^0,w,c
  7583  00223C  6E28               	movwf	(___flmul@prod+3)^0,c
  7584  00223E                     l5031:
  7585  00223E  501E               	movf	___flmul@sign^0,w,c
  7586  002240  1228               	iorwf	(___flmul@prod+3)^0,f,c
  7587  002242  C025  F012         	movff	___flmul@prod,?___flmul
  7588  002246  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  7589  00224A  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  7590  00224E  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  7591  002252                     l933:
  7592  002252  0012               	return		;funcret
  7593  002254                     __end_of___flmul:
  7594                           	opt callstack 0
  7595                           
  7596 ;; *************** function ___flge *****************
  7597 ;; Defined at:
  7598 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  ff1             4   42[COMRAM] unsigned char 
  7601 ;;  ff2             4   46[COMRAM] unsigned char 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;		None               void
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7613 ;;      Params:         8       0       0       0       0       0       0
  7614 ;;      Locals:         0       0       0       0       0       0       0
  7615 ;;      Temps:          4       0       0       0       0       0       0
  7616 ;;      Totals:        12       0       0       0       0       0       0
  7617 ;;Total ram usage:       12 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    2
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_efgtoa
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text26
  7628  003260                     __ptext26:
  7629                           	opt callstack 0
  7630  003260                     ___flge:
  7631                           	opt callstack 24
  7632  003260  0E00               	movlw	0
  7633  003262  142B               	andwf	___flge@ff1^0,w,c
  7634  003264  6E33               	movwf	??___flge^0,c
  7635  003266  0E00               	movlw	0
  7636  003268  142C               	andwf	(___flge@ff1+1)^0,w,c
  7637  00326A  6E34               	movwf	(??___flge+1)^0,c
  7638  00326C  0E80               	movlw	128
  7639  00326E  142D               	andwf	(___flge@ff1+2)^0,w,c
  7640  003270  6E35               	movwf	(??___flge+2)^0,c
  7641  003272  0E7F               	movlw	127
  7642  003274  142E               	andwf	(___flge@ff1+3)^0,w,c
  7643  003276  6E36               	movwf	(??___flge+3)^0,c
  7644  003278  5033               	movf	??___flge^0,w,c
  7645  00327A  1034               	iorwf	(??___flge+1)^0,w,c
  7646  00327C  1035               	iorwf	(??___flge+2)^0,w,c
  7647  00327E  1036               	iorwf	(??___flge+3)^0,w,c
  7648  003280  A4D8               	btfss	status,2,c
  7649  003282  EF45  F019         	goto	u7011
  7650  003286  EF47  F019         	goto	u7010
  7651  00328A                     u7011:
  7652  00328A  EF4F  F019         	goto	l5143
  7653  00328E                     u7010:
  7654  00328E  0E00               	movlw	0
  7655  003290  6E2B               	movwf	___flge@ff1^0,c
  7656  003292  0E00               	movlw	0
  7657  003294  6E2C               	movwf	(___flge@ff1+1)^0,c
  7658  003296  0E00               	movlw	0
  7659  003298  6E2D               	movwf	(___flge@ff1+2)^0,c
  7660  00329A  0E00               	movlw	0
  7661  00329C  6E2E               	movwf	(___flge@ff1+3)^0,c
  7662  00329E                     l5143:
  7663  00329E  0E00               	movlw	0
  7664  0032A0  142F               	andwf	___flge@ff2^0,w,c
  7665  0032A2  6E33               	movwf	??___flge^0,c
  7666  0032A4  0E00               	movlw	0
  7667  0032A6  1430               	andwf	(___flge@ff2+1)^0,w,c
  7668  0032A8  6E34               	movwf	(??___flge+1)^0,c
  7669  0032AA  0E80               	movlw	128
  7670  0032AC  1431               	andwf	(___flge@ff2+2)^0,w,c
  7671  0032AE  6E35               	movwf	(??___flge+2)^0,c
  7672  0032B0  0E7F               	movlw	127
  7673  0032B2  1432               	andwf	(___flge@ff2+3)^0,w,c
  7674  0032B4  6E36               	movwf	(??___flge+3)^0,c
  7675  0032B6  5033               	movf	??___flge^0,w,c
  7676  0032B8  1034               	iorwf	(??___flge+1)^0,w,c
  7677  0032BA  1035               	iorwf	(??___flge+2)^0,w,c
  7678  0032BC  1036               	iorwf	(??___flge+3)^0,w,c
  7679  0032BE  A4D8               	btfss	status,2,c
  7680  0032C0  EF64  F019         	goto	u7021
  7681  0032C4  EF66  F019         	goto	u7020
  7682  0032C8                     u7021:
  7683  0032C8  EF6E  F019         	goto	l5147
  7684  0032CC                     u7020:
  7685  0032CC  0E00               	movlw	0
  7686  0032CE  6E2F               	movwf	___flge@ff2^0,c
  7687  0032D0  0E00               	movlw	0
  7688  0032D2  6E30               	movwf	(___flge@ff2+1)^0,c
  7689  0032D4  0E00               	movlw	0
  7690  0032D6  6E31               	movwf	(___flge@ff2+2)^0,c
  7691  0032D8  0E00               	movlw	0
  7692  0032DA  6E32               	movwf	(___flge@ff2+3)^0,c
  7693  0032DC                     l5147:
  7694  0032DC  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  7695  0032DE  EF73  F019         	goto	u7031
  7696  0032E2  EF75  F019         	goto	u7030
  7697  0032E6                     u7031:
  7698  0032E6  EF7E  F019         	goto	l5151
  7699  0032EA                     u7030:
  7700  0032EA  6C2B               	negf	___flge@ff1^0,c
  7701  0032EC  1E2C               	comf	(___flge@ff1+1)^0,f,c
  7702  0032EE  B0D8               	btfsc	status,0,c
  7703  0032F0  2A2C               	incf	(___flge@ff1+1)^0,f,c
  7704  0032F2  1E2D               	comf	(___flge@ff1+2)^0,f,c
  7705  0032F4  B0D8               	btfsc	status,0,c
  7706  0032F6  2A2D               	incf	(___flge@ff1+2)^0,f,c
  7707  0032F8  0E80               	movlw	128
  7708  0032FA  562E               	subfwb	(___flge@ff1+3)^0,f,c
  7709  0032FC                     l5151:
  7710  0032FC  AE32               	btfss	(___flge@ff2+3)^0,7,c
  7711  0032FE  EF83  F019         	goto	u7041
  7712  003302  EF85  F019         	goto	u7040
  7713  003306                     u7041:
  7714  003306  EF8E  F019         	goto	l580
  7715  00330A                     u7040:
  7716  00330A  6C2F               	negf	___flge@ff2^0,c
  7717  00330C  1E30               	comf	(___flge@ff2+1)^0,f,c
  7718  00330E  B0D8               	btfsc	status,0,c
  7719  003310  2A30               	incf	(___flge@ff2+1)^0,f,c
  7720  003312  1E31               	comf	(___flge@ff2+2)^0,f,c
  7721  003314  B0D8               	btfsc	status,0,c
  7722  003316  2A31               	incf	(___flge@ff2+2)^0,f,c
  7723  003318  0E80               	movlw	128
  7724  00331A  5632               	subfwb	(___flge@ff2+3)^0,f,c
  7725  00331C                     l580:
  7726  00331C  0E00               	movlw	0
  7727  00331E  1A2B               	xorwf	___flge@ff1^0,f,c
  7728  003320  0E00               	movlw	0
  7729  003322  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  7730  003324  0E00               	movlw	0
  7731  003326  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  7732  003328  0E80               	movlw	128
  7733  00332A  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  7734  00332C  0E00               	movlw	0
  7735  00332E  1A2F               	xorwf	___flge@ff2^0,f,c
  7736  003330  0E00               	movlw	0
  7737  003332  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  7738  003334  0E00               	movlw	0
  7739  003336  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  7740  003338  0E80               	movlw	128
  7741  00333A  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  7742  00333C  502F               	movf	___flge@ff2^0,w,c
  7743  00333E  5C2B               	subwf	___flge@ff1^0,w,c
  7744  003340  5030               	movf	(___flge@ff2+1)^0,w,c
  7745  003342  582C               	subwfb	(___flge@ff1+1)^0,w,c
  7746  003344  5031               	movf	(___flge@ff2+2)^0,w,c
  7747  003346  582D               	subwfb	(___flge@ff1+2)^0,w,c
  7748  003348  5032               	movf	(___flge@ff2+3)^0,w,c
  7749  00334A  582E               	subwfb	(___flge@ff1+3)^0,w,c
  7750  00334C  B0D8               	btfsc	status,0,c
  7751  00334E  EFAB  F019         	goto	u7051
  7752  003352  EFAD  F019         	goto	u7050
  7753  003356                     u7051:
  7754  003356  EFB0  F019         	goto	l5157
  7755  00335A                     u7050:
  7756  00335A  90D8               	bcf	status,0,c
  7757  00335C  EFB1  F019         	goto	l585
  7758  003360                     l5157:
  7759  003360  80D8               	bsf	status,0,c
  7760  003362                     l585:
  7761  003362  0012               	return		;funcret
  7762  003364                     __end_of___flge:
  7763                           	opt callstack 0
  7764                           
  7765 ;; *************** function ___fleq *****************
  7766 ;; Defined at:
  7767 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  ff1             4    3[COMRAM] unsigned char 
  7770 ;;  ff2             4    7[COMRAM] unsigned char 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;		None               void
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7782 ;;      Params:         8       0       0       0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0
  7784 ;;      Temps:          4       0       0       0       0       0       0
  7785 ;;      Totals:        12       0       0       0       0       0       0
  7786 ;;Total ram usage:       12 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    2
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_efgtoa
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text27
  7797  0039F4                     __ptext27:
  7798                           	opt callstack 0
  7799  0039F4                     ___fleq:
  7800                           	opt callstack 24
  7801  0039F4  0E00               	movlw	0
  7802  0039F6  1404               	andwf	___fleq@ff1^0,w,c
  7803  0039F8  6E0C               	movwf	??___fleq^0,c
  7804  0039FA  0E00               	movlw	0
  7805  0039FC  1405               	andwf	(___fleq@ff1+1)^0,w,c
  7806  0039FE  6E0D               	movwf	(??___fleq+1)^0,c
  7807  003A00  0E80               	movlw	128
  7808  003A02  1406               	andwf	(___fleq@ff1+2)^0,w,c
  7809  003A04  6E0E               	movwf	(??___fleq+2)^0,c
  7810  003A06  0E7F               	movlw	127
  7811  003A08  1407               	andwf	(___fleq@ff1+3)^0,w,c
  7812  003A0A  6E0F               	movwf	(??___fleq+3)^0,c
  7813  003A0C  500C               	movf	??___fleq^0,w,c
  7814  003A0E  100D               	iorwf	(??___fleq+1)^0,w,c
  7815  003A10  100E               	iorwf	(??___fleq+2)^0,w,c
  7816  003A12  100F               	iorwf	(??___fleq+3)^0,w,c
  7817  003A14  A4D8               	btfss	status,2,c
  7818  003A16  EF0F  F01D         	goto	u6981
  7819  003A1A  EF11  F01D         	goto	u6980
  7820  003A1E                     u6981:
  7821  003A1E  EF19  F01D         	goto	l5127
  7822  003A22                     u6980:
  7823  003A22  0E00               	movlw	0
  7824  003A24  6E04               	movwf	___fleq@ff1^0,c
  7825  003A26  0E00               	movlw	0
  7826  003A28  6E05               	movwf	(___fleq@ff1+1)^0,c
  7827  003A2A  0E00               	movlw	0
  7828  003A2C  6E06               	movwf	(___fleq@ff1+2)^0,c
  7829  003A2E  0E00               	movlw	0
  7830  003A30  6E07               	movwf	(___fleq@ff1+3)^0,c
  7831  003A32                     l5127:
  7832  003A32  0E00               	movlw	0
  7833  003A34  1408               	andwf	___fleq@ff2^0,w,c
  7834  003A36  6E0C               	movwf	??___fleq^0,c
  7835  003A38  0E00               	movlw	0
  7836  003A3A  1409               	andwf	(___fleq@ff2+1)^0,w,c
  7837  003A3C  6E0D               	movwf	(??___fleq+1)^0,c
  7838  003A3E  0E80               	movlw	128
  7839  003A40  140A               	andwf	(___fleq@ff2+2)^0,w,c
  7840  003A42  6E0E               	movwf	(??___fleq+2)^0,c
  7841  003A44  0E7F               	movlw	127
  7842  003A46  140B               	andwf	(___fleq@ff2+3)^0,w,c
  7843  003A48  6E0F               	movwf	(??___fleq+3)^0,c
  7844  003A4A  500C               	movf	??___fleq^0,w,c
  7845  003A4C  100D               	iorwf	(??___fleq+1)^0,w,c
  7846  003A4E  100E               	iorwf	(??___fleq+2)^0,w,c
  7847  003A50  100F               	iorwf	(??___fleq+3)^0,w,c
  7848  003A52  A4D8               	btfss	status,2,c
  7849  003A54  EF2E  F01D         	goto	u6991
  7850  003A58  EF30  F01D         	goto	u6990
  7851  003A5C                     u6991:
  7852  003A5C  EF38  F01D         	goto	l5131
  7853  003A60                     u6990:
  7854  003A60  0E00               	movlw	0
  7855  003A62  6E08               	movwf	___fleq@ff2^0,c
  7856  003A64  0E00               	movlw	0
  7857  003A66  6E09               	movwf	(___fleq@ff2+1)^0,c
  7858  003A68  0E00               	movlw	0
  7859  003A6A  6E0A               	movwf	(___fleq@ff2+2)^0,c
  7860  003A6C  0E00               	movlw	0
  7861  003A6E  6E0B               	movwf	(___fleq@ff2+3)^0,c
  7862  003A70                     l5131:
  7863  003A70  5008               	movf	___fleq@ff2^0,w,c
  7864  003A72  1804               	xorwf	___fleq@ff1^0,w,c
  7865  003A74  E10F               	bnz	u7000
  7866  003A76  5009               	movf	(___fleq@ff2+1)^0,w,c
  7867  003A78  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  7868  003A7A  E10C               	bnz	u7000
  7869  003A7C  500A               	movf	(___fleq@ff2+2)^0,w,c
  7870  003A7E  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  7871  003A80  E109               	bnz	u7000
  7872  003A82  500B               	movf	(___fleq@ff2+3)^0,w,c
  7873  003A84  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  7874  003A86  B4D8               	btfsc	status,2,c
  7875  003A88  EF48  F01D         	goto	u7001
  7876  003A8C  EF4A  F01D         	goto	u7000
  7877  003A90                     u7001:
  7878  003A90  EF4D  F01D         	goto	l5135
  7879  003A94                     u7000:
  7880  003A94  90D8               	bcf	status,0,c
  7881  003A96  EF4E  F01D         	goto	l574
  7882  003A9A                     l5135:
  7883  003A9A  80D8               	bsf	status,0,c
  7884  003A9C                     l574:
  7885  003A9C  0012               	return		;funcret
  7886  003A9E                     __end_of___fleq:
  7887                           	opt callstack 0
  7888                           
  7889 ;; *************** function ___fldiv *****************
  7890 ;; Defined at:
  7891 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  b               4   42[COMRAM] unsigned char 
  7894 ;;  a               4   46[COMRAM] unsigned char 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  grs             4   61[COMRAM] unsigned long 
  7897 ;;  rem             4   54[COMRAM] unsigned long 
  7898 ;;  new_exp         2   59[COMRAM] short 
  7899 ;;  aexp            1   66[COMRAM] unsigned char 
  7900 ;;  bexp            1   65[COMRAM] unsigned char 
  7901 ;;  sign            1   58[COMRAM] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4   42[COMRAM] unsigned char 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7911 ;;      Params:         8       0       0       0       0       0       0
  7912 ;;      Locals:        13       0       0       0       0       0       0
  7913 ;;      Temps:          4       0       0       0       0       0       0
  7914 ;;      Totals:        25       0       0       0       0       0       0
  7915 ;;Total ram usage:       25 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    2
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_main
  7922 ;;		_efgtoa
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text28
  7927  002254                     __ptext28:
  7928                           	opt callstack 0
  7929  002254                     ___fldiv:
  7930                           	opt callstack 24
  7931  002254  502E               	movf	(___fldiv@b+3)^0,w,c
  7932  002256  0B80               	andlw	128
  7933  002258  6E3B               	movwf	___fldiv@sign^0,c
  7934  00225A  502E               	movf	(___fldiv@b+3)^0,w,c
  7935  00225C  242E               	addwf	(___fldiv@b+3)^0,w,c
  7936  00225E  6E42               	movwf	___fldiv@bexp^0,c
  7937  002260  AE2D               	btfss	(___fldiv@b+2)^0,7,c
  7938  002262  EF35  F011         	goto	u6441
  7939  002266  EF37  F011         	goto	u6440
  7940  00226A                     u6441:
  7941  00226A  EF38  F011         	goto	l4775
  7942  00226E                     u6440:
  7943  00226E  8042               	bsf	___fldiv@bexp^0,0,c
  7944  002270                     l4775:
  7945  002270  5042               	movf	___fldiv@bexp^0,w,c
  7946  002272  B4D8               	btfsc	status,2,c
  7947  002274  EF3E  F011         	goto	u6451
  7948  002278  EF40  F011         	goto	u6450
  7949  00227C                     u6451:
  7950  00227C  EF55  F011         	goto	l4785
  7951  002280                     u6450:
  7952  002280  2842               	incf	___fldiv@bexp^0,w,c
  7953  002282  A4D8               	btfss	status,2,c
  7954  002284  EF46  F011         	goto	u6461
  7955  002288  EF48  F011         	goto	u6460
  7956  00228C                     u6461:
  7957  00228C  EF50  F011         	goto	l4781
  7958  002290                     u6460:
  7959  002290  0E00               	movlw	0
  7960  002292  6E2B               	movwf	___fldiv@b^0,c
  7961  002294  0E00               	movlw	0
  7962  002296  6E2C               	movwf	(___fldiv@b+1)^0,c
  7963  002298  0E00               	movlw	0
  7964  00229A  6E2D               	movwf	(___fldiv@b+2)^0,c
  7965  00229C  0E00               	movlw	0
  7966  00229E  6E2E               	movwf	(___fldiv@b+3)^0,c
  7967  0022A0                     l4781:
  7968  0022A0  8E2D               	bsf	(___fldiv@b+2)^0,7,c
  7969  0022A2  0E00               	movlw	0
  7970  0022A4  6E2E               	movwf	(___fldiv@b+3)^0,c
  7971  0022A6  EF5D  F011         	goto	l4787
  7972  0022AA                     l4785:
  7973  0022AA  0E00               	movlw	0
  7974  0022AC  6E2B               	movwf	___fldiv@b^0,c
  7975  0022AE  0E00               	movlw	0
  7976  0022B0  6E2C               	movwf	(___fldiv@b+1)^0,c
  7977  0022B2  0E00               	movlw	0
  7978  0022B4  6E2D               	movwf	(___fldiv@b+2)^0,c
  7979  0022B6  0E00               	movlw	0
  7980  0022B8  6E2E               	movwf	(___fldiv@b+3)^0,c
  7981  0022BA                     l4787:
  7982  0022BA  5032               	movf	(___fldiv@a+3)^0,w,c
  7983  0022BC  0B80               	andlw	128
  7984  0022BE  1A3B               	xorwf	___fldiv@sign^0,f,c
  7985  0022C0  5032               	movf	(___fldiv@a+3)^0,w,c
  7986  0022C2  2432               	addwf	(___fldiv@a+3)^0,w,c
  7987  0022C4  6E43               	movwf	___fldiv@aexp^0,c
  7988  0022C6  AE31               	btfss	(___fldiv@a+2)^0,7,c
  7989  0022C8  EF68  F011         	goto	u6471
  7990  0022CC  EF6A  F011         	goto	u6470
  7991  0022D0                     u6471:
  7992  0022D0  EF6B  F011         	goto	l4795
  7993  0022D4                     u6470:
  7994  0022D4  8043               	bsf	___fldiv@aexp^0,0,c
  7995  0022D6                     l4795:
  7996  0022D6  5043               	movf	___fldiv@aexp^0,w,c
  7997  0022D8  B4D8               	btfsc	status,2,c
  7998  0022DA  EF71  F011         	goto	u6481
  7999  0022DE  EF73  F011         	goto	u6480
  8000  0022E2                     u6481:
  8001  0022E2  EF88  F011         	goto	l4805
  8002  0022E6                     u6480:
  8003  0022E6  2843               	incf	___fldiv@aexp^0,w,c
  8004  0022E8  A4D8               	btfss	status,2,c
  8005  0022EA  EF79  F011         	goto	u6491
  8006  0022EE  EF7B  F011         	goto	u6490
  8007  0022F2                     u6491:
  8008  0022F2  EF83  F011         	goto	l4801
  8009  0022F6                     u6490:
  8010  0022F6  0E00               	movlw	0
  8011  0022F8  6E2F               	movwf	___fldiv@a^0,c
  8012  0022FA  0E00               	movlw	0
  8013  0022FC  6E30               	movwf	(___fldiv@a+1)^0,c
  8014  0022FE  0E00               	movlw	0
  8015  002300  6E31               	movwf	(___fldiv@a+2)^0,c
  8016  002302  0E00               	movlw	0
  8017  002304  6E32               	movwf	(___fldiv@a+3)^0,c
  8018  002306                     l4801:
  8019  002306  8E31               	bsf	(___fldiv@a+2)^0,7,c
  8020  002308  0E00               	movlw	0
  8021  00230A  6E32               	movwf	(___fldiv@a+3)^0,c
  8022  00230C  EF90  F011         	goto	l4807
  8023  002310                     l4805:
  8024  002310  0E00               	movlw	0
  8025  002312  6E2F               	movwf	___fldiv@a^0,c
  8026  002314  0E00               	movlw	0
  8027  002316  6E30               	movwf	(___fldiv@a+1)^0,c
  8028  002318  0E00               	movlw	0
  8029  00231A  6E31               	movwf	(___fldiv@a+2)^0,c
  8030  00231C  0E00               	movlw	0
  8031  00231E  6E32               	movwf	(___fldiv@a+3)^0,c
  8032  002320                     l4807:
  8033  002320  502F               	movf	___fldiv@a^0,w,c
  8034  002322  1030               	iorwf	(___fldiv@a+1)^0,w,c
  8035  002324  1031               	iorwf	(___fldiv@a+2)^0,w,c
  8036  002326  1032               	iorwf	(___fldiv@a+3)^0,w,c
  8037  002328  A4D8               	btfss	status,2,c
  8038  00232A  EF99  F011         	goto	u6501
  8039  00232E  EF9B  F011         	goto	u6500
  8040  002332                     u6501:
  8041  002332  EFB3  F011         	goto	l4819
  8042  002336                     u6500:
  8043  002336  0E00               	movlw	0
  8044  002338  6E2B               	movwf	___fldiv@b^0,c
  8045  00233A  0E00               	movlw	0
  8046  00233C  6E2C               	movwf	(___fldiv@b+1)^0,c
  8047  00233E  0E00               	movlw	0
  8048  002340  6E2D               	movwf	(___fldiv@b+2)^0,c
  8049  002342  0E00               	movlw	0
  8050  002344  6E2E               	movwf	(___fldiv@b+3)^0,c
  8051  002346  0E80               	movlw	128
  8052  002348  122D               	iorwf	(___fldiv@b+2)^0,f,c
  8053  00234A  0E7F               	movlw	127
  8054  00234C  122E               	iorwf	(___fldiv@b+3)^0,f,c
  8055  00234E                     l4813:
  8056  00234E  503B               	movf	___fldiv@sign^0,w,c
  8057  002350  122E               	iorwf	(___fldiv@b+3)^0,f,c
  8058  002352  C02B  F02B         	movff	___fldiv@b,?___fldiv
  8059  002356  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
  8060  00235A  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
  8061  00235E  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
  8062  002362  EFF6  F012         	goto	l897
  8063  002366                     l4819:
  8064  002366  5042               	movf	___fldiv@bexp^0,w,c
  8065  002368  A4D8               	btfss	status,2,c
  8066  00236A  EFB9  F011         	goto	u6511
  8067  00236E  EFBB  F011         	goto	u6510
  8068  002372                     u6511:
  8069  002372  EFC5  F011         	goto	l4827
  8070  002376                     u6510:
  8071  002376  0E00               	movlw	0
  8072  002378  6E2B               	movwf	?___fldiv^0,c
  8073  00237A  0E00               	movlw	0
  8074  00237C  6E2C               	movwf	(?___fldiv+1)^0,c
  8075  00237E  0E00               	movlw	0
  8076  002380  6E2D               	movwf	(?___fldiv+2)^0,c
  8077  002382  0E00               	movlw	0
  8078  002384  6E2E               	movwf	(?___fldiv+3)^0,c
  8079  002386  EFF6  F012         	goto	l897
  8080  00238A                     l4827:
  8081  00238A  5043               	movf	___fldiv@aexp^0,w,c
  8082  00238C  C042  F033         	movff	___fldiv@bexp,??___fldiv
  8083  002390  6A34               	clrf	(??___fldiv+1)^0,c
  8084  002392  5E33               	subwf	??___fldiv^0,f,c
  8085  002394  0E00               	movlw	0
  8086  002396  5A34               	subwfb	(??___fldiv+1)^0,f,c
  8087  002398  0E7F               	movlw	127
  8088  00239A  2433               	addwf	??___fldiv^0,w,c
  8089  00239C  6E3C               	movwf	___fldiv@new_exp^0,c
  8090  00239E  0E00               	movlw	0
  8091  0023A0  2034               	addwfc	(??___fldiv+1)^0,w,c
  8092  0023A2  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  8093  0023A4  C02B  F037         	movff	___fldiv@b,___fldiv@rem
  8094  0023A8  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
  8095  0023AC  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
  8096  0023B0  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
  8097  0023B4  0E00               	movlw	0
  8098  0023B6  6E2B               	movwf	___fldiv@b^0,c
  8099  0023B8  0E00               	movlw	0
  8100  0023BA  6E2C               	movwf	(___fldiv@b+1)^0,c
  8101  0023BC  0E00               	movlw	0
  8102  0023BE  6E2D               	movwf	(___fldiv@b+2)^0,c
  8103  0023C0  0E00               	movlw	0
  8104  0023C2  6E2E               	movwf	(___fldiv@b+3)^0,c
  8105  0023C4  0E00               	movlw	0
  8106  0023C6  6E3E               	movwf	___fldiv@grs^0,c
  8107  0023C8  0E00               	movlw	0
  8108  0023CA  6E3F               	movwf	(___fldiv@grs+1)^0,c
  8109  0023CC  0E00               	movlw	0
  8110  0023CE  6E40               	movwf	(___fldiv@grs+2)^0,c
  8111  0023D0  0E00               	movlw	0
  8112  0023D2  6E41               	movwf	(___fldiv@grs+3)^0,c
  8113  0023D4  0E00               	movlw	0
  8114  0023D6  6E43               	movwf	___fldiv@aexp^0,c
  8115  0023D8  EF26  F012         	goto	l899
  8116  0023DC                     l4837:
  8117  0023DC  5043               	movf	___fldiv@aexp^0,w,c
  8118  0023DE  B4D8               	btfsc	status,2,c
  8119  0023E0  EFF4  F011         	goto	u6521
  8120  0023E4  EFF6  F011         	goto	u6520
  8121  0023E8                     u6521:
  8122  0023E8  EF0D  F012         	goto	l4845
  8123  0023EC                     u6520:
  8124  0023EC  90D8               	bcf	status,0,c
  8125  0023EE  3637               	rlcf	___fldiv@rem^0,f,c
  8126  0023F0  3638               	rlcf	(___fldiv@rem+1)^0,f,c
  8127  0023F2  3639               	rlcf	(___fldiv@rem+2)^0,f,c
  8128  0023F4  363A               	rlcf	(___fldiv@rem+3)^0,f,c
  8129  0023F6  90D8               	bcf	status,0,c
  8130  0023F8  362B               	rlcf	___fldiv@b^0,f,c
  8131  0023FA  362C               	rlcf	(___fldiv@b+1)^0,f,c
  8132  0023FC  362D               	rlcf	(___fldiv@b+2)^0,f,c
  8133  0023FE  362E               	rlcf	(___fldiv@b+3)^0,f,c
  8134  002400  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  8135  002402  EF05  F012         	goto	u6531
  8136  002406  EF07  F012         	goto	u6530
  8137  00240A                     u6531:
  8138  00240A  EF08  F012         	goto	l902
  8139  00240E                     u6530:
  8140  00240E  802B               	bsf	___fldiv@b^0,0,c
  8141  002410                     l902:
  8142  002410  90D8               	bcf	status,0,c
  8143  002412  363E               	rlcf	___fldiv@grs^0,f,c
  8144  002414  363F               	rlcf	(___fldiv@grs+1)^0,f,c
  8145  002416  3640               	rlcf	(___fldiv@grs+2)^0,f,c
  8146  002418  3641               	rlcf	(___fldiv@grs+3)^0,f,c
  8147  00241A                     l4845:
  8148  00241A  502F               	movf	___fldiv@a^0,w,c
  8149  00241C  5C37               	subwf	___fldiv@rem^0,w,c
  8150  00241E  5030               	movf	(___fldiv@a+1)^0,w,c
  8151  002420  5838               	subwfb	(___fldiv@rem+1)^0,w,c
  8152  002422  5031               	movf	(___fldiv@a+2)^0,w,c
  8153  002424  5839               	subwfb	(___fldiv@rem+2)^0,w,c
  8154  002426  5032               	movf	(___fldiv@a+3)^0,w,c
  8155  002428  583A               	subwfb	(___fldiv@rem+3)^0,w,c
  8156  00242A  A0D8               	btfss	status,0,c
  8157  00242C  EF1A  F012         	goto	u6541
  8158  002430  EF1C  F012         	goto	u6540
  8159  002434                     u6541:
  8160  002434  EF25  F012         	goto	l4851
  8161  002438                     u6540:
  8162  002438  8C41               	bsf	(___fldiv@grs+3)^0,6,c
  8163  00243A  502F               	movf	___fldiv@a^0,w,c
  8164  00243C  5E37               	subwf	___fldiv@rem^0,f,c
  8165  00243E  5030               	movf	(___fldiv@a+1)^0,w,c
  8166  002440  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
  8167  002442  5031               	movf	(___fldiv@a+2)^0,w,c
  8168  002444  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
  8169  002446  5032               	movf	(___fldiv@a+3)^0,w,c
  8170  002448  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
  8171  00244A                     l4851:
  8172  00244A  2A43               	incf	___fldiv@aexp^0,f,c
  8173  00244C                     l899:
  8174  00244C  0E19               	movlw	25
  8175  00244E  6443               	cpfsgt	___fldiv@aexp^0,c
  8176  002450  EF2C  F012         	goto	u6551
  8177  002454  EF2E  F012         	goto	u6550
  8178  002458                     u6551:
  8179  002458  EFEE  F011         	goto	l4837
  8180  00245C                     u6550:
  8181  00245C  5037               	movf	___fldiv@rem^0,w,c
  8182  00245E  1038               	iorwf	(___fldiv@rem+1)^0,w,c
  8183  002460  1039               	iorwf	(___fldiv@rem+2)^0,w,c
  8184  002462  103A               	iorwf	(___fldiv@rem+3)^0,w,c
  8185  002464  B4D8               	btfsc	status,2,c
  8186  002466  EF37  F012         	goto	u6561
  8187  00246A  EF39  F012         	goto	u6560
  8188  00246E                     u6561:
  8189  00246E  EF51  F012         	goto	l4863
  8190  002472                     u6560:
  8191  002472  803E               	bsf	___fldiv@grs^0,0,c
  8192  002474  EF51  F012         	goto	l4863
  8193  002478                     l4857:
  8194  002478  90D8               	bcf	status,0,c
  8195  00247A  362B               	rlcf	___fldiv@b^0,f,c
  8196  00247C  362C               	rlcf	(___fldiv@b+1)^0,f,c
  8197  00247E  362D               	rlcf	(___fldiv@b+2)^0,f,c
  8198  002480  362E               	rlcf	(___fldiv@b+3)^0,f,c
  8199  002482  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  8200  002484  EF46  F012         	goto	u6571
  8201  002488  EF48  F012         	goto	u6570
  8202  00248C                     u6571:
  8203  00248C  EF49  F012         	goto	l908
  8204  002490                     u6570:
  8205  002490  802B               	bsf	___fldiv@b^0,0,c
  8206  002492                     l908:
  8207  002492  90D8               	bcf	status,0,c
  8208  002494  363E               	rlcf	___fldiv@grs^0,f,c
  8209  002496  363F               	rlcf	(___fldiv@grs+1)^0,f,c
  8210  002498  3640               	rlcf	(___fldiv@grs+2)^0,f,c
  8211  00249A  3641               	rlcf	(___fldiv@grs+3)^0,f,c
  8212  00249C  063C               	decf	___fldiv@new_exp^0,f,c
  8213  00249E  A0D8               	btfss	status,0,c
  8214  0024A0  063D               	decf	(___fldiv@new_exp+1)^0,f,c
  8215  0024A2                     l4863:
  8216  0024A2  AE2D               	btfss	(___fldiv@b+2)^0,7,c
  8217  0024A4  EF56  F012         	goto	u6581
  8218  0024A8  EF58  F012         	goto	u6580
  8219  0024AC                     u6581:
  8220  0024AC  EF3C  F012         	goto	l4857
  8221  0024B0                     u6580:
  8222  0024B0  0E00               	movlw	0
  8223  0024B2  6E43               	movwf	___fldiv@aexp^0,c
  8224  0024B4  AE41               	btfss	(___fldiv@grs+3)^0,7,c
  8225  0024B6  EF5F  F012         	goto	u6591
  8226  0024BA  EF61  F012         	goto	u6590
  8227  0024BE                     u6591:
  8228  0024BE  EF85  F012         	goto	l910
  8229  0024C2                     u6590:
  8230  0024C2  0EFF               	movlw	255
  8231  0024C4  143E               	andwf	___fldiv@grs^0,w,c
  8232  0024C6  6E33               	movwf	??___fldiv^0,c
  8233  0024C8  0EFF               	movlw	255
  8234  0024CA  143F               	andwf	(___fldiv@grs+1)^0,w,c
  8235  0024CC  6E34               	movwf	(??___fldiv+1)^0,c
  8236  0024CE  0EFF               	movlw	255
  8237  0024D0  1440               	andwf	(___fldiv@grs+2)^0,w,c
  8238  0024D2  6E35               	movwf	(??___fldiv+2)^0,c
  8239  0024D4  0E7F               	movlw	127
  8240  0024D6  1441               	andwf	(___fldiv@grs+3)^0,w,c
  8241  0024D8  6E36               	movwf	(??___fldiv+3)^0,c
  8242  0024DA  5033               	movf	??___fldiv^0,w,c
  8243  0024DC  1034               	iorwf	(??___fldiv+1)^0,w,c
  8244  0024DE  1035               	iorwf	(??___fldiv+2)^0,w,c
  8245  0024E0  1036               	iorwf	(??___fldiv+3)^0,w,c
  8246  0024E2  B4D8               	btfsc	status,2,c
  8247  0024E4  EF76  F012         	goto	u6601
  8248  0024E8  EF78  F012         	goto	u6600
  8249  0024EC                     u6601:
  8250  0024EC  EF7C  F012         	goto	l911
  8251  0024F0                     u6600:
  8252  0024F0                     l4871:
  8253  0024F0  0E01               	movlw	1
  8254  0024F2  6E43               	movwf	___fldiv@aexp^0,c
  8255  0024F4  EF85  F012         	goto	l910
  8256  0024F8                     l911:
  8257  0024F8  A02B               	btfss	___fldiv@b^0,0,c
  8258  0024FA  EF81  F012         	goto	u6611
  8259  0024FE  EF83  F012         	goto	u6610
  8260  002502                     u6611:
  8261  002502  EF85  F012         	goto	l910
  8262  002506                     u6610:
  8263  002506  EF78  F012         	goto	l4871
  8264  00250A                     l910:
  8265  00250A  5043               	movf	___fldiv@aexp^0,w,c
  8266  00250C  B4D8               	btfsc	status,2,c
  8267  00250E  EF8B  F012         	goto	u6621
  8268  002512  EF8D  F012         	goto	u6620
  8269  002516                     u6621:
  8270  002516  EFB1  F012         	goto	l4883
  8271  00251A                     u6620:
  8272  00251A  0E01               	movlw	1
  8273  00251C  262B               	addwf	___fldiv@b^0,f,c
  8274  00251E  0E00               	movlw	0
  8275  002520  222C               	addwfc	(___fldiv@b+1)^0,f,c
  8276  002522  222D               	addwfc	(___fldiv@b+2)^0,f,c
  8277  002524  222E               	addwfc	(___fldiv@b+3)^0,f,c
  8278  002526  A02E               	btfss	(___fldiv@b+3)^0,0,c
  8279  002528  EF98  F012         	goto	u6631
  8280  00252C  EF9A  F012         	goto	u6630
  8281  002530                     u6631:
  8282  002530  EFB1  F012         	goto	l4883
  8283  002534                     u6630:
  8284  002534  C02B  F033         	movff	___fldiv@b,??___fldiv
  8285  002538  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
  8286  00253C  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
  8287  002540  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
  8288  002544  3436               	rlcf	(??___fldiv+3)^0,w,c
  8289  002546  3236               	rrcf	(??___fldiv+3)^0,f,c
  8290  002548  3235               	rrcf	(??___fldiv+2)^0,f,c
  8291  00254A  3234               	rrcf	(??___fldiv+1)^0,f,c
  8292  00254C  3233               	rrcf	??___fldiv^0,f,c
  8293  00254E  C033  F02B         	movff	??___fldiv,___fldiv@b
  8294  002552  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
  8295  002556  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
  8296  00255A  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
  8297  00255E  4A3C               	infsnz	___fldiv@new_exp^0,f,c
  8298  002560  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
  8299  002562                     l4883:
  8300  002562  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8301  002564  EFBC  F012         	goto	u6641
  8302  002568  503D               	movf	(___fldiv@new_exp+1)^0,w,c
  8303  00256A  E108               	bnz	u6640
  8304  00256C  283C               	incf	___fldiv@new_exp^0,w,c
  8305  00256E  A0D8               	btfss	status,0,c
  8306  002570  EFBC  F012         	goto	u6641
  8307  002574  EFBE  F012         	goto	u6640
  8308  002578                     u6641:
  8309  002578  EFC9  F012         	goto	l4887
  8310  00257C                     u6640:
  8311  00257C  0E00               	movlw	0
  8312  00257E  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  8313  002580  683C               	setf	___fldiv@new_exp^0,c
  8314  002582  0E00               	movlw	0
  8315  002584  6E2B               	movwf	___fldiv@b^0,c
  8316  002586  0E00               	movlw	0
  8317  002588  6E2C               	movwf	(___fldiv@b+1)^0,c
  8318  00258A  0E00               	movlw	0
  8319  00258C  6E2D               	movwf	(___fldiv@b+2)^0,c
  8320  00258E  0E00               	movlw	0
  8321  002590  6E2E               	movwf	(___fldiv@b+3)^0,c
  8322  002592                     l4887:
  8323  002592  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8324  002594  EFD6  F012         	goto	u6650
  8325  002598  503D               	movf	(___fldiv@new_exp+1)^0,w,c
  8326  00259A  E106               	bnz	u6651
  8327  00259C  043C               	decf	___fldiv@new_exp^0,w,c
  8328  00259E  B0D8               	btfsc	status,0,c
  8329  0025A0  EFD4  F012         	goto	u6651
  8330  0025A4  EFD6  F012         	goto	u6650
  8331  0025A8                     u6651:
  8332  0025A8  EFE4  F012         	goto	l4891
  8333  0025AC                     u6650:
  8334  0025AC  0E00               	movlw	0
  8335  0025AE  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
  8336  0025B0  0E00               	movlw	0
  8337  0025B2  6E3C               	movwf	___fldiv@new_exp^0,c
  8338  0025B4  0E00               	movlw	0
  8339  0025B6  6E2B               	movwf	___fldiv@b^0,c
  8340  0025B8  0E00               	movlw	0
  8341  0025BA  6E2C               	movwf	(___fldiv@b+1)^0,c
  8342  0025BC  0E00               	movlw	0
  8343  0025BE  6E2D               	movwf	(___fldiv@b+2)^0,c
  8344  0025C0  0E00               	movlw	0
  8345  0025C2  6E2E               	movwf	(___fldiv@b+3)^0,c
  8346  0025C4  0E00               	movlw	0
  8347  0025C6  6E3B               	movwf	___fldiv@sign^0,c
  8348  0025C8                     l4891:
  8349  0025C8  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
  8350  0025CC  A042               	btfss	___fldiv@bexp^0,0,c
  8351  0025CE  EFEB  F012         	goto	u6661
  8352  0025D2  EFED  F012         	goto	u6660
  8353  0025D6                     u6661:
  8354  0025D6  EFF0  F012         	goto	l4897
  8355  0025DA                     u6660:
  8356  0025DA  8E2D               	bsf	(___fldiv@b+2)^0,7,c
  8357  0025DC  EFF1  F012         	goto	l4899
  8358  0025E0                     l4897:
  8359  0025E0  9E2D               	bcf	(___fldiv@b+2)^0,7,c
  8360  0025E2                     l4899:
  8361  0025E2  90D8               	bcf	status,0,c
  8362  0025E4  3042               	rrcf	___fldiv@bexp^0,w,c
  8363  0025E6  6E2E               	movwf	(___fldiv@b+3)^0,c
  8364  0025E8  EFA7  F011         	goto	l4813
  8365  0025EC                     l897:
  8366  0025EC  0012               	return		;funcret
  8367  0025EE                     __end_of___fldiv:
  8368                           	opt callstack 0
  8369                           
  8370 ;; *************** function ___awmod *****************
  8371 ;; Defined at:
  8372 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  dividend        2    3[COMRAM] int 
  8375 ;;  divisor         2    5[COMRAM] int 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  sign            1    8[COMRAM] unsigned char 
  8378 ;;  counter         1    7[COMRAM] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  2    3[COMRAM] int 
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8388 ;;      Params:         4       0       0       0       0       0       0
  8389 ;;      Locals:         2       0       0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0
  8391 ;;      Totals:         6       0       0       0       0       0       0
  8392 ;;Total ram usage:        6 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:    2
  8395 ;; This function calls:
  8396 ;;		Nothing
  8397 ;; This function is called by:
  8398 ;;		_efgtoa
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text29
  8403  003944                     __ptext29:
  8404                           	opt callstack 0
  8405  003944                     ___awmod:
  8406                           	opt callstack 24
  8407  003944  0E00               	movlw	0
  8408  003946  6E09               	movwf	___awmod@sign^0,c
  8409  003948  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  8410  00394A  EFAB  F01C         	goto	u6920
  8411  00394E  EFA9  F01C         	goto	u6921
  8412  003952                     u6921:
  8413  003952  EFB1  F01C         	goto	l5095
  8414  003956                     u6920:
  8415  003956  6C04               	negf	___awmod@dividend^0,c
  8416  003958  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8417  00395A  B0D8               	btfsc	status,0,c
  8418  00395C  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8419  00395E  0E01               	movlw	1
  8420  003960  6E09               	movwf	___awmod@sign^0,c
  8421  003962                     l5095:
  8422  003962  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  8423  003964  EFB8  F01C         	goto	u6930
  8424  003968  EFB6  F01C         	goto	u6931
  8425  00396C                     u6931:
  8426  00396C  EFBC  F01C         	goto	l5099
  8427  003970                     u6930:
  8428  003970  6C06               	negf	___awmod@divisor^0,c
  8429  003972  1E07               	comf	(___awmod@divisor+1)^0,f,c
  8430  003974  B0D8               	btfsc	status,0,c
  8431  003976  2A07               	incf	(___awmod@divisor+1)^0,f,c
  8432  003978                     l5099:
  8433  003978  5006               	movf	___awmod@divisor^0,w,c
  8434  00397A  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  8435  00397C  B4D8               	btfsc	status,2,c
  8436  00397E  EFC3  F01C         	goto	u6941
  8437  003982  EFC5  F01C         	goto	u6940
  8438  003986                     u6941:
  8439  003986  EFE9  F01C         	goto	l5115
  8440  00398A                     u6940:
  8441  00398A  0E01               	movlw	1
  8442  00398C  6E08               	movwf	___awmod@counter^0,c
  8443  00398E  EFCD  F01C         	goto	l5105
  8444  003992                     l5103:
  8445  003992  90D8               	bcf	status,0,c
  8446  003994  3606               	rlcf	___awmod@divisor^0,f,c
  8447  003996  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  8448  003998  2A08               	incf	___awmod@counter^0,f,c
  8449  00399A                     l5105:
  8450  00399A  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  8451  00399C  EFD2  F01C         	goto	u6951
  8452  0039A0  EFD4  F01C         	goto	u6950
  8453  0039A4                     u6951:
  8454  0039A4  EFC9  F01C         	goto	l5103
  8455  0039A8                     u6950:
  8456  0039A8                     l5107:
  8457  0039A8  5006               	movf	___awmod@divisor^0,w,c
  8458  0039AA  5C04               	subwf	___awmod@dividend^0,w,c
  8459  0039AC  5007               	movf	(___awmod@divisor+1)^0,w,c
  8460  0039AE  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  8461  0039B0  A0D8               	btfss	status,0,c
  8462  0039B2  EFDD  F01C         	goto	u6961
  8463  0039B6  EFDF  F01C         	goto	u6960
  8464  0039BA                     u6961:
  8465  0039BA  EFE3  F01C         	goto	l5111
  8466  0039BE                     u6960:
  8467  0039BE  5006               	movf	___awmod@divisor^0,w,c
  8468  0039C0  5E04               	subwf	___awmod@dividend^0,f,c
  8469  0039C2  5007               	movf	(___awmod@divisor+1)^0,w,c
  8470  0039C4  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  8471  0039C6                     l5111:
  8472  0039C6  90D8               	bcf	status,0,c
  8473  0039C8  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  8474  0039CA  3206               	rrcf	___awmod@divisor^0,f,c
  8475  0039CC  2E08               	decfsz	___awmod@counter^0,f,c
  8476  0039CE  EFD4  F01C         	goto	l5107
  8477  0039D2                     l5115:
  8478  0039D2  5009               	movf	___awmod@sign^0,w,c
  8479  0039D4  B4D8               	btfsc	status,2,c
  8480  0039D6  EFEF  F01C         	goto	u6971
  8481  0039DA  EFF1  F01C         	goto	u6970
  8482  0039DE                     u6971:
  8483  0039DE  EFF5  F01C         	goto	l5119
  8484  0039E2                     u6970:
  8485  0039E2  6C04               	negf	___awmod@dividend^0,c
  8486  0039E4  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8487  0039E6  B0D8               	btfsc	status,0,c
  8488  0039E8  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8489  0039EA                     l5119:
  8490  0039EA  C004  F004         	movff	___awmod@dividend,?___awmod
  8491  0039EE  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  8492  0039F2  0012               	return		;funcret
  8493  0039F4                     __end_of___awmod:
  8494                           	opt callstack 0
  8495                           
  8496 ;; *************** function ___awdiv *****************
  8497 ;; Defined at:
  8498 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  dividend        2    3[COMRAM] int 
  8501 ;;  divisor         2    5[COMRAM] int 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;  quotient        2    9[COMRAM] int 
  8504 ;;  sign            1    8[COMRAM] unsigned char 
  8505 ;;  counter         1    7[COMRAM] unsigned char 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  2    3[COMRAM] int 
  8508 ;; Registers used:
  8509 ;;		wreg, status,2, status,0
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8515 ;;      Params:         4       0       0       0       0       0       0
  8516 ;;      Locals:         4       0       0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0
  8518 ;;      Totals:         8       0       0       0       0       0       0
  8519 ;;Total ram usage:        8 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    2
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_efgtoa
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text30
  8530  0037BE                     __ptext30:
  8531                           	opt callstack 0
  8532  0037BE                     ___awdiv:
  8533                           	opt callstack 24
  8534  0037BE  0E00               	movlw	0
  8535  0037C0  6E09               	movwf	___awdiv@sign^0,c
  8536  0037C2  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  8537  0037C4  EFE8  F01B         	goto	u6860
  8538  0037C8  EFE6  F01B         	goto	u6861
  8539  0037CC                     u6861:
  8540  0037CC  EFEE  F01B         	goto	l5051
  8541  0037D0                     u6860:
  8542  0037D0  6C06               	negf	___awdiv@divisor^0,c
  8543  0037D2  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  8544  0037D4  B0D8               	btfsc	status,0,c
  8545  0037D6  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  8546  0037D8  0E01               	movlw	1
  8547  0037DA  6E09               	movwf	___awdiv@sign^0,c
  8548  0037DC                     l5051:
  8549  0037DC  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  8550  0037DE  EFF5  F01B         	goto	u6870
  8551  0037E2  EFF3  F01B         	goto	u6871
  8552  0037E6                     u6871:
  8553  0037E6  EFFB  F01B         	goto	l5057
  8554  0037EA                     u6870:
  8555  0037EA  6C04               	negf	___awdiv@dividend^0,c
  8556  0037EC  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  8557  0037EE  B0D8               	btfsc	status,0,c
  8558  0037F0  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  8559  0037F2  0E01               	movlw	1
  8560  0037F4  1A09               	xorwf	___awdiv@sign^0,f,c
  8561  0037F6                     l5057:
  8562  0037F6  0E00               	movlw	0
  8563  0037F8  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  8564  0037FA  0E00               	movlw	0
  8565  0037FC  6E0A               	movwf	___awdiv@quotient^0,c
  8566  0037FE  5006               	movf	___awdiv@divisor^0,w,c
  8567  003800  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  8568  003802  B4D8               	btfsc	status,2,c
  8569  003804  EF06  F01C         	goto	u6881
  8570  003808  EF08  F01C         	goto	u6880
  8571  00380C                     u6881:
  8572  00380C  EF30  F01C         	goto	l5079
  8573  003810                     u6880:
  8574  003810  0E01               	movlw	1
  8575  003812  6E08               	movwf	___awdiv@counter^0,c
  8576  003814  EF10  F01C         	goto	l5065
  8577  003818                     l5063:
  8578  003818  90D8               	bcf	status,0,c
  8579  00381A  3606               	rlcf	___awdiv@divisor^0,f,c
  8580  00381C  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  8581  00381E  2A08               	incf	___awdiv@counter^0,f,c
  8582  003820                     l5065:
  8583  003820  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  8584  003822  EF15  F01C         	goto	u6891
  8585  003826  EF17  F01C         	goto	u6890
  8586  00382A                     u6891:
  8587  00382A  EF0C  F01C         	goto	l5063
  8588  00382E                     u6890:
  8589  00382E                     l5067:
  8590  00382E  90D8               	bcf	status,0,c
  8591  003830  360A               	rlcf	___awdiv@quotient^0,f,c
  8592  003832  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8593  003834  5006               	movf	___awdiv@divisor^0,w,c
  8594  003836  5C04               	subwf	___awdiv@dividend^0,w,c
  8595  003838  5007               	movf	(___awdiv@divisor+1)^0,w,c
  8596  00383A  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  8597  00383C  A0D8               	btfss	status,0,c
  8598  00383E  EF23  F01C         	goto	u6901
  8599  003842  EF25  F01C         	goto	u6900
  8600  003846                     u6901:
  8601  003846  EF2A  F01C         	goto	l5075
  8602  00384A                     u6900:
  8603  00384A  5006               	movf	___awdiv@divisor^0,w,c
  8604  00384C  5E04               	subwf	___awdiv@dividend^0,f,c
  8605  00384E  5007               	movf	(___awdiv@divisor+1)^0,w,c
  8606  003850  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  8607  003852  800A               	bsf	___awdiv@quotient^0,0,c
  8608  003854                     l5075:
  8609  003854  90D8               	bcf	status,0,c
  8610  003856  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  8611  003858  3206               	rrcf	___awdiv@divisor^0,f,c
  8612  00385A  2E08               	decfsz	___awdiv@counter^0,f,c
  8613  00385C  EF17  F01C         	goto	l5067
  8614  003860                     l5079:
  8615  003860  5009               	movf	___awdiv@sign^0,w,c
  8616  003862  B4D8               	btfsc	status,2,c
  8617  003864  EF36  F01C         	goto	u6911
  8618  003868  EF38  F01C         	goto	u6910
  8619  00386C                     u6911:
  8620  00386C  EF3C  F01C         	goto	l5083
  8621  003870                     u6910:
  8622  003870  6C0A               	negf	___awdiv@quotient^0,c
  8623  003872  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  8624  003874  B0D8               	btfsc	status,0,c
  8625  003876  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  8626  003878                     l5083:
  8627  003878  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  8628  00387C  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  8629  003880  0012               	return		;funcret
  8630  003882                     __end_of___awdiv:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function _atoi *****************
  8634 ;; Defined at:
  8635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  s               2   10[COMRAM] PTR const unsigned char 
  8638 ;;		 -> STR_2(31), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  n               2   23[COMRAM] int 
  8641 ;;  neg             2   16[COMRAM] int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  2   10[COMRAM] int 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8651 ;;      Params:         2       0       0       0       0       0       0
  8652 ;;      Locals:         9       0       0       0       0       0       0
  8653 ;;      Temps:          4       0       0       0       0       0       0
  8654 ;;      Totals:        15       0       0       0       0       0       0
  8655 ;;Total ram usage:       15 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    3
  8658 ;; This function calls:
  8659 ;;		___wmul
  8660 ;;		_isdigit
  8661 ;;		_isspace
  8662 ;; This function is called by:
  8663 ;;		_vfpfcnvrt
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text31
  8668  002DA4                     __ptext31:
  8669                           	opt callstack 0
  8670  002DA4                     _atoi:
  8671                           	opt callstack 24
  8672  002DA4  0E00               	movlw	0
  8673  002DA6  6E19               	movwf	(atoi@n+1)^0,c
  8674  002DA8  0E00               	movlw	0
  8675  002DAA  6E18               	movwf	atoi@n^0,c
  8676  002DAC  0E00               	movlw	0
  8677  002DAE  6E12               	movwf	(atoi@neg+1)^0,c
  8678  002DB0  0E00               	movlw	0
  8679  002DB2  6E11               	movwf	atoi@neg^0,c
  8680  002DB4  EFDE  F016         	goto	l5601
  8681  002DB8                     l5599:
  8682  002DB8  4A0B               	infsnz	atoi@s^0,f,c
  8683  002DBA  2A0C               	incf	(atoi@s+1)^0,f,c
  8684  002DBC                     l5601:
  8685  002DBC  0E01               	movlw	1
  8686  002DBE  6E17               	movwf	_atoi$1172^0,c
  8687  002DC0  C00B  FFF6         	movff	atoi@s,tblptrl
  8688  002DC4  C00C  FFF7         	movff	atoi@s+1,tblptrh
  8689  002DC8                     	if	0	;tblptru may be non-zero
  8690  002DC8                     	endif
  8691  002DC8                     	if	0	;tblptru may be non-zero
  8692  002DC8                     	endif
  8693  002DC8  0008               	tblrd		*
  8694  002DCA  50F5               	movf	tablat,w,c
  8695  002DCC  0A20               	xorlw	32
  8696  002DCE  B4D8               	btfsc	status,2,c
  8697  002DD0  EFEC  F016         	goto	u7821
  8698  002DD4  EFEE  F016         	goto	u7820
  8699  002DD8                     u7821:
  8700  002DD8  EF0B  F017         	goto	l5609
  8701  002DDC                     u7820:
  8702  002DDC  0EF7               	movlw	247
  8703  002DDE  6E0D               	movwf	??_atoi^0,c
  8704  002DE0  0EFF               	movlw	255
  8705  002DE2  6E0E               	movwf	(??_atoi+1)^0,c
  8706  002DE4  C00B  FFF6         	movff	atoi@s,tblptrl
  8707  002DE8  C00C  FFF7         	movff	atoi@s+1,tblptrh
  8708  002DEC                     	if	0	;tblptru may be non-zero
  8709  002DEC                     	endif
  8710  002DEC                     	if	0	;tblptru may be non-zero
  8711  002DEC                     	endif
  8712  002DEC  0008               	tblrd		*
  8713  002DEE  50F5               	movf	tablat,w,c
  8714  002DF0  6E0F               	movwf	(??_atoi+2)^0,c
  8715  002DF2  6A10               	clrf	(??_atoi+3)^0,c
  8716  002DF4  500D               	movf	??_atoi^0,w,c
  8717  002DF6  260F               	addwf	(??_atoi+2)^0,f,c
  8718  002DF8  500E               	movf	(??_atoi+1)^0,w,c
  8719  002DFA  2210               	addwfc	(??_atoi+3)^0,f,c
  8720  002DFC  5010               	movf	(??_atoi+3)^0,w,c
  8721  002DFE  E109               	bnz	u7830
  8722  002E00  0E05               	movlw	5
  8723  002E02  5C0F               	subwf	(??_atoi+2)^0,w,c
  8724  002E04  A0D8               	btfss	status,0,c
  8725  002E06  EF07  F017         	goto	u7831
  8726  002E0A  EF09  F017         	goto	u7830
  8727  002E0E                     u7831:
  8728  002E0E  EF0B  F017         	goto	l5609
  8729  002E12                     u7830:
  8730  002E12  0E00               	movlw	0
  8731  002E14  6E17               	movwf	_atoi$1172^0,c
  8732  002E16                     l5609:
  8733  002E16  C017  F013         	movff	_atoi$1172,_atoi$1171
  8734  002E1A  6A14               	clrf	(_atoi$1171+1)^0,c
  8735  002E1C  5013               	movf	_atoi$1171^0,w,c
  8736  002E1E  1014               	iorwf	(_atoi$1171+1)^0,w,c
  8737  002E20  A4D8               	btfss	status,2,c
  8738  002E22  EF15  F017         	goto	u7841
  8739  002E26  EF17  F017         	goto	u7840
  8740  002E2A                     u7841:
  8741  002E2A  EFDC  F016         	goto	l5599
  8742  002E2E                     u7840:
  8743  002E2E  EF21  F017         	goto	l5619
  8744  002E32                     l5615:
  8745  002E32  0E00               	movlw	0
  8746  002E34  6E12               	movwf	(atoi@neg+1)^0,c
  8747  002E36  0E01               	movlw	1
  8748  002E38  6E11               	movwf	atoi@neg^0,c
  8749  002E3A                     l5617:
  8750  002E3A  4A0B               	infsnz	atoi@s^0,f,c
  8751  002E3C  2A0C               	incf	(atoi@s+1)^0,f,c
  8752  002E3E  EF56  F017         	goto	l5625
  8753  002E42                     l5619:
  8754  002E42  C00B  FFF6         	movff	atoi@s,tblptrl
  8755  002E46  C00C  FFF7         	movff	atoi@s+1,tblptrh
  8756  002E4A                     	if	0	;tblptru may be non-zero
  8757  002E4A                     	endif
  8758  002E4A                     	if	0	;tblptru may be non-zero
  8759  002E4A                     	endif
  8760  002E4A  0008               	tblrd		*
  8761  002E4C  50F5               	movf	tablat,w,c
  8762  002E4E  6E0D               	movwf	??_atoi^0,c
  8763  002E50  6A0E               	clrf	(??_atoi+1)^0,c
  8764                           
  8765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8766                           ; Switch size 1, requested type "simple"
  8767                           ; Number of cases is 1, Range of values is 0 to 0
  8768                           ; switch strategies available:
  8769                           ; Name         Instructions Cycles
  8770                           ; simple_byte            4     3 (average)
  8771                           ;	Chosen strategy is simple_byte
  8772  002E52  500E               	movf	(??_atoi+1)^0,w,c
  8773  002E54  0A00               	xorlw	0	; case 0
  8774  002E56  B4D8               	btfsc	status,2,c
  8775  002E58  EF30  F017         	goto	l5959
  8776  002E5C  EF56  F017         	goto	l5625
  8777  002E60                     l5959:
  8778                           
  8779                           ; Switch size 1, requested type "simple"
  8780                           ; Number of cases is 2, Range of values is 43 to 45
  8781                           ; switch strategies available:
  8782                           ; Name         Instructions Cycles
  8783                           ; simple_byte            7     4 (average)
  8784                           ;	Chosen strategy is simple_byte
  8785  002E60  500D               	movf	??_atoi^0,w,c
  8786  002E62  0A2B               	xorlw	43	; case 43
  8787  002E64  B4D8               	btfsc	status,2,c
  8788  002E66  EF1D  F017         	goto	l5617
  8789  002E6A  0A06               	xorlw	6	; case 45
  8790  002E6C  B4D8               	btfsc	status,2,c
  8791  002E6E  EF19  F017         	goto	l5615
  8792  002E72  EF56  F017         	goto	l5625
  8793  002E76                     l5621:
  8794  002E76  C018  F004         	movff	atoi@n,___wmul@multiplier
  8795  002E7A  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  8796  002E7E  0E00               	movlw	0
  8797  002E80  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  8798  002E82  0E0A               	movlw	10
  8799  002E84  6E06               	movwf	___wmul@multiplicand^0,c
  8800  002E86  EC63  F01F         	call	___wmul	;wreg free
  8801  002E8A  C00B  FFF6         	movff	atoi@s,tblptrl
  8802  002E8E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  8803  002E92                     	if	0	;tblptru may be non-zero
  8804  002E92                     	endif
  8805  002E92                     	if	0	;tblptru may be non-zero
  8806  002E92                     	endif
  8807  002E92  0008               	tblrd		*
  8808  002E94  50F5               	movf	tablat,w,c
  8809  002E96  5E04               	subwf	?___wmul^0,f,c
  8810  002E98  0E00               	movlw	0
  8811  002E9A  5A05               	subwfb	(?___wmul+1)^0,f,c
  8812  002E9C  0E30               	movlw	48
  8813  002E9E  2404               	addwf	?___wmul^0,w,c
  8814  002EA0  6E18               	movwf	atoi@n^0,c
  8815  002EA2  0E00               	movlw	0
  8816  002EA4  2005               	addwfc	(?___wmul+1)^0,w,c
  8817  002EA6  6E19               	movwf	(atoi@n+1)^0,c
  8818  002EA8  EF1D  F017         	goto	l5617
  8819  002EAC                     l5625:
  8820  002EAC  0ED0               	movlw	208
  8821  002EAE  6E0D               	movwf	??_atoi^0,c
  8822  002EB0  0EFF               	movlw	255
  8823  002EB2  6E0E               	movwf	(??_atoi+1)^0,c
  8824  002EB4  C00B  FFF6         	movff	atoi@s,tblptrl
  8825  002EB8  C00C  FFF7         	movff	atoi@s+1,tblptrh
  8826  002EBC                     	if	0	;tblptru may be non-zero
  8827  002EBC                     	endif
  8828  002EBC                     	if	0	;tblptru may be non-zero
  8829  002EBC                     	endif
  8830  002EBC  0008               	tblrd		*
  8831  002EBE  50F5               	movf	tablat,w,c
  8832  002EC0  6E0F               	movwf	(??_atoi+2)^0,c
  8833  002EC2  6A10               	clrf	(??_atoi+3)^0,c
  8834  002EC4  500D               	movf	??_atoi^0,w,c
  8835  002EC6  260F               	addwf	(??_atoi+2)^0,f,c
  8836  002EC8  500E               	movf	(??_atoi+1)^0,w,c
  8837  002ECA  2210               	addwfc	(??_atoi+3)^0,f,c
  8838  002ECC  5010               	movf	(??_atoi+3)^0,w,c
  8839  002ECE  E10A               	bnz	u7850
  8840  002ED0  0E0A               	movlw	10
  8841  002ED2  5C0F               	subwf	(??_atoi+2)^0,w,c
  8842  002ED4  A0D8               	btfss	status,0,c
  8843  002ED6  EF6F  F017         	goto	u7851
  8844  002EDA  EF72  F017         	goto	u7850
  8845  002EDE                     u7851:
  8846  002EDE  0E01               	movlw	1
  8847  002EE0  EF73  F017         	goto	u7860
  8848  002EE4                     u7850:
  8849  002EE4  0E00               	movlw	0
  8850  002EE6                     u7860:
  8851  002EE6  6E15               	movwf	_atoi$1173^0,c
  8852  002EE8  6A16               	clrf	(_atoi$1173+1)^0,c
  8853  002EEA  5015               	movf	_atoi$1173^0,w,c
  8854  002EEC  1016               	iorwf	(_atoi$1173+1)^0,w,c
  8855  002EEE  A4D8               	btfss	status,2,c
  8856  002EF0  EF7C  F017         	goto	u7871
  8857  002EF4  EF7E  F017         	goto	u7870
  8858  002EF8                     u7871:
  8859  002EF8  EF3B  F017         	goto	l5621
  8860  002EFC                     u7870:
  8861  002EFC  5011               	movf	atoi@neg^0,w,c
  8862  002EFE  1012               	iorwf	(atoi@neg+1)^0,w,c
  8863  002F00  A4D8               	btfss	status,2,c
  8864  002F02  EF85  F017         	goto	u7881
  8865  002F06  EF87  F017         	goto	u7880
  8866  002F0A                     u7881:
  8867  002F0A  EF95  F017         	goto	l1025
  8868  002F0E                     u7880:
  8869  002F0E  C018  F00D         	movff	atoi@n,??_atoi
  8870  002F12  C019  F00E         	movff	atoi@n+1,??_atoi+1
  8871  002F16  1E0D               	comf	??_atoi^0,f,c
  8872  002F18  1E0E               	comf	(??_atoi+1)^0,f,c
  8873  002F1A  4A0D               	infsnz	??_atoi^0,f,c
  8874  002F1C  2A0E               	incf	(??_atoi+1)^0,f,c
  8875  002F1E  C00D  F00B         	movff	??_atoi,?_atoi
  8876  002F22  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  8877  002F26  EF99  F017         	goto	l1028
  8878  002F2A                     l1025:
  8879  002F2A  C018  F00B         	movff	atoi@n,?_atoi
  8880  002F2E  C019  F00C         	movff	atoi@n+1,?_atoi+1
  8881  002F32                     l1028:
  8882  002F32  0012               	return		;funcret
  8883  002F34                     __end_of_atoi:
  8884                           	opt callstack 0
  8885                           
  8886 ;; *************** function _isspace *****************
  8887 ;; Defined at:
  8888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  c               2    3[COMRAM] int 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  2    3[COMRAM] int 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8902 ;;      Params:         2       0       0       0       0       0       0
  8903 ;;      Locals:         1       0       0       0       0       0       0
  8904 ;;      Temps:          4       0       0       0       0       0       0
  8905 ;;      Totals:         7       0       0       0       0       0       0
  8906 ;;Total ram usage:        7 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    2
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_atoi
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text32
  8917  003CDC                     __ptext32:
  8918                           	opt callstack 0
  8919  003CDC                     _isspace:
  8920                           	opt callstack 24
  8921  003CDC  0E01               	movlw	1
  8922  003CDE  6E0A               	movwf	_isspace$1202^0,c
  8923  003CE0  0E20               	movlw	32
  8924  003CE2  1804               	xorwf	isspace@c^0,w,c
  8925  003CE4  1005               	iorwf	(isspace@c+1)^0,w,c
  8926  003CE6  B4D8               	btfsc	status,2,c
  8927  003CE8  EF78  F01E         	goto	u7211
  8928  003CEC  EF7A  F01E         	goto	u7210
  8929  003CF0                     u7211:
  8930  003CF0  EF93  F01E         	goto	l5259
  8931  003CF4                     u7210:
  8932  003CF4  0EF7               	movlw	247
  8933  003CF6  6E06               	movwf	??_isspace^0,c
  8934  003CF8  0EFF               	movlw	255
  8935  003CFA  6E07               	movwf	(??_isspace+1)^0,c
  8936  003CFC  C004  F008         	movff	isspace@c,??_isspace+2
  8937  003D00  C005  F009         	movff	isspace@c+1,??_isspace+3
  8938  003D04  5006               	movf	??_isspace^0,w,c
  8939  003D06  2608               	addwf	(??_isspace+2)^0,f,c
  8940  003D08  5007               	movf	(??_isspace+1)^0,w,c
  8941  003D0A  2209               	addwfc	(??_isspace+3)^0,f,c
  8942  003D0C  5009               	movf	(??_isspace+3)^0,w,c
  8943  003D0E  E109               	bnz	u7220
  8944  003D10  0E05               	movlw	5
  8945  003D12  5C08               	subwf	(??_isspace+2)^0,w,c
  8946  003D14  A0D8               	btfss	status,0,c
  8947  003D16  EF8F  F01E         	goto	u7221
  8948  003D1A  EF91  F01E         	goto	u7220
  8949  003D1E                     u7221:
  8950  003D1E  EF93  F01E         	goto	l5259
  8951  003D22                     u7220:
  8952  003D22  0E00               	movlw	0
  8953  003D24  6E0A               	movwf	_isspace$1202^0,c
  8954  003D26                     l5259:
  8955  003D26  C00A  F004         	movff	_isspace$1202,?_isspace
  8956  003D2A  6A05               	clrf	(?_isspace+1)^0,c
  8957  003D2C  0012               	return		;funcret
  8958  003D2E                     __end_of_isspace:
  8959                           	opt callstack 0
  8960                           
  8961 ;; *************** function _isdigit *****************
  8962 ;; Defined at:
  8963 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  c               2    3[COMRAM] int 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;		None
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  2    3[COMRAM] int 
  8970 ;; Registers used:
  8971 ;;		wreg, status,2, status,0
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8977 ;;      Params:         2       0       0       0       0       0       0
  8978 ;;      Locals:         0       0       0       0       0       0       0
  8979 ;;      Temps:          4       0       0       0       0       0       0
  8980 ;;      Totals:         6       0       0       0       0       0       0
  8981 ;;Total ram usage:        6 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; Hardware stack levels required when called:    2
  8984 ;; This function calls:
  8985 ;;		Nothing
  8986 ;; This function is called by:
  8987 ;;		_vfpfcnvrt
  8988 ;;		_atoi
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           	psect	text33
  8993  003E28                     __ptext33:
  8994                           	opt callstack 0
  8995  003E28                     _isdigit:
  8996                           	opt callstack 25
  8997  003E28  0ED0               	movlw	208
  8998  003E2A  6E06               	movwf	??_isdigit^0,c
  8999  003E2C  0EFF               	movlw	255
  9000  003E2E  6E07               	movwf	(??_isdigit+1)^0,c
  9001  003E30  C004  F008         	movff	isdigit@c,??_isdigit+2
  9002  003E34  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  9003  003E38  5006               	movf	??_isdigit^0,w,c
  9004  003E3A  2608               	addwf	(??_isdigit+2)^0,f,c
  9005  003E3C  5007               	movf	(??_isdigit+1)^0,w,c
  9006  003E3E  2209               	addwfc	(??_isdigit+3)^0,f,c
  9007  003E40  5009               	movf	(??_isdigit+3)^0,w,c
  9008  003E42  E10A               	bnz	u6420
  9009  003E44  0E0A               	movlw	10
  9010  003E46  5C08               	subwf	(??_isdigit+2)^0,w,c
  9011  003E48  A0D8               	btfss	status,0,c
  9012  003E4A  EF29  F01F         	goto	u6421
  9013  003E4E  EF2C  F01F         	goto	u6420
  9014  003E52                     u6421:
  9015  003E52  0E01               	movlw	1
  9016  003E54  EF2D  F01F         	goto	u6430
  9017  003E58                     u6420:
  9018  003E58  0E00               	movlw	0
  9019  003E5A                     u6430:
  9020  003E5A  6E04               	movwf	?_isdigit^0,c
  9021  003E5C  6A05               	clrf	(?_isdigit+1)^0,c
  9022  003E5E  0012               	return		;funcret
  9023  003E60                     __end_of_isdigit:
  9024                           	opt callstack 0
  9025                           
  9026 ;; *************** function ___wmul *****************
  9027 ;; Defined at:
  9028 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  multiplier      2    3[COMRAM] unsigned int 
  9031 ;;  multiplicand    2    5[COMRAM] unsigned int 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  product         2    7[COMRAM] unsigned int 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2    3[COMRAM] unsigned int 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, prodl, prodh
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9043 ;;      Params:         4       0       0       0       0       0       0
  9044 ;;      Locals:         2       0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0
  9046 ;;      Totals:         6       0       0       0       0       0       0
  9047 ;;Total ram usage:        6 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    2
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_atoi
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text34
  9058  003EC6                     __ptext34:
  9059                           	opt callstack 0
  9060  003EC6                     ___wmul:
  9061                           	opt callstack 24
  9062  003EC6  5004               	movf	___wmul@multiplier^0,w,c
  9063  003EC8  0206               	mulwf	___wmul@multiplicand^0,c
  9064  003ECA  CFF3 F008          	movff	prodl,___wmul@product
  9065  003ECE  CFF4 F009          	movff	prodh,___wmul@product+1
  9066  003ED2  5004               	movf	___wmul@multiplier^0,w,c
  9067  003ED4  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  9068  003ED6  50F3               	movf	243,w,c
  9069  003ED8  2609               	addwf	(___wmul@product+1)^0,f,c
  9070  003EDA  5005               	movf	(___wmul@multiplier+1)^0,w,c
  9071  003EDC  0206               	mulwf	___wmul@multiplicand^0,c
  9072  003EDE  50F3               	movf	243,w,c
  9073  003EE0  2609               	addwf	(___wmul@product+1)^0,f,c
  9074  003EE2  C008  F004         	movff	___wmul@product,?___wmul
  9075  003EE6  C009  F005         	movff	___wmul@product+1,?___wmul+1
  9076  003EEA  0012               	return		;funcret
  9077  003EEC                     __end_of___wmul:
  9078                           	opt callstack 0
  9079                           
  9080 ;; *************** function _init_USART *****************
  9081 ;; Defined at:
  9082 ;;		line 3 in file "../Bibliotecas/usart.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;		None
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9096 ;;      Params:         0       0       0       0       0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; Hardware stack levels required when called:    2
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text35
  9111  003F02                     __ptext35:
  9112                           	opt callstack 0
  9113  003F02                     _init_USART:
  9114                           	opt callstack 28
  9115  003F02                     
  9116                           ;../Bibliotecas/usart.c: 5:     TXSTAbits.TXEN = 1;
  9117  003F02  8AAC               	bsf	172,5,c	;volatile
  9118                           
  9119                           ;../Bibliotecas/usart.c: 6:     RCSTAbits.CREN = 1;
  9120  003F04  88AB               	bsf	171,4,c	;volatile
  9121                           
  9122                           ;../Bibliotecas/usart.c: 7:     TXSTAbits.SYNC = 0;
  9123  003F06  98AC               	bcf	172,4,c	;volatile
  9124                           
  9125                           ;../Bibliotecas/usart.c: 8:     RCSTAbits.SPEN = 1;
  9126  003F08  8EAB               	bsf	171,7,c	;volatile
  9127                           
  9128                           ;../Bibliotecas/usart.c: 10:     TXSTAbits.BRGH = 0;
  9129  003F0A  94AC               	bcf	172,2,c	;volatile
  9130                           
  9131                           ;../Bibliotecas/usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  9132  003F0C  96B8               	bcf	184,3,c	;volatile
  9133  003F0E                     
  9134                           ;../Bibliotecas/usart.c: 13:     SPBRG = 12;
  9135  003F0E  0E0C               	movlw	12
  9136  003F10  6EAF               	movwf	175,c	;volatile
  9137  003F12  0012               	return		;funcret
  9138  003F14                     __end_of_init_USART:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function ___xxtofl *****************
  9142 ;; Defined at:
  9143 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  sign            1    wreg     unsigned char 
  9146 ;;  val             4    3[COMRAM] long 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  sign            1   11[COMRAM] unsigned char 
  9149 ;;  arg             4   13[COMRAM] unsigned long 
  9150 ;;  exp             1   12[COMRAM] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  4    3[COMRAM] unsigned char 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9160 ;;      Params:         4       0       0       0       0       0       0
  9161 ;;      Locals:         6       0       0       0       0       0       0
  9162 ;;      Temps:          4       0       0       0       0       0       0
  9163 ;;      Totals:        14       0       0       0       0       0       0
  9164 ;;Total ram usage:       14 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    2
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_main
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text36
  9175  002BF0                     __ptext36:
  9176                           	opt callstack 0
  9177  002BF0                     ___xxtofl:
  9178                           	opt callstack 28
  9179                           
  9180                           ;incstack = 0
  9181                           ;___xxtofl@sign stored from wreg
  9182  002BF0  6E0C               	movwf	___xxtofl@sign^0,c
  9183  002BF2  500C               	movf	___xxtofl@sign^0,w,c
  9184  002BF4  B4D8               	btfsc	status,2,c
  9185  002BF6  EFFF  F015         	goto	u5491
  9186  002BFA  EF01  F016         	goto	u5490
  9187  002BFE                     u5491:
  9188  002BFE  EF23  F016         	goto	l970
  9189  002C02                     u5490:
  9190  002C02  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9191  002C04  EF08  F016         	goto	u5500
  9192  002C08  EF06  F016         	goto	u5501
  9193  002C0C                     u5501:
  9194  002C0C  EF23  F016         	goto	l970
  9195  002C10                     u5500:
  9196  002C10  C004  F008         	movff	___xxtofl@val,??___xxtofl
  9197  002C14  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  9198  002C18  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  9199  002C1C  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  9200  002C20  1E08               	comf	??___xxtofl^0,f,c
  9201  002C22  1E09               	comf	(??___xxtofl+1)^0,f,c
  9202  002C24  1E0A               	comf	(??___xxtofl+2)^0,f,c
  9203  002C26  1E0B               	comf	(??___xxtofl+3)^0,f,c
  9204  002C28  2A08               	incf	??___xxtofl^0,f,c
  9205  002C2A  0E00               	movlw	0
  9206  002C2C  2209               	addwfc	(??___xxtofl+1)^0,f,c
  9207  002C2E  220A               	addwfc	(??___xxtofl+2)^0,f,c
  9208  002C30  220B               	addwfc	(??___xxtofl+3)^0,f,c
  9209  002C32  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  9210  002C36  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  9211  002C3A  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  9212  002C3E  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  9213  002C42  EF2B  F016         	goto	l4255
  9214  002C46                     l970:
  9215  002C46  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  9216  002C4A  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9217  002C4E  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9218  002C52  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9219  002C56                     l4255:
  9220  002C56  5004               	movf	___xxtofl@val^0,w,c
  9221  002C58  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  9222  002C5A  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  9223  002C5C  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  9224  002C5E  A4D8               	btfss	status,2,c
  9225  002C60  EF34  F016         	goto	u5511
  9226  002C64  EF36  F016         	goto	u5510
  9227  002C68                     u5511:
  9228  002C68  EF40  F016         	goto	l4261
  9229  002C6C                     u5510:
  9230  002C6C  0E00               	movlw	0
  9231  002C6E  6E04               	movwf	?___xxtofl^0,c
  9232  002C70  0E00               	movlw	0
  9233  002C72  6E05               	movwf	(?___xxtofl+1)^0,c
  9234  002C74  0E00               	movlw	0
  9235  002C76  6E06               	movwf	(?___xxtofl+2)^0,c
  9236  002C78  0E00               	movlw	0
  9237  002C7A  6E07               	movwf	(?___xxtofl+3)^0,c
  9238  002C7C  EFD1  F016         	goto	l973
  9239  002C80                     l4261:
  9240  002C80  0E96               	movlw	150
  9241  002C82  6E0D               	movwf	___xxtofl@exp^0,c
  9242  002C84  EF4A  F016         	goto	l4265
  9243  002C88                     l4263:
  9244  002C88  2A0D               	incf	___xxtofl@exp^0,f,c
  9245  002C8A  90D8               	bcf	status,0,c
  9246  002C8C  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9247  002C8E  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9248  002C90  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9249  002C92  320E               	rrcf	___xxtofl@arg^0,f,c
  9250  002C94                     l4265:
  9251  002C94  0E00               	movlw	0
  9252  002C96  140E               	andwf	___xxtofl@arg^0,w,c
  9253  002C98  6E08               	movwf	??___xxtofl^0,c
  9254  002C9A  0E00               	movlw	0
  9255  002C9C  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9256  002C9E  6E09               	movwf	(??___xxtofl+1)^0,c
  9257  002CA0  0E00               	movlw	0
  9258  002CA2  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9259  002CA4  6E0A               	movwf	(??___xxtofl+2)^0,c
  9260  002CA6  0EFE               	movlw	254
  9261  002CA8  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9262  002CAA  6E0B               	movwf	(??___xxtofl+3)^0,c
  9263  002CAC  5008               	movf	??___xxtofl^0,w,c
  9264  002CAE  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9265  002CB0  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9266  002CB2  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9267  002CB4  A4D8               	btfss	status,2,c
  9268  002CB6  EF5F  F016         	goto	u5521
  9269  002CBA  EF61  F016         	goto	u5520
  9270  002CBE                     u5521:
  9271  002CBE  EF44  F016         	goto	l4263
  9272  002CC2                     u5520:
  9273  002CC2  EF6F  F016         	goto	l977
  9274  002CC6                     l4267:
  9275  002CC6  2A0D               	incf	___xxtofl@exp^0,f,c
  9276  002CC8  0E01               	movlw	1
  9277  002CCA  260E               	addwf	___xxtofl@arg^0,f,c
  9278  002CCC  0E00               	movlw	0
  9279  002CCE  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  9280  002CD0  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  9281  002CD2  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  9282  002CD4  90D8               	bcf	status,0,c
  9283  002CD6  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  9284  002CD8  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  9285  002CDA  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  9286  002CDC  320E               	rrcf	___xxtofl@arg^0,f,c
  9287  002CDE                     l977:
  9288  002CDE  0E00               	movlw	0
  9289  002CE0  140E               	andwf	___xxtofl@arg^0,w,c
  9290  002CE2  6E08               	movwf	??___xxtofl^0,c
  9291  002CE4  0E00               	movlw	0
  9292  002CE6  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  9293  002CE8  6E09               	movwf	(??___xxtofl+1)^0,c
  9294  002CEA  0E00               	movlw	0
  9295  002CEC  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  9296  002CEE  6E0A               	movwf	(??___xxtofl+2)^0,c
  9297  002CF0  0EFF               	movlw	255
  9298  002CF2  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  9299  002CF4  6E0B               	movwf	(??___xxtofl+3)^0,c
  9300  002CF6  5008               	movf	??___xxtofl^0,w,c
  9301  002CF8  1009               	iorwf	(??___xxtofl+1)^0,w,c
  9302  002CFA  100A               	iorwf	(??___xxtofl+2)^0,w,c
  9303  002CFC  100B               	iorwf	(??___xxtofl+3)^0,w,c
  9304  002CFE  A4D8               	btfss	status,2,c
  9305  002D00  EF84  F016         	goto	u5531
  9306  002D04  EF86  F016         	goto	u5530
  9307  002D08                     u5531:
  9308  002D08  EF63  F016         	goto	l4267
  9309  002D0C                     u5530:
  9310  002D0C  EF8E  F016         	goto	l4275
  9311  002D10                     l4273:
  9312  002D10  060D               	decf	___xxtofl@exp^0,f,c
  9313  002D12  90D8               	bcf	status,0,c
  9314  002D14  360E               	rlcf	___xxtofl@arg^0,f,c
  9315  002D16  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  9316  002D18  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  9317  002D1A  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  9318  002D1C                     l4275:
  9319  002D1C  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  9320  002D1E  EF93  F016         	goto	u5541
  9321  002D22  EF95  F016         	goto	u5540
  9322  002D26                     u5541:
  9323  002D26  EF9D  F016         	goto	l984
  9324  002D2A                     u5540:
  9325  002D2A  0E02               	movlw	2
  9326  002D2C  600D               	cpfslt	___xxtofl@exp^0,c
  9327  002D2E  EF9B  F016         	goto	u5551
  9328  002D32  EF9D  F016         	goto	u5550
  9329  002D36                     u5551:
  9330  002D36  EF88  F016         	goto	l4273
  9331  002D3A                     u5550:
  9332  002D3A                     l984:
  9333  002D3A  B00D               	btfsc	___xxtofl@exp^0,0,c
  9334  002D3C  EFA2  F016         	goto	u5561
  9335  002D40  EFA4  F016         	goto	u5560
  9336  002D44                     u5561:
  9337  002D44  EFA5  F016         	goto	l4281
  9338  002D48                     u5560:
  9339  002D48  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  9340  002D4A                     l4281:
  9341  002D4A  90D8               	bcf	status,0,c
  9342  002D4C  320D               	rrcf	___xxtofl@exp^0,f,c
  9343  002D4E  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  9344  002D52  6A09               	clrf	(??___xxtofl+1)^0,c
  9345  002D54  6A0A               	clrf	(??___xxtofl+2)^0,c
  9346  002D56  6A0B               	clrf	(??___xxtofl+3)^0,c
  9347  002D58  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  9348  002D5C  6A0A               	clrf	(??___xxtofl+2)^0,c
  9349  002D5E  6A09               	clrf	(??___xxtofl+1)^0,c
  9350  002D60  6A08               	clrf	??___xxtofl^0,c
  9351  002D62  5008               	movf	??___xxtofl^0,w,c
  9352  002D64  120E               	iorwf	___xxtofl@arg^0,f,c
  9353  002D66  5009               	movf	(??___xxtofl+1)^0,w,c
  9354  002D68  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  9355  002D6A  500A               	movf	(??___xxtofl+2)^0,w,c
  9356  002D6C  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  9357  002D6E  500B               	movf	(??___xxtofl+3)^0,w,c
  9358  002D70  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  9359  002D72  500C               	movf	___xxtofl@sign^0,w,c
  9360  002D74  B4D8               	btfsc	status,2,c
  9361  002D76  EFBF  F016         	goto	u5571
  9362  002D7A  EFC1  F016         	goto	u5570
  9363  002D7E                     u5571:
  9364  002D7E  EFC9  F016         	goto	l4291
  9365  002D82                     u5570:
  9366  002D82  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  9367  002D84  EFC8  F016         	goto	u5580
  9368  002D88  EFC6  F016         	goto	u5581
  9369  002D8C                     u5581:
  9370  002D8C  EFC9  F016         	goto	l4291
  9371  002D90                     u5580:
  9372  002D90  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  9373  002D92                     l4291:
  9374  002D92  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  9375  002D96  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  9376  002D9A  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  9377  002D9E  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  9378  002DA2                     l973:
  9379  002DA2  0012               	return		;funcret
  9380  002DA4                     __end_of___xxtofl:
  9381                           	opt callstack 0
  9382                           
  9383 ;; *************** function ___lmul *****************
  9384 ;; Defined at:
  9385 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  multiplier      4    3[COMRAM] unsigned long 
  9388 ;;  multiplicand    4    7[COMRAM] unsigned long 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  product         4   11[COMRAM] unsigned long 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  4    3[COMRAM] unsigned long 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9400 ;;      Params:         8       0       0       0       0       0       0
  9401 ;;      Locals:         4       0       0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0
  9403 ;;      Totals:        12       0       0       0       0       0       0
  9404 ;;Total ram usage:       12 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    2
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_main
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text37
  9415  003A9E                     __ptext37:
  9416                           	opt callstack 0
  9417  003A9E                     ___lmul:
  9418                           	opt callstack 28
  9419  003A9E  0E00               	movlw	0
  9420  003AA0  6E0C               	movwf	___lmul@product^0,c
  9421  003AA2  0E00               	movlw	0
  9422  003AA4  6E0D               	movwf	(___lmul@product+1)^0,c
  9423  003AA6  0E00               	movlw	0
  9424  003AA8  6E0E               	movwf	(___lmul@product+2)^0,c
  9425  003AAA  0E00               	movlw	0
  9426  003AAC  6E0F               	movwf	(___lmul@product+3)^0,c
  9427  003AAE                     l4197:
  9428  003AAE  A004               	btfss	___lmul@multiplier^0,0,c
  9429  003AB0  EF5C  F01D         	goto	u5411
  9430  003AB4  EF5E  F01D         	goto	u5410
  9431  003AB8                     u5411:
  9432  003AB8  EF66  F01D         	goto	l4201
  9433  003ABC                     u5410:
  9434  003ABC  5008               	movf	___lmul@multiplicand^0,w,c
  9435  003ABE  260C               	addwf	___lmul@product^0,f,c
  9436  003AC0  5009               	movf	(___lmul@multiplicand+1)^0,w,c
  9437  003AC2  220D               	addwfc	(___lmul@product+1)^0,f,c
  9438  003AC4  500A               	movf	(___lmul@multiplicand+2)^0,w,c
  9439  003AC6  220E               	addwfc	(___lmul@product+2)^0,f,c
  9440  003AC8  500B               	movf	(___lmul@multiplicand+3)^0,w,c
  9441  003ACA  220F               	addwfc	(___lmul@product+3)^0,f,c
  9442  003ACC                     l4201:
  9443  003ACC  90D8               	bcf	status,0,c
  9444  003ACE  3608               	rlcf	___lmul@multiplicand^0,f,c
  9445  003AD0  3609               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9446  003AD2  360A               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9447  003AD4  360B               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9448  003AD6  90D8               	bcf	status,0,c
  9449  003AD8  3207               	rrcf	(___lmul@multiplier+3)^0,f,c
  9450  003ADA  3206               	rrcf	(___lmul@multiplier+2)^0,f,c
  9451  003ADC  3205               	rrcf	(___lmul@multiplier+1)^0,f,c
  9452  003ADE  3204               	rrcf	___lmul@multiplier^0,f,c
  9453  003AE0  5004               	movf	___lmul@multiplier^0,w,c
  9454  003AE2  1005               	iorwf	(___lmul@multiplier+1)^0,w,c
  9455  003AE4  1006               	iorwf	(___lmul@multiplier+2)^0,w,c
  9456  003AE6  1007               	iorwf	(___lmul@multiplier+3)^0,w,c
  9457  003AE8  A4D8               	btfss	status,2,c
  9458  003AEA  EF79  F01D         	goto	u5421
  9459  003AEE  EF7B  F01D         	goto	u5420
  9460  003AF2                     u5421:
  9461  003AF2  EF57  F01D         	goto	l4197
  9462  003AF6                     u5420:
  9463  003AF6  C00C  F004         	movff	___lmul@product,?___lmul
  9464  003AFA  C00D  F005         	movff	___lmul@product+1,?___lmul+1
  9465  003AFE  C00E  F006         	movff	___lmul@product+2,?___lmul+2
  9466  003B02  C00F  F007         	movff	___lmul@product+3,?___lmul+3
  9467  003B06  0012               	return		;funcret
  9468  003B08                     __end_of___lmul:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function ___aldiv *****************
  9472 ;; Defined at:
  9473 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  dividend        4   15[COMRAM] long 
  9476 ;;  divisor         4   19[COMRAM] long 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  quotient        4   25[COMRAM] long 
  9479 ;;  sign            1   24[COMRAM] unsigned char 
  9480 ;;  counter         1   23[COMRAM] unsigned char 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  4   15[COMRAM] long 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9490 ;;      Params:         8       0       0       0       0       0       0
  9491 ;;      Locals:         6       0       0       0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0
  9493 ;;      Totals:        14       0       0       0       0       0       0
  9494 ;;Total ram usage:       14 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:    2
  9497 ;; This function calls:
  9498 ;;		Nothing
  9499 ;; This function is called by:
  9500 ;;		_main
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text38
  9505  00304E                     __ptext38:
  9506                           	opt callstack 0
  9507  00304E                     ___aldiv:
  9508                           	opt callstack 28
  9509  00304E  0E00               	movlw	0
  9510  003050  6E19               	movwf	___aldiv@sign^0,c
  9511  003052  BE17               	btfsc	(___aldiv@divisor+3)^0,7,c
  9512  003054  EF30  F018         	goto	u5430
  9513  003058  EF2E  F018         	goto	u5431
  9514  00305C                     u5431:
  9515  00305C  EF3A  F018         	goto	l4213
  9516  003060                     u5430:
  9517  003060  1E17               	comf	(___aldiv@divisor+3)^0,f,c
  9518  003062  1E16               	comf	(___aldiv@divisor+2)^0,f,c
  9519  003064  1E15               	comf	(___aldiv@divisor+1)^0,f,c
  9520  003066  6C14               	negf	___aldiv@divisor^0,c
  9521  003068  0E00               	movlw	0
  9522  00306A  2215               	addwfc	(___aldiv@divisor+1)^0,f,c
  9523  00306C  2216               	addwfc	(___aldiv@divisor+2)^0,f,c
  9524  00306E  2217               	addwfc	(___aldiv@divisor+3)^0,f,c
  9525  003070  0E01               	movlw	1
  9526  003072  6E19               	movwf	___aldiv@sign^0,c
  9527  003074                     l4213:
  9528  003074  BE13               	btfsc	(___aldiv@dividend+3)^0,7,c
  9529  003076  EF41  F018         	goto	u5440
  9530  00307A  EF3F  F018         	goto	u5441
  9531  00307E                     u5441:
  9532  00307E  EF4B  F018         	goto	l4219
  9533  003082                     u5440:
  9534  003082  1E13               	comf	(___aldiv@dividend+3)^0,f,c
  9535  003084  1E12               	comf	(___aldiv@dividend+2)^0,f,c
  9536  003086  1E11               	comf	(___aldiv@dividend+1)^0,f,c
  9537  003088  6C10               	negf	___aldiv@dividend^0,c
  9538  00308A  0E00               	movlw	0
  9539  00308C  2211               	addwfc	(___aldiv@dividend+1)^0,f,c
  9540  00308E  2212               	addwfc	(___aldiv@dividend+2)^0,f,c
  9541  003090  2213               	addwfc	(___aldiv@dividend+3)^0,f,c
  9542  003092  0E01               	movlw	1
  9543  003094  1A19               	xorwf	___aldiv@sign^0,f,c
  9544  003096                     l4219:
  9545  003096  0E00               	movlw	0
  9546  003098  6E1A               	movwf	___aldiv@quotient^0,c
  9547  00309A  0E00               	movlw	0
  9548  00309C  6E1B               	movwf	(___aldiv@quotient+1)^0,c
  9549  00309E  0E00               	movlw	0
  9550  0030A0  6E1C               	movwf	(___aldiv@quotient+2)^0,c
  9551  0030A2  0E00               	movlw	0
  9552  0030A4  6E1D               	movwf	(___aldiv@quotient+3)^0,c
  9553  0030A6  5014               	movf	___aldiv@divisor^0,w,c
  9554  0030A8  1015               	iorwf	(___aldiv@divisor+1)^0,w,c
  9555  0030AA  1016               	iorwf	(___aldiv@divisor+2)^0,w,c
  9556  0030AC  1017               	iorwf	(___aldiv@divisor+3)^0,w,c
  9557  0030AE  B4D8               	btfsc	status,2,c
  9558  0030B0  EF5C  F018         	goto	u5451
  9559  0030B4  EF5E  F018         	goto	u5450
  9560  0030B8                     u5451:
  9561  0030B8  EF94  F018         	goto	l4241
  9562  0030BC                     u5450:
  9563  0030BC  0E01               	movlw	1
  9564  0030BE  6E18               	movwf	___aldiv@counter^0,c
  9565  0030C0  EF68  F018         	goto	l4227
  9566  0030C4                     l4225:
  9567  0030C4  90D8               	bcf	status,0,c
  9568  0030C6  3614               	rlcf	___aldiv@divisor^0,f,c
  9569  0030C8  3615               	rlcf	(___aldiv@divisor+1)^0,f,c
  9570  0030CA  3616               	rlcf	(___aldiv@divisor+2)^0,f,c
  9571  0030CC  3617               	rlcf	(___aldiv@divisor+3)^0,f,c
  9572  0030CE  2A18               	incf	___aldiv@counter^0,f,c
  9573  0030D0                     l4227:
  9574  0030D0  AE17               	btfss	(___aldiv@divisor+3)^0,7,c
  9575  0030D2  EF6D  F018         	goto	u5461
  9576  0030D6  EF6F  F018         	goto	u5460
  9577  0030DA                     u5461:
  9578  0030DA  EF62  F018         	goto	l4225
  9579  0030DE                     u5460:
  9580  0030DE                     l4229:
  9581  0030DE  90D8               	bcf	status,0,c
  9582  0030E0  361A               	rlcf	___aldiv@quotient^0,f,c
  9583  0030E2  361B               	rlcf	(___aldiv@quotient+1)^0,f,c
  9584  0030E4  361C               	rlcf	(___aldiv@quotient+2)^0,f,c
  9585  0030E6  361D               	rlcf	(___aldiv@quotient+3)^0,f,c
  9586  0030E8  5014               	movf	___aldiv@divisor^0,w,c
  9587  0030EA  5C10               	subwf	___aldiv@dividend^0,w,c
  9588  0030EC  5015               	movf	(___aldiv@divisor+1)^0,w,c
  9589  0030EE  5811               	subwfb	(___aldiv@dividend+1)^0,w,c
  9590  0030F0  5016               	movf	(___aldiv@divisor+2)^0,w,c
  9591  0030F2  5812               	subwfb	(___aldiv@dividend+2)^0,w,c
  9592  0030F4  5017               	movf	(___aldiv@divisor+3)^0,w,c
  9593  0030F6  5813               	subwfb	(___aldiv@dividend+3)^0,w,c
  9594  0030F8  A0D8               	btfss	status,0,c
  9595  0030FA  EF81  F018         	goto	u5471
  9596  0030FE  EF83  F018         	goto	u5470
  9597  003102                     u5471:
  9598  003102  EF8C  F018         	goto	l4237
  9599  003106                     u5470:
  9600  003106  5014               	movf	___aldiv@divisor^0,w,c
  9601  003108  5E10               	subwf	___aldiv@dividend^0,f,c
  9602  00310A  5015               	movf	(___aldiv@divisor+1)^0,w,c
  9603  00310C  5A11               	subwfb	(___aldiv@dividend+1)^0,f,c
  9604  00310E  5016               	movf	(___aldiv@divisor+2)^0,w,c
  9605  003110  5A12               	subwfb	(___aldiv@dividend+2)^0,f,c
  9606  003112  5017               	movf	(___aldiv@divisor+3)^0,w,c
  9607  003114  5A13               	subwfb	(___aldiv@dividend+3)^0,f,c
  9608  003116  801A               	bsf	___aldiv@quotient^0,0,c
  9609  003118                     l4237:
  9610  003118  90D8               	bcf	status,0,c
  9611  00311A  3217               	rrcf	(___aldiv@divisor+3)^0,f,c
  9612  00311C  3216               	rrcf	(___aldiv@divisor+2)^0,f,c
  9613  00311E  3215               	rrcf	(___aldiv@divisor+1)^0,f,c
  9614  003120  3214               	rrcf	___aldiv@divisor^0,f,c
  9615  003122  2E18               	decfsz	___aldiv@counter^0,f,c
  9616  003124  EF6F  F018         	goto	l4229
  9617  003128                     l4241:
  9618  003128  5019               	movf	___aldiv@sign^0,w,c
  9619  00312A  B4D8               	btfsc	status,2,c
  9620  00312C  EF9A  F018         	goto	u5481
  9621  003130  EF9C  F018         	goto	u5480
  9622  003134                     u5481:
  9623  003134  EFA4  F018         	goto	l4245
  9624  003138                     u5480:
  9625  003138  1E1D               	comf	(___aldiv@quotient+3)^0,f,c
  9626  00313A  1E1C               	comf	(___aldiv@quotient+2)^0,f,c
  9627  00313C  1E1B               	comf	(___aldiv@quotient+1)^0,f,c
  9628  00313E  6C1A               	negf	___aldiv@quotient^0,c
  9629  003140  0E00               	movlw	0
  9630  003142  221B               	addwfc	(___aldiv@quotient+1)^0,f,c
  9631  003144  221C               	addwfc	(___aldiv@quotient+2)^0,f,c
  9632  003146  221D               	addwfc	(___aldiv@quotient+3)^0,f,c
  9633  003148                     l4245:
  9634  003148  C01A  F010         	movff	___aldiv@quotient,?___aldiv
  9635  00314C  C01B  F011         	movff	___aldiv@quotient+1,?___aldiv+1
  9636  003150  C01C  F012         	movff	___aldiv@quotient+2,?___aldiv+2
  9637  003154  C01D  F013         	movff	___aldiv@quotient+3,?___aldiv+3
  9638  003158  0012               	return		;funcret
  9639  00315A                     __end_of___aldiv:
  9640                           	opt callstack 0
  9641                           
  9642 ;; *************** function _trata_serial *****************
  9643 ;; Defined at:
  9644 ;;		line 16 in file "EX25.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9658 ;;      Params:         0       0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0
  9660 ;;      Temps:          3       0       0       0       0       0       0
  9661 ;;      Totals:         3       0       0       0       0       0       0
  9662 ;;Total ram usage:        3 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    1
  9665 ;; This function calls:
  9666 ;;		_USART_le
  9667 ;; This function is called by:
  9668 ;;		Interrupt level 2
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	intcode
  9673  000008                     __pintcode:
  9674                           	opt callstack 0
  9675  000008                     _trata_serial:
  9676                           	opt callstack 21
  9677                           
  9678                           ;incstack = 0
  9679  000008  827B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9680  00000A  EDA9  F01A         	call	int_func,f	;refresh shadow registers
  9681                           
  9682                           	psect	intcode_body
  9683  003552                     __pintcode_body:
  9684                           	opt callstack 21
  9685  003552                     int_func:
  9686                           	opt callstack 21
  9687  003552  0006               	pop		; remove dummy address from shadow register refresh
  9688  003554  CFD9 F002          	movff	fsr2l,??_trata_serial+1
  9689  003558  CFDA F003          	movff	fsr2h,??_trata_serial+2
  9690  00355C                     
  9691                           ;EX25.c: 18:     if (RCIF)
  9692  00355C  AA9E               	btfss	3998,5,c	;volatile
  9693  00355E  EFB3  F01A         	goto	i2u559_41
  9694  003562  EFB5  F01A         	goto	i2u559_40
  9695  003566                     i2u559_41:
  9696  003566  EF0B  F01B         	goto	i2l4321
  9697  00356A                     i2u559_40:
  9698  00356A                     
  9699                           ;EX25.c: 20:       {;EX25.c: 21:         dado[i] = USART_le();
  9700  00356A  0EE8               	movlw	low _dado
  9701  00356C  247A               	addwf	_i^0,w,c
  9702  00356E  6ED9               	movwf	fsr2l,c
  9703  003570  6ADA               	clrf	fsr2h,c
  9704  003572  0E00               	movlw	high _dado
  9705  003574  22DA               	addwfc	fsr2h,f,c
  9706  003576  EC8A  F01F         	call	_USART_le	;wreg free
  9707  00357A  6EDF               	movwf	indf2,c
  9708  00357C                     
  9709                           ;EX25.c: 24:         if (dado[i] == 0x0D)
  9710  00357C  0EE8               	movlw	low _dado
  9711  00357E  247A               	addwf	_i^0,w,c
  9712  003580  6ED9               	movwf	fsr2l,c
  9713  003582  6ADA               	clrf	fsr2h,c
  9714  003584  0E00               	movlw	high _dado
  9715  003586  22DA               	addwfc	fsr2h,f,c
  9716  003588  0E0D               	movlw	13
  9717  00358A  18DE               	xorwf	postinc2,w,c
  9718  00358C  A4D8               	btfss	status,2,c
  9719  00358E  EFCB  F01A         	goto	i2u560_41
  9720  003592  EFCD  F01A         	goto	i2u560_40
  9721  003596                     i2u560_41:
  9722  003596  EF0A  F01B         	goto	i2l4319
  9723  00359A                     i2u560_40:
  9724  00359A                     
  9725                           ;EX25.c: 25:         {;EX25.c: 27:             if (dado[0] == 'L' && dado[1] == 'D' && d
      +                          ado[2] == '1')
  9726  00359A  0E4C               	movlw	76
  9727  00359C  0100               	movlb	0	; () banked
  9728  00359E  19E8               	xorwf	_dado& (0+255),w,b
  9729  0035A0  A4D8               	btfss	status,2,c
  9730  0035A2  EFD5  F01A         	goto	i2u561_41
  9731  0035A6  EFD7  F01A         	goto	i2u561_40
  9732  0035AA                     i2u561_41:
  9733  0035AA  EFEA  F01A         	goto	i2l4309
  9734  0035AE                     i2u561_40:
  9735  0035AE                     
  9736                           ; BSR set to: 0
  9737  0035AE  0E44               	movlw	68
  9738  0035B0  19E9               	xorwf	(_dado+1)& (0+255),w,b
  9739  0035B2  A4D8               	btfss	status,2,c
  9740  0035B4  EFDE  F01A         	goto	i2u562_41
  9741  0035B8  EFE0  F01A         	goto	i2u562_40
  9742  0035BC                     i2u562_41:
  9743  0035BC  EFEA  F01A         	goto	i2l4309
  9744  0035C0                     i2u562_40:
  9745  0035C0                     
  9746                           ; BSR set to: 0
  9747  0035C0  0E31               	movlw	49
  9748  0035C2  19EA               	xorwf	(_dado+2)& (0+255),w,b
  9749  0035C4  A4D8               	btfss	status,2,c
  9750  0035C6  EFE7  F01A         	goto	i2u563_41
  9751  0035CA  EFE9  F01A         	goto	i2u563_40
  9752  0035CE                     i2u563_41:
  9753  0035CE  EFEA  F01A         	goto	i2l4309
  9754  0035D2                     i2u563_40:
  9755  0035D2                     
  9756                           ; BSR set to: 0
  9757                           ;EX25.c: 28:             {;EX25.c: 29:                 PORTBbits.RB0 = 1;
  9758  0035D2  8081               	bsf	129,0,c	;volatile
  9759  0035D4                     i2l4309:
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;EX25.c: 33:             if (dado[0] == 'D' && dado[1] == 'L' && dado[2] == '1')
  9763  0035D4  0E44               	movlw	68
  9764  0035D6  19E8               	xorwf	_dado& (0+255),w,b
  9765  0035D8  A4D8               	btfss	status,2,c
  9766  0035DA  EFF1  F01A         	goto	i2u564_41
  9767  0035DE  EFF3  F01A         	goto	i2u564_40
  9768  0035E2                     i2u564_41:
  9769  0035E2  EF06  F01B         	goto	i2l4317
  9770  0035E6                     i2u564_40:
  9771  0035E6                     
  9772                           ; BSR set to: 0
  9773  0035E6  0E4C               	movlw	76
  9774  0035E8  19E9               	xorwf	(_dado+1)& (0+255),w,b
  9775  0035EA  A4D8               	btfss	status,2,c
  9776  0035EC  EFFA  F01A         	goto	i2u565_41
  9777  0035F0  EFFC  F01A         	goto	i2u565_40
  9778  0035F4                     i2u565_41:
  9779  0035F4  EF06  F01B         	goto	i2l4317
  9780  0035F8                     i2u565_40:
  9781  0035F8                     
  9782                           ; BSR set to: 0
  9783  0035F8  0E31               	movlw	49
  9784  0035FA  19EA               	xorwf	(_dado+2)& (0+255),w,b
  9785  0035FC  A4D8               	btfss	status,2,c
  9786  0035FE  EF03  F01B         	goto	i2u566_41
  9787  003602  EF05  F01B         	goto	i2u566_40
  9788  003606                     i2u566_41:
  9789  003606  EF06  F01B         	goto	i2l4317
  9790  00360A                     i2u566_40:
  9791  00360A                     
  9792                           ; BSR set to: 0
  9793                           ;EX25.c: 34:             {;EX25.c: 35:                 PORTBbits.RB0 = 0;
  9794  00360A  9081               	bcf	129,0,c	;volatile
  9795  00360C                     i2l4317:
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;EX25.c: 38:          i = 0;
  9799  00360C  0E00               	movlw	0
  9800  00360E  6E7A               	movwf	_i^0,c
  9801                           
  9802                           ;EX25.c: 39:         }
  9803  003610  EF0B  F01B         	goto	i2l4321
  9804  003614                     i2l4319:
  9805  003614  2A7A               	incf	_i^0,f,c
  9806  003616                     i2l4321:
  9807                           
  9808                           ;EX25.c: 43:     RCIF = 0;
  9809  003616  9A9E               	bcf	3998,5,c	;volatile
  9810  003618  C003  FFDA         	movff	??_trata_serial+2,fsr2h
  9811  00361C  C002  FFD9         	movff	??_trata_serial+1,fsr2l
  9812  003620  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9813  003622  0011               	retfie		f
  9814  003624                     __end_of_trata_serial:
  9815                           	opt callstack 0
  9816                           
  9817 ;; *************** function _USART_le *****************
  9818 ;; Defined at:
  9819 ;;		line 31 in file "../Bibliotecas/usart.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      unsigned char 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9833 ;;      Params:         0       0       0       0       0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0
  9836 ;;      Totals:         0       0       0       0       0       0       0
  9837 ;;Total ram usage:        0 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_trata_serial
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text40
  9847  003F14                     __ptext40:
  9848                           	opt callstack 0
  9849  003F14                     _USART_le:
  9850                           	opt callstack 21
  9851  003F14                     i2l102:
  9852  003F14  AA9E               	btfss	3998,5,c	;volatile
  9853  003F16  EF8F  F01F         	goto	i2u537_41
  9854  003F1A  EF91  F01F         	goto	i2u537_40
  9855  003F1E                     i2u537_41:
  9856  003F1E  EF8A  F01F         	goto	i2l102
  9857  003F22                     i2u537_40:
  9858  003F22                     
  9859                           ;../Bibliotecas/usart.c: 34:     return RCREG;
  9860  003F22  50AE               	movf	174,w,c	;volatile
  9861  003F24  0012               	return		;funcret
  9862  003F26                     __end_of_USART_le:
  9863                           	opt callstack 0
  9864                           
  9865                           	psect	rparam
  9866  0000                     
  9867                           	psect	temp
  9868  00007B                     btemp:
  9869                           	opt callstack 0
  9870  00007B                     	ds	1
  9871  0000                     int$flags	set	btemp
  9872  0000                     wtemp8	set	btemp+1
  9873  0000                     ttemp5	set	btemp+1
  9874  0000                     ttemp6	set	btemp+4
  9875  0000                     ttemp7	set	btemp+8
  9876                           tosu	equ	0xFFF
  9877                           tosh	equ	0xFFE
  9878                           tosl	equ	0xFFD
  9879                           stkptr	equ	0xFFC
  9880                           pclatu	equ	0xFFB
  9881                           pclath	equ	0xFFA
  9882                           pcl	equ	0xFF9
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           indf0	equ	0xFEF
  9890                           postinc0	equ	0xFEE
  9891                           postdec0	equ	0xFED
  9892                           preinc0	equ	0xFEC
  9893                           plusw0	equ	0xFEB
  9894                           fsr0h	equ	0xFEA
  9895                           fsr0l	equ	0xFE9
  9896                           wreg	equ	0xFE8
  9897                           indf1	equ	0xFE7
  9898                           postinc1	equ	0xFE6
  9899                           postdec1	equ	0xFE5
  9900                           preinc1	equ	0xFE4
  9901                           plusw1	equ	0xFE3
  9902                           fsr1h	equ	0xFE2
  9903                           fsr1l	equ	0xFE1
  9904                           bsr	equ	0xFE0
  9905                           indf2	equ	0xFDF
  9906                           postinc2	equ	0xFDE
  9907                           postdec2	equ	0xFDD
  9908                           preinc2	equ	0xFDC
  9909                           plusw2	equ	0xFDB
  9910                           fsr2h	equ	0xFDA
  9911                           fsr2l	equ	0xFD9
  9912                           status	equ	0xFD8


Data Sizes:
    Strings     87
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     122
    BANK0           128     96     122
    BANK1           256     10     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 31
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[31]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 31
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> bufferUSART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferUSART(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1215_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferUSART(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferUSART(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 31
		 -> STR_2(CODE[31]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    string_USART@str	PTR unsigned char  size(2) Largest target is 50
		 -> bufferUSART(BANK1[50]), STR_1(CODE[34]), 


Critical Paths under _main in COMRAM

    _string_USART->_escreve_USART
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    ___aldiv->___lmul

Critical Paths under _trata_serial in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _trata_serial in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _trata_serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _trata_serial in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _trata_serial in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _trata_serial in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _trata_serial in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   52747
                                             94 BANK0      2     2      0
                            ___aldiv
                            ___fldiv
                            ___flmul
                             ___lmul
                           ___xxtofl
                         _init_USART
                            _sprintf
                       _string_USART
 ---------------------------------------------------------------------------------
 (1) _string_USART                                         2     0      2     219
                                              4 COMRAM     2     0      2
                      _escreve_USART
 ---------------------------------------------------------------------------------
 (2) _escreve_USART                                        1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   44812
                                             82 BANK0     12     0     12
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   44290
                                            111 COMRAM     6     0      6
                                             80 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           52    46      6   43688
                                             99 COMRAM    12     6      6
                                             56 BANK0     24    24      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5819
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     865
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29677
                                             87 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1745
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             15 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _trata_serial                                         3     3      0       0
                                              0 COMRAM     3     3      0
                           _USART_le
 ---------------------------------------------------------------------------------
 (10) _USART_le                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _init_USART
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _string_USART
     _escreve_USART

 _trata_serial (ROOT)
   _USART_le

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      8C       7       54.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     60      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7A       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     180      15        0.0%
DATA                 0      0     180       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 07 20:37:56 2019

           ___fldiv@aexp 0043             ___fldiv@bexp 0042                        _i 007A  
           ___fldiv@sign 003B                       l60 2A4C                       l62 2A5A  
                     l63 2B24                       l65 2B32                       l90 3EEE  
                     l93 3F00                       l87 3F12                       l99 3C26  
           ___awdiv@sign 0009      ___wmul@multiplicand 0006              __CFG_BORV$3 000000  
 __size_of_escreve_USART 0016             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l213 0DDE                      l151 3942                      l303 1776  
                    l311 3B60                      l312 3B68                      l146 38C6  
                    l315 3EEA                      l149 3908                      l326 3AF6  
                    l327 3B06                      l247 2836                      l271 12FE  
                    l169 120A                      l257 29FE                      l249 283E  
                    l187 0A46                      l612 325E                      l296 1968  
                    l394 3158                      l546 3880                      l580 331C  
                    l910 250A                      l902 2410                      l574 3A9C  
                    l559 39F2                      l911 24F8                      l760 3550  
                    l585 3362                      l753 3530                      l770 36F2  
                    l843 1B58                      l763 36D2                      l908 2492  
                    l860 1C72                      l852 1E28                      l844 1B46  
                    l933 2252                      l589 3E26                      l845 1B0C  
                    l870 1D30                      l936 20E4                      l929 1EEE  
                    l970 2C46                      l946 2214                      l938 215C  
                    l939 214A                      l973 2DA2                      l869 1D42  
                    l885 3D72                      l984 2D3A                      l977 2CDE  
                    l897 25EC                      l899 244C                      l996 3460  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             _trata_serial 0008  
                    _adc 00F8                      _pad 3882             ___awmod@sign 0009  
                    wreg 000FE8             ___flmul@aexp 001F             ___flmul@bexp 0024  
           ___flmul@sign 001E             ___flmul@temp 0029             ___flmul@prod 0025  
           __CFG_LVP$OFF 000000             ___fltol@exp1 000D             __CFG_WDT$OFF 000000  
                   l1103 3E94                     l1025 2F2A                     l1034 27FE  
                   l1122 3BC8                     l1107 304C                     l1044 3E5E  
                   l1052 3D2C                     l1028 2F32                     l1037 2742  
                   l1117 3BC0                     l1073 37BC                     l1081 3DB6  
                   l1058 3DEE                     l1091 3F26                     l1088 3CDA  
                   l1097 3C82                     l4201 3ACC                     l5001 2114  
                   l4211 3070                     l4203 3AD6                     l5011 2186  
                   l5003 2142                     l4221 30A6                     l4213 3074  
                   l4205 304E                     l5101 398A                     l5021 21FC  
                   l5013 21B0                     l4231 30E8                     l4223 30BC  
                   l4215 3082                     l4207 3052                     l5111 39C6  
                   l5103 3992                     l5023 2218                     l5031 223E  
                   l5007 216C                     l5015 21B4                     l4233 3106  
                   l4225 30C4                     l4241 3128                     l4217 3092  
                   l4209 3060                     l5113 39CC                     l5105 399A  
                   l5033 2242                     l5025 2228                     l5017 21CE  
                   l5009 2178                     l5201 3212                     l4153 3EEE  
                   l4243 3138                     l4235 3116                     l4227 30D0  
                   l4219 3096                     l4251 2C02                     l4171 3F02  
                   l5051 37DC                     l5043 37BE                     l5107 39A8  
                   l5115 39D2                     l5131 3A70                     l5123 39F4  
                   l5027 2236                     l5019 21E2                     l5203 321E  
                   l4155 3EFC                     l4245 3148                     l4237 3118  
                   l4229 30DE                     l4261 2C80                     l4253 2C10  
                   l4173 3F0E                     l5061 3810                     l5053 37EA  
                   l5045 37C2                     l5117 39E2                     l5109 39BE  
                   l5133 3A94                     l5125 3A22                     l5141 328E  
                   l5029 2238                     l4501 1A00                     l5037 3D2E  
                   l5205 322E                     l5301 0782                     l5221 34A8  
                   l5213 3462                     l4181 3BF6                     l4239 3122  
                   l4271 2CD4                     l4263 2C88                     l4255 2C56  
                   l5071 384A                     l5063 3818                     l5055 37F2  
                   l5047 37D0                     l5119 39EA                     l5135 3A9A  
                   l5127 3A32                     l5151 32FC                     l5143 329E  
                   l4503 1A10                     l4511 1A3A                     l5039 3D3E  
                   l5207 323E                     l5303 079E                     l5311 07E8  
                   l5231 3518                     l5223 34B6                     l5215 346E  
                   l4175 3BCA                     l4281 2D4A                     l4273 2D10  
                   l4265 2C94                     l4257 2C6C                     l4249 2BF2  
                   l5081 3870                     l5073 3852                     l5065 3820  
                   l5057 37F6                     l5049 37D8                     l5129 3A60  
                   l5153 330A                     l5145 32CC                     l5161 3DF0  
                   l4601 1C42                     l4521 1A72                     l4513 1A4A  
                   l4505 1A20                     l5209 324E                     l4441 3722  
                   l5401 0B7C                     l5321 0872                     l5313 080E  
                   l5305 07B6                     l5233 352A                     l5225 34C8  
                   l5217 348C                     l5241 365E                     l4177 3BCE  
                   l4195 3A9E                     l4291 2D92                     l4283 2D4E  
                   l4275 2D1C                     l4267 2CC6                     l5251 3CDC  
                   l5083 3878                     l5075 3854                     l5067 382E  
                   l5059 37FE                     l5091 3956                     l5155 335A  
                   l5147 32DC                     l5139 3260                     l5163 3E06  
                   l4603 1C52                     l4531 1A86                     l4523 1A76  
                   l4515 1A5C                     l4507 1A30                     l5171 3170  
                   l4443 3740                     l4435 36F4                     l4451 3D80  
                   l5403 0B90                     l5411 0C86                     l5331 08A8  
                   l5307 07C0                     l5227 34F6                     l5219 3494  
                   l5243 366C                     l5235 3624                     l4179 3BF2  
                   l4197 3AAE                     l4285 2D72                     l4277 2D2A  
                   l4269 2CC8                     l5253 3CE0                     l5077 385A  
                   l5069 3834                     l5093 395E                     l5157 3360  
                   l5149 32EA                     l5165 3E16                     l4621 1CD4  
                   l4613 1CAC                     l4605 1C62                     l4541 1A9A  
                   l4533 1A8A                     l4525 1A7A                     l4517 1A6A  
                   l4509 1A32                     l5181 31C0                     l4701 33EA  
                   l4445 3776                     l4437 3706                     l4453 3D92  
                   l4461 3E70                     l5501 106E                     l5421 0D52  
                   l5413 0CA4                     l5405 0BF4                     l5341 0972  
                   l5317 0844                     l5229 3516                     l5245 369A  
                   l5237 3642                     ?_pad 0014                     l4199 3ABC  
                   l4287 2D82                     l4279 2D48                     l5255 3CF4  
                   l5079 3860                     l5095 3962                     l5087 3944  
                   l4623 1CDC                     l4615 1CB6                     l4607 1C88  
                   l4631 1D00                     l4551 1AAE                     l4543 1A9E  
                   l4535 1A8E                     l4527 1A7E                     l4519 1A6E  
                   l4471 196A                     l5191 31EA                     l5183 31C4  
                   l5175 3184                     l4703 33F6                     l4439 3718  
                   l4455 3D96                     l4463 3E88                     l5511 10A4  
                   l5503 107E                     l5431 0DCA                     l5423 0D62  
                   l5415 0CD8                     l5407 0C4C                     l5351 09F4  
                   l5343 09A6                     l5335 08DE                     l5319 0856  
                   l5271 068A                     l5263 065A                     l5247 36BA  
                   l5239 364A                     l4289 2D90                     l5257 3D22  
                   l5601 2DBC                     l5097 3970                     l5089 3948  
                   l4801 2306                     l4641 1D52                     l4633 1D04  
                   l4625 1CE0                     l4617 1CC4                     l4609 1C98  
                   l4561 1B26                     l4553 1AD8                     l4545 1AA2  
                   l4537 1A92                     l4529 1A82                     l4481 19A6  
                   l4473 1976                     l5193 31F4                     l5185 31D2  
                   l5177 31AE                     l5169 315A                     l4713 3458  
                   l4449 3D74                     l4457 3E60                     l4721 3B6A  
                   l5521 1100                     l5513 10B0                     l5505 1086  
                   l5441 0E80                     l5433 0DD6                     l5425 0D72  
                   l5417 0D0A                     l5409 0C80                     l5353 0A06  
                   l5361 0A52                     l5345 09AE                     l5337 0912  
                   l5329 088E                     l5281 06E0                     l5273 06AE  
                   l5265 0664                     l5249 36CC                     l5259 3D26  
                   l5603 2DC0                     l5099 3978                     l4811 2346  
                   l4803 2308                     l4651 1DB8                     l4643 1D5E  
                   l4635 1D12                     l4627 1CF0                     l4619 1CC6  
                   l4571 1B66                     l4563 1B2A                     l4555 1AF4  
                   l4547 1AA6                     l4539 1A96                     l4491 19D6  
                   l4483 19B6                     l4475 1984                     l5195 31FE  
                   l5179 31B0                     l4707 3402                     l4731 25EE  
                   l4459 3E6C                     l4467 3DB8                     l5531 114A  
                   l5515 10B6                     l5523 1106                     l5507 1094  
                   l5451 0ECA                     l5443 0E92                     l5435 0DFA  
                   l5427 0DA6                     l5419 0D20                     l5371 0A92  
                   l5355 0A18                     l5339 0918                     l5347 09E0  
                   l5291 070E                     l5283 06F2                     l5275 06B8  
                   l5267 0674                     l5621 2E76                     l5613 2E1C  
                   l5605 2DDC                     l4821 2376                     l4813 234E  
                   l4805 2310                     l4661 1E00                     l4653 1DC8  
                   l4645 1D6C                     l4637 1D28                     l4629 1CF2  
                   l4581 1BA8                     l4573 1B76                     l4565 1B38  
                   l4557 1B04                     l4549 1AAA                     l4493 19E8  
                   l4485 19B8                     l4477 1986                     l4709 3414  
                   l4733 260E                     l4717 3C28                     l4725 3BA0  
                   l5541 117A                     l5533 1156                     l5525 1118  
                   l5517 10DC                     l5509 109C                     l5461 0F00  
                   l5453 0EDA                     l5445 0EA0                     l5437 0E5E  
                   l5429 0DB6                     l5381 0AEE                     l5373 0AC8  
                   l5357 0A20                     l5349 09F0                     l5285 06FE  
                   l5293 0714                     l5277 06C0                     l5269 0682  
                   l5701 1332                     l5631 2EFC                     l5615 2E32  
                   l5607 2E12                     l4831 23B4                     l4823 2376  
                   l4815 2352                     l4807 2320                     l4911 1E44  
                   l4663 1E02                     l4655 1DE8                     l4647 1DA6  
                   l4591 1BD6                     l4583 1BB6                     l4567 1B3A  
                   l4559 1B1A                     l4495 19EA                     l4479 1996  
                   l4487 19C0                     l4751 27B6                     l4743 26F6  
                   l4735 2664                     l4719 3C38                     l4727 3BB2  
                   l5551 11D4                     l5535 115E                     l5527 1132  
                   l5519 10F8                     l5471 0F34                     l5463 0F04  
                   l5455 0EDE                     l5439 0E6C                     l5447 0EA8  
                   l5391 0B32                     l5383 0B00                     l5375 0AD0  
                   l5367 0A64                     l5359 0A3A                     l5295 073A  
                   l5287 0706                     l5279 06D2                     l5711 13B2  
                   l5703 1368                     l5633 2F0E                     l5625 2EAC  
                   l5617 2E3A                     l5609 2E16                     l4841 2400  
                   l4833 23C4                     l4809 2336                     l4921 1E7C  
                   l4913 1E46                     l4665 1E08                     l4657 1DEC  
                   l4649 1DA8                     l4593 1BE0                     l4585 1BC2  
                   l4577 1B8A                     l4569 1B44                     l4497 19F0  
                   l4489 19D0                     l4753 27DE                     l4745 2732  
                   l4737 2678                     l4681 38BE                     l4673 3882  
                   l5553 11E4                     l5545 11AE                     l5537 116E  
                   l5529 1138                     l5481 0FD2                     l5473 0F38  
                   l5465 0F0A                     l5457 0EE4                     l5449 0EBC  
                   l5393 0B4A                     l5385 0B0E                     l5369 0A76  
                   l5377 0AD4                     l5289 070A                     l5641 2F5E  
                   l5561 2800                     l5801 1918                     l5721 1438  
                   l5705 1376                     l4763 3EC6                     l5619 2E42  
                   l4851 244A                     l4843 240E                     l4835 23D4  
                   l4827 238A                     l4819 2366                     l4771 2260  
                   l4931 1EA8                     l4923 1E8C                     l4915 1E56  
                   l4907 1E2A                     l4667 1E16                     l4659 1DFA  
                   l4587 1BC6                     l4579 1B9A                     l4595 1BE6  
                   l4499 19FE                     l4755 27EE                     l4739 2686  
                   l4747 2766                     l4691 392A                     l4683 38D2  
                   l4675 3890                     l5555 11EA                     l5547 11C0  
                   l5539 1174                     l5491 1030                     l5459 0EF0  
                   l5467 0F10                     l5475 0F3E                     l5483 0FD6  
                   l5395 0B5C                     l5387 0B12                     l5379 0ADC  
                   l5299 0770                     l5651 2FC4                     l5571 286E  
                   l5563 280E                     l5803 1926                     l5731 14D2  
                   l5723 1446                     l5715 13FA                     l5707 1384  
                   l4765 3EE2                     l5629 2EEA                     l4861 2490  
                   l4853 245C                     l4845 241A                     l4837 23DC  
                   l4829 23A4                     l4781 22A0                     l4773 226E  
                   l4941 1EFE                     l4933 1EB8                     l4925 1E92  
                   l4917 1E66                     l4909 1E36                     l4669 1E18  
                   l4597 1C0C                     l4589 1BD4                     l4749 27A2  
                   l4685 38E6                     l4677 38A4                     l5549 11CC  
                   l5493 1040                     l5485 0FF4                     l5477 0F96  
                   l5469 0F22                     l5389 0B24                     l5397 0B64  
                   l5653 2FD6                     l5645 2F6A                     l5581 2900  
                   l5573 2878                     l5565 2810                     l5741 155E  
                   l5725 146A                     l5709 13A4                     l5717 140C  
                   l5661 1230                     l4759 3E28                     l4871 24F0  
                   l4855 2472                     l4863 24A2                     l4847 2438  
                   l4839 23EC                     l4791 22C6                     l4783 22A2  
                   l4775 2270                     l4951 1F38                     l4943 1F0E  
                   l4935 1EC8                     l4927 1E98                     l4919 1E76  
                   l4599 1C40                     l4695 3364                     l4687 38EA  
                   l4679 38B2                     l5495 1044                     l5487 1010  
                   l5479 0FCA                     l5399 0B6C                     l5655 3014  
                   l5647 2F78                     l5639 2F34                     l5591 29C8  
                   l5575 287E                     l5583 2964                     l5567 282A  
                   l5751 15FA                     l5743 1590                     l5735 151A  
                   l5727 14A4                     l5719 1430                     l5671 1262  
                   l5663 123E                     l5807 1932                     l5831 3B44  
                   l4881 255E                     l4865 24B0                     l4857 2478  
                   l4849 243A                     l4793 22D4                     l4777 2280  
                   l4785 22AA                     l4769 2254                     l4961 1F8A  
                   l4953 1F4E                     l4937 1ED8                     l4929 1EA6  
                   l4697 3384                     l4689 3916                     l5497 1054  
                   l5489 1022                     l5649 2FA8                     l5585 2976  
                   l5593 29D6                     l5577 28F4                     l5569 2866  
                   l5809 1956                     l5761 1692                     l5753 1608  
                   l5745 15A0                     l5729 14C4                     l5737 152C  
                   l5681 1280                     l5673 1274                     l5665 1250  
                   l5825 3B08                     l5841 3CC2                     l5833 3C84  
                   l4891 25C8                     l4875 251A                     l4883 2562  
                   l4867 24B4                     l4859 2482                     l4795 22D6  
                   l4787 22BA                     l4779 2290                     l4971 1FD0  
                   l4963 1F98                     l4955 1F5A                     l4947 1F22  
                   l4939 1EDE                     l4699 33C2                     l5499 1066  
                   l5587 2994                     l5579 28FA                     l5755 1638  
                   l5747 15D2                     l5739 154E                     l5667 1254  
                   l5659 120C                     l5827 3B10                     l5835 3C96  
                   l5851 2A12                     l5597 2DA4                     l4893 25CC  
                   l4885 257C                     l4877 2526                     l4869 24C2  
                   l4797 22E6                     l4789 22C0                     l4981 203E  
                   l4973 1FEA                     l4965 1FA4                     l4957 1F72  
                   l4949 1F2E                     l5589 29AE                     l5765 1700  
                   l5749 15E4                     l5693 1298                     l5685 1286  
                   l5677 127A                     l5669 1260                     l5829 3B1E  
                   l5837 3C9E                     l5861 2A40                     l5853 2A14  
                   l5845 2A00                     l5599 2DB8                     l4895 25DA  
                   l4887 2592                     l4879 2534                     l4799 22F6  
                   l4991 20D4                     l4983 2068                     l4975 1FFA  
                   l4967 1FB4                     l4959 1F7E                     l5791 18C6  
                   l5783 1832                     l5767 1712                     l5775 178A  
                   l5759 1664                     l5695 12EC                     l5839 3CA6  
                   l5871 2AE4                     l5863 2A42                     l5855 2A16  
                   l5847 2A04                     l4897 25E0                     l4889 25AC  
                   l4993 20E2                     l4985 209E                     l4977 2016  
                   l4969 1FC0                     l5793 18EA                     l5785 1868  
                   l5777 17AE                     l5769 1746                     l5697 130C  
                   l5689 128C                     l5881 2B4C                     l5873 2B18  
                   l5865 2A4A                     l5857 2A1A                     l5849 2A10  
                   l4899 25E2                     l4995 20F4                     l4987 20AC  
                   l4979 2022                     l5795 18F8                     l5779 17FA  
                   l5699 130E                     l5883 2BA6                     l5875 2B1A  
                   l5867 2A62                     l5859 2A26                     l4997 2102  
                   l4989 20CA                     l5797 190C                     l5957 12BE  
                   l5885 2BDC                     l5877 2B22                     l5869 2A74  
                   l5959 2E60                     l4999 2106                     l5879 2B3A  
                   STR_1 0601                     STR_2 0623                     STR_3 0642  
                   STR_4 064A                     STR_7 0646                     STR_8 064E  
                   u6000 1C98                     u6001 1C94                     u6010 1CC4  
                   u6011 1CC0                     u6100 1DA6                     u6020 1CD4  
                   u6101 1DA2                     u6021 1CD0                     u6110 1DB8  
                   u6030 1CF0                     u6111 1DB4                     u6031 1CEC  
                   u7000 3A94                     u6120 1DC8                     u6040 1D00  
                   u6200 33A4                     u5400 3C26                     u7001 3A90  
                   u6121 1DC4                     u6041 1CFC                     u5401 3C22  
                   u5410 3ABC                     u7010 328E                     u6130 1DE8  
                   u6050 1D12                     u6210 33C2                     u5411 3AB8  
                   u7011 328A                     u6131 1DE4                     u6051 1D0E  
                   u6211 33BE                     u5420 3AF6                     u5500 2C10  
                   u7020 32CC                     u6140 1DFA                     u6060 1D28  
                   u7100 31E6                     u6220 33EA                     u6300 3B9C  
                   u5421 3AF2                     u5501 2C0C                     u7021 32C8  
                   u6141 1DF6                     u6061 1D24                     u7101 31E2  
                   u6221 33E6                     u6205 339A                     u5430 3060  
                   u5510 2C6C                     u7030 32EA                     u6150 1E16  
                   u6070 1D3E                     u7110 320E                     u6230 3414  
                   u6310 3BB2                     u5350 3EFC                     u5431 305C  
                   u5511 2C68                     u7031 32E6                     u6151 1E12  
                   u6071 1D3A                     u7111 320A                     u6231 3410  
                   u6311 3BAE                     u5351 3EF8                     u5440 3082  
                   u5520 2CC2                     u7040 330A                     u6080 1D52  
                   u7120 322E                     u6400 27A2                     u6320 2636  
                   u6160 3890                     u7200 369A                     u8000 1376  
                   u5441 307E                     u5521 2CBE                     u7041 3306  
                   u6081 1D4E                     u7121 322A                     u6401 279E  
                   u6161 388C                     u7201 3696                     u8001 1372  
                   u5450 30BC                     u5530 2D0C                     u7210 3CF4  
                   u7050 335A                     u6090 1D6C                     u7130 323E  
                   u6250 344E                     u6410 27DE                     u6330 2664  
                   u6170 38B2                     u8010 13F2                     u5451 30B8  
                   u5531 2D08                     u7211 3CF0                     u7051 3356  
                   u6091 1D68                     u7131 323A                     u6251 3448  
                   u6411 27DA                     u6331 2660                     u6171 38AE  
                   u8011 13EC                     u5460 30DE                     u5540 2D2A  
                   u6420 3E58                     u7220 3D22                     u6500 2336  
                   u7060 3E06                     u6260 3450                     u6340 2686  
                   u5700 3718                     u6180 3908                     u7300 0782  
                   u8100 15A0                     u8020 13F4                     u5380 3BEE  
                   _RCIF 007CF5                     u5461 30DA                     u5541 2D26  
                   u6421 3E52                     u7221 3D1E                     u6501 2332  
                   u7061 3E02                     u6245 3426                     u6341 2682  
                   u6325 262C                     u5701 3714                     u6181 3904  
                   u7301 077E                     u7141 3468                     u8101 159C  
                   u5470 3106                     u5550 2D3A                     u6430 3E5A  
                   u6510 2376                     u7070 3170                     u5710 3740  
                   u6190 3916                     u6270 3C70                     u7310 080E  
                   u7230 0682                     u7150 348C                     u8110 15E4  
                   u8030 140C                     u5390 3C16                     u5471 3102  
                   u5551 2D36                     u6511 2372                     u7071 316C  
                   u5711 373C                     u6191 3912                     u7311 080A  
                   u7231 067E                     u7151 3488                     u8111 15E0  
                   u8031 1408                     u5480 3138                     u5560 2D48  
                   u6600 24F0                     u6520 23EC                     u6440 226E  
                   u5800 19E8                     u7080 31A4                     u6360 26F2  
                   u5720 3776                     u6280 3C82                     u7400 0A3A  
                   u7320 083C                     u7240 06D2                     u7160 34B6  
                   u8120 1692                     u8040 1430                     u8200 2A5A  
                   u5481 3134                     u5561 2D44                     u6601 24EC  
                   u6521 23E8                     u6441 226A                     u5801 19E4  
                   u6361 26EE                     u5721 3772                     u6281 3C7E  
                   u7401 0A36                     u7321 0836                     u7241 06CE  
                   u7161 34B2                     u8121 168E                     u8041 142C  
                   u8201 2A56                     u5570 2D82                     u5490 2C02  
                   u6610 2506                     u6530 240E                     u6450 2280  
                   u5810 19FE                     u7090 31D2                     u6370 2716  
                   u5730 3DB6                     u6290 3B9A                     u7410 0A60  
                   u7330 083E                     u7250 06E0                     u7170 34F6  
                   u8130 16F8                     u8050 146A                     u8210 2B32  
                   u5571 2D7E                     u5491 2BFE                     u6611 2502  
                   u6531 240A                     u6451 227C                     u5811 19FA  
                   u7091 31CE                     u6355 269A                     u5731 3DB2  
                   u6291 3B94                     u7411 0A5C                     u7251 06DC  
                   u7171 34F2                     u8131 16F2                     u8051 1466  
                   u5387 3BE4                     u8211 2B2E                     u5580 2D90  
                   u6620 251A                     u6540 2438                     u6460 2290  
                   u6700 1EA6                     u5900 1B38                     u5820 1A10  
                   u6380 2732                     u6356 26A4                     u5740 3E88  
                   u7500 0B5C                     u7420 0A76                     u7340 0856  
                   u7260 06F2                     u7180 3642                     u8140 16FA  
                   u8060 1512                     u5581 2D8C                     u6621 2516  
                   u6541 2434                     u6461 228C                     u6701 1EA2  
                   u5901 1B34                     u5821 1A0C                     u7085 319A  
                   u6381 272E                     u6357 26B4                     u5741 3E84  
                   u6277 3C66                     u7501 0B58                     u7421 0A72  
                   u7341 0852                     u7261 06EE                     u7181 363E  
                   u8061 150C                     u5397 3C0C                     i2l54 3618  
                   u6630 2534                     u6550 245C                     u6470 22D4  
                   u6710 1EB8                     u5910 1B58                     u5830 1A20  
                   u6390 2786                     u5750 3DE8                     u7510 0CA4  
                   u7430 0A92                     u7350 08DA                     u7270 073A  
                   u7190 366C                     u8150 1712                     u8070 1514  
                   u6631 2530                     u6551 2458                     u6471 22D0  
                   u6711 1EB4                     u5911 1B54                     u5831 1A1C  
                   u6375 270C                     u5751 3DE2                     u7511 0CA0  
                   u7431 0A8E                     u7351 08D6                     u7271 0736  
                   u7191 3668                     u8151 170E                     u6640 257C  
                   u6560 2472                     u6480 22E6                     u6800 2158  
                   u6720 1EC8                     u5920 1B66                     u5840 1A5C  
                   u5760 3DEA                     u7600 0EBC                     u7520 0D0A  
                   u7440 0AC8                     u7360 096E                     u7280 0768  
                   u8160 17AE                     u8080 152C                     u6641 2578  
                   u6561 246E                     u6481 22E2                     u6801 2154  
                   u6721 1EC4                     u5921 1B62                     u5841 1A58  
                   u7601 0EB8                     u7521 0D06                     u7441 0AC4  
                   u7361 096A                     u7281 0762                     u8161 17AA  
                   u8081 1528                     u6650 25AC                     u6570 2490  
                   u6490 22F6                     u6810 216C                     u6730 1EFE  
                   u5930 1B76                     u5850 1A6A                     u5770 1984  
                   u5690 3706                     u7610 0ECA                     u7530 0D52  
                   u7450 0AEE                     u7370 09E0                     u7290 076A  
                   u8170 1868                     u8090 155E                     u6651 25A8  
                   u6571 248C                     u6491 22F2                     u6811 2168  
                   u6731 1EFA                     u5931 1B72                     u5851 1A66  
                   u5771 1980                     u6395 277C                     u5691 3702  
                   u7611 0EC6                     u7531 0D4E                     u7451 0AEA  
                   u7371 09DC                     u8171 1864                     u8091 155A  
                   u8227 2A32                     u6900 384A                     u6660 25DA  
                   u6580 24B0                     u6820 2186                     u6740 1F0E  
                   u5940 1BA8                     u5860 1AD8                     u5780 1996  
                   u7700 1132                     u7620 0F22                     u7540 0D62  
                   u7460 0B00                     u7380 0A06                     u8180 18EA  
                   u6901 3846                     u6661 25D6                     u6581 24AC  
                   u6821 2182                     u6741 1F0A                     u5941 1BA4  
                   u5861 1AD4                     u5781 1992                     u7701 112E  
                   u7621 0F1E                     u7541 0D5E                     u7461 0AFC  
                   u7381 0A02                     u8181 18E6                     u8237 2A44  
                   u6910 3870                     u6590 24C2                     u6830 21CE  
                   u6750 2088                     u6670 1E44                     u5950 1BB6  
                   u5870 1AF0                     u5790 19A6                     u7710 114A  
                   u7630 0FF4                     u7550 0DCA                     u7470 0B0E  
                   u7390 0A18                     u8190 3B60                     u6911 386C  
                   u6591 24BE                     u6831 21CA                     u6671 1E40  
                   u5951 1BB2                     u5871 1AEA                     u5791 19A2  
                   u7711 1146                     u7631 0FF0                     u7551 0DC6  
                   u7471 0B0A                     u7391 0A14                     u8191 3B5C  
                   u8247 2B1C                     u6920 3956                     u6840 21FC  
                   u6760 20E2                     u6680 1E56                     u5960 1BD4  
                   u5880 1AF2                     u7720 11A8                     u7640 1010  
                   u7560 0E6C                     u7480 0B24                     u7800 29C8  
                   u6921 3952                     u6841 21F8                     u6761 20DE  
                   u6681 1E52                     u5961 1BD0                     u7721 11A2  
                   u7641 100C                     u7561 0E68                     u7481 0B20  
                   u7801 29C4                     u6930 3970                     u6850 2236  
                   u6770 2102                     u6690 1E66                     u5970 1C0C  
                   u5890 1B1A                     u7730 11AA                     u7650 1022  
                   u7570 0E80                     u7490 0B32                     u7810 29D6  
                   u6931 396C                     u6851 2232                     u6771 20FE  
                   u6755 207E                     u6691 1E62                     u5971 1C08  
                   u5891 1B16                     u7651 101E                     u7571 0E7C  
                   u7491 0B2E                     u7811 29D2                     u7820 2DDC  
                   u6860 37D0                     u6940 398A                     u6780 2114  
                   u5980 1C52                     u7740 11C0                     u7660 1030  
                   u7580 0E92                     u7900 2F98                     u7821 2DD8  
                   u6861 37CC                     u6941 3986                     u6781 2110  
                   u5981 1C4E                     u7741 11BC                     u7661 102C  
                   u7581 0E8E                     u7830 2E12                     u6870 37EA  
                   u6950 39A8                     u6790 2142                     u5990 1C88  
                   u7670 1066                     u7590 0EA0                     u7910 2FA8  
                   u7750 280E                     u7831 2E0E                     u6871 37E6  
                   u6951 39A4                     u6791 213E                     u5991 1C84  
                   u7671 1062                     u7591 0E9C                     u7911 2FA4  
                   u7751 280A                     u7840 2E2E                     u6880 3810  
                   u6960 39BE                     u7680 1094                     u7920 2FC4  
                   u7760 282A                     u7841 2E2A                     u6881 380C  
                   u6961 39BA                     u7681 1090                     u7921 2FC0  
                   u7761 2826                     u7850 2EE4                     u6890 382E  
                   u6970 39E2                     u7690 1118                     u7930 2FD6  
                   u7770 2976                     u7851 2EDE                     u6891 382A  
                   u6971 39DE                     u7691 1114                     u7931 2FD2  
                   u7907 2F8E                     u7771 2972                     u7860 2EE6  
                   u6980 3A22                     u7940 3014                     u7780 2994  
                   u6981 3A1E                     u7941 3010                     u7781 2990  
                   u7870 2EFC                     u6990 3A60                     u7950 3034  
                   u7790 29AE                     u7871 2EF8                     u6991 3A5C  
                   u7791 29AA                     u7880 2F0E                     u7960 1230  
                   u7881 2F0A                     u7945 3004                     u7961 122C  
                   u7890 2F5E                     u7970 12FE                     u7947 2FFA  
                   u7891 2F5A                     u7971 12FA                     u7980 130C  
                   u7957 302A                     u7981 1308                     u7990 1332  
                   u7991 132E                     _TRMT 007D61             __CFG_PWRT$ON 000000  
                   _dado 00E8                     _dbuf 0100                     _atoi 2DA4  
                   _main 2A00                     _prec 0076                     _temp 00EC  
                   _nout 00F4                     pad@i 001B                     pad@p 0018  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001D  
                   fsr2l 000FD9                     btemp 007B                     _utoa 2800  
                   _volt 00F0            ___fpclassifyf 3364                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 003C             _tolower$1287 0010            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 001A    __size_of_string_USART 005E  
          ___fltol@sign1 000C          __end_of___aldiv 315A                    ?_atoi 000B  
        __end_of___fladd 1E2A                    ?_main 0001          __end_of___fldiv 25EE  
        __end_of___awdiv 3882          __end_of___flneg 3E28                    STR_11 0652  
                  STR_13 0652                    STR_16 0655                    STR_18 0655  
        __end_of___awmod 39F4          __end_of___flmul 2254          __end_of___flsub 3D74  
        __end_of___fltol 3260                    ?_utoa 001F          __end_of___lodiv 3552  
        ___awdiv@divisor 0006          __end_of___lomod 36F4                    i2l102 3F14  
                  i2l105 3F24          ___awdiv@counter 0008                    _RCREG 000FAE  
           vfpfcnvrt@fmt 0066             vfpfcnvrt@llu 00C0                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0008            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 0078                    _fputc 36F4                    _fputs 3D74  
        __end_of_isdigit 3E60                    atoi@n 0018                    pad@fp 0014  
                  atoi@s 000B                    _width 00F6                    _putch 3F26  
       __end_of_USART_le 3F26          __end_of_isspace 3D2E           __CFG_BOREN$OFF 000000  
        __end_of_isupper 3DF0                    tablat 000FF5            _escreve_USART 3EEC  
                  ttemp5 007C                    ttemp6 007F                    ttemp7 0083  
                  utoa@d 0021                    utoa@i 003D                    utoa@n 0035  
                  utoa@p 0031                    utoa@w 0033                    status 000FD8  
                  wtemp8 007C          __end_of_sprintf 3CDC           ?___fpclassifyf 0004  
        __end_of_tolower 3BCA          __end_of_strncmp 304E         ___lodiv@dividend 0004  
        __initialization 3E96             _string_USART 3BCA             __end_of_atoi 2F34  
           __end_of_main 2BF0             __end_of_utoa 2A00                   ??_atoi 000D  
                 ??_main 00DE                   ??_utoa 0029            __activetblptr 000002  
       ___lodiv@quotient 0014                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0004                   ?_fputs 000D  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0004  
                 ?_putch 0001           ?_escreve_USART 0001                   i2l4301 359A  
                 i2l4311 35E6                   i2l4303 35AE                   i2l4313 35F8  
                 i2l4305 35C0                   i2l4321 3616                   i2l4315 360A  
                 i2l4307 35D2                   i2l4165 3F14                   i2l4317 360C  
                 i2l4309 35D4                   i2l4167 3F22                   i2l4319 3614  
                 i2l4295 355C                   i2l4297 356A                   i2l4299 357C  
          vfpfcnvrt@done 00B8         __end_of___xxtofl 2DA4           __CFG_XINST$OFF 000000  
           vfprintf@cfmt 00D0                   ___flge 3260                   ___fleq 39F4  
                 ___lmul 3A9E                ??___aldiv 0018                ??___fladd 000C  
                 ___wmul 3EC6                ??___fldiv 0033                ??___awdiv 0008  
              ??___flneg 0008           __CFG_STVREN$ON 000000                ??___awmod 0008  
              ??___flmul 001A                ??___flsub 0033                ??___fltol 0008  
              ??___lodiv 0014                ??___lomod 0014                   _efgtoa 065A  
                 _floorf 25EE                   clear_0 3E9C                   clear_1 3EA8  
       ___awdiv@quotient 000A          ___awmod@divisor 0006          ___awmod@counter 0008  
                 pad@buf 0016                   _strcpy 3C28                   _strlen 3E60  
        string_USART@str 0005                   fputc@c 0004                   fputs@c 0011  
                 fputs@i 0012                   fputs@s 000D                ??_isdigit 0006  
        ___fpclassifyf@e 000C          ___fpclassifyf@u 000E          ___fpclassifyf@x 0004  
           __mediumconst 0000                ??_isspace 0006                   tblptrh 000FF7  
              ??_isupper 0006                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 3B6A                   utoa@fp 001F  
              ??_sprintf 0076                ??_tolower 000C                ??_strncmp 000A  
             ___flge@ff1 002B               ___flge@ff2 002F          ??___fpclassifyf 0008  
           ___xxtofl@arg 000E             ___xxtofl@exp 000D             ___xxtofl@val 0004  
             ___fleq@ff1 0004               ___fleq@ff2 0008               __accesstop 0080  
__end_of__initialization 3EB8          __CFG_PBADEN$OFF 000000               ___flneg@f1 0004  
          ___rparam_used 000001               ___fltol@f1 0004           __pcstackCOMRAM 0001  
          __end_of_fputc 37BE            __end_of_fputs 3DB8            __end_of_putch 3F28  
              ?_USART_le 0001          ??_escreve_USART 0004                  ??_fputc 0008  
                ??_fputs 0011                  ??_putch 0004               __pbssBANK0 00E0  
             __pbssBANK1 0100               _efgtoa$662 0088               _efgtoa$656 0084  
             _efgtoa$657 0086               _efgtoa$666 008A               _efgtoa$667 008C  
             _efgtoa$668 008E                  ?___flge 002B                  ?___fleq 0004  
                ?___lmul 0004                  ?___wmul 0004                  ?_efgtoa 0058  
                ?_floorf 0044           ___lmul@product 000C               ??_USART_le 0001  
                ?_strcpy 0004                  ?_strlen 0004                ?___xxtofl 0004  
     __size_of_vfpfcnvrt 075E         ___lomod@dividend 0004                  __Hparam 0000  
                __Lparam 0000               _init_USART 3F02                  ___aldiv 304E  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 196A  
                ___fldiv 2254                  ___awdiv 37BE                  ___flneg 3DF0  
        __size_of___lmul 006A                  ___awmod 3944                  ___flmul 1E2A  
                ___flsub 3D2E                  ___fltol 315A          __size_of___wmul 0026  
                ___lodiv 3462                  ___lomod 3624                ?_vfprintf 0070  
           __psmallconst 0600          __size_of_efgtoa 0BB2          __size_of_floorf 0212  
                __pcinit 3E96                  __ramtop 0600                  __ptext0 2A00  
                __ptext1 3BCA                  __ptext2 3EEC                  __ptext3 3C84  
                __ptext4 3B08                  __ptext5 120C                  __ptext6 2800  
                __ptext7 3624                  __ptext8 3462                  __ptext9 2F34  
        __size_of_strcpy 005C          __size_of_strlen 0036             __size_of_pad 00C2  
                _isdigit 3E28               ??___xxtofl 0008         ___awmod@dividend 0004  
       ___aldiv@dividend 0010                  _isspace 3CDC                  _isupper 3DB8  
                efgtoa@c 005E                  efgtoa@d 0098                  efgtoa@e 00B0  
                efgtoa@f 005A                  efgtoa@g 00AC                  efgtoa@h 00A2  
                efgtoa@i 00AA                  efgtoa@l 00A6                  efgtoa@m 0094  
                efgtoa@n 00B2                  efgtoa@p 009C                  efgtoa@t 0090  
                efgtoa@u 00B4                  efgtoa@w 009F                  atoi@neg 0011  
                _sprintf 3C84                  _tolower 3B6A                  _strncmp 2F34  
         __pintcode_body 3552     end_of_initialization 3EB8                  floorf@e 0052  
                floorf@m 004E                  floorf@u 0054                  floorf@x 0044  
                fputc@fp 0006            __Lmediumconst 0000                  int_func 3552  
                fputs@fp 000F        __end_of_vfpfcnvrt 196A               efgtoa@mode 00A1  
             efgtoa@sign 009A                _RCSTAbits 000FAB         ___aldiv@quotient 001A  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0076                  strcpy@d 000C  
                strlen@a 0006                  strcpy@s 000A                  strlen@s 0004  
              _PORTBbits 000F81              ___fladd@grs 0013            ___xxtofl@sign 000C  
              _TRISBbits 000F93              ___fldiv@grs 003E              ___fldiv@rem 0037  
            ___flmul@grs 0020                _TXSTAbits 000FAC              ?_init_USART 0001  
         __end_of___flge 3364           __end_of___fleq 3A9E           __end_of___lmul 3B08  
            vfpfcnvrt@ap 0068              vfpfcnvrt@ct 00CC              vfpfcnvrt@fp 0064  
         __end_of___wmul 3EEC           __end_of_efgtoa 120C              _BAUDCTLbits 000FB8  
         __end_of_floorf 2800               floorf@F524 00E0            ?_trata_serial 0001  
      __size_of_USART_le 0012           __end_of_strcpy 3C84           __end_of_strlen 3E96  
    start_initialization 3E96          ___lodiv@divisor 000C          ___lodiv@counter 001C  
            __end_of_pad 3944    __end_of___fpclassifyf 3462              vfprintf@fmt 0072  
               ??___flge 0033                 ??___fleq 000C                 ??___lmul 000C  
               ??___wmul 0008                 ??_efgtoa 005F                 ??_floorf 0048  
       __CFG_LPT1OSC$OFF 000000           ??_trata_serial 0001                 ??_strcpy 0008  
               ??_strlen 0006                ___fladd@a 0008                ___fladd@b 0004  
              ___fldiv@a 002F                ___fldiv@b 002B                ___flmul@a 0016  
              ___flmul@b 0012              __pbssCOMRAM 0076                ___flsub@a 002F  
              ___flsub@b 002B            __pcstackBANK0 0080            __pcstackBANK1 0182  
      __size_of___xxtofl 01B4      __size_of_init_USART 0012    __end_of_escreve_USART 3F02  
              _atoi$1171 0013                _atoi$1172 0017                _atoi$1173 0015  
          ?_string_USART 0005        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
               ?___aldiv 0010                 ?___fladd 0004                 ?___fldiv 002B  
               ?___awdiv 0004                 ?___flneg 0004                 ?___awmod 0004  
               ?___flmul 0012                 ?___flsub 002B                 ?___fltol 0004  
               ?___lodiv 0004                 ?___lomod 0004        __size_of_vfprintf 0062  
        ___lomod@divisor 000C              __smallconst 0600          ___lomod@counter 0014  
               ?_isdigit 0004                 ?_isspace 0004                 ?_isupper 0004  
               ?_sprintf 00D2                 ?_tolower 000A           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0004           __size_of_putch 0002  
        ___aldiv@divisor 0014          ___aldiv@counter 0018           ___wmul@product 0008  
            _bufferUSART 0150                 _PIE1bits 000F9D           ??_string_USART 0007  
               i2u560_40 359A                 i2u560_41 3596                 i2u537_40 3F22  
               i2u561_40 35AE                 i2u537_41 3F1E                 i2u561_41 35AA  
               i2u562_40 35C0                 i2u562_41 35BC                 i2u563_40 35D2  
               i2u563_41 35CE                 i2u564_40 35E6                 i2u564_41 35E2  
               i2u565_40 35F8                 i2u565_41 35F4                 i2u566_40 360A  
               i2u566_41 3606                 i2u559_40 356A                 i2u559_41 3566  
       __CFG_WDTPS$32768 000000                _vfpfcnvrt 120C                 _USART_le 3F14  
             _ADCON0bits 000FC2        ___wmul@multiplier 0004             _isspace$1202 000A  
             vfpfcnvrt@c 00CF               vfpfcnvrt@f 00C8        ___lmul@multiplier 0004  
   __end_of_trata_serial 3624                 __Hrparam 0000             ??_init_USART 0004  
             vfprintf@ap 0074                 __Lrparam 0000               vfprintf@fp 0070  
       __size_of___aldiv 010C         __size_of___fladd 04C0         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
       __size_of___lodiv 00F0         __size_of___lomod 00D0               ?_vfpfcnvrt 0064  
     ___fpclassifyf@F463 00E4               sprintf@fmt 00D4                 ___xxtofl 2BF0  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 065A  
               __ptext11 3B6A                 __ptext20 3364                 __ptext12 3DB8  
               __ptext21 315A                 __ptext13 3C28                 __ptext30 37BE  
               __ptext22 3D2E                 __ptext14 3882                 __ptext31 2DA4  
               __ptext23 196A                 __ptext15 3E60                 __ptext40 3F14  
               __ptext32 3CDC                 __ptext24 3DF0                 __ptext16 3D74  
               __ptext33 3E28                 __ptext25 1E2A                 __ptext17 36F4  
               __ptext34 3EC6                 __ptext26 3260                 __ptext18 3F26  
               __ptext35 3F02                 __ptext27 39F4                 __ptext19 25EE  
               __ptext36 2BF0                 __ptext28 2254                 __ptext37 3A9E  
               __ptext29 3944                 __ptext38 304E         __size_of_isupper 0038  
     __end_of_init_USART 3F14         __size_of_sprintf 0058         __size_of_tolower 0060  
             strcpy@dest 0004         __size_of_strncmp 011A            __size_of_atoi 0190  
          __size_of_main 01F0            __size_of_utoa 0200                 efgtoa@fp 0058  
               efgtoa@ne 0096                 efgtoa@pp 0092                 efgtoa@ou 0080  
               int$flags 007B                 _vfprintf 3B08               _INTCONbits 000FF2  
   __end_of_string_USART 3C28                 isdigit@c 0004                 intlevel2 0000  
              sprintf@ap 0184                 isspace@c 0004                strcpy@src 0006  
               isupper@c 0004                strncmp@_l 0004                strncmp@_r 0006  
            efgtoa@nmode 009E              ??_vfpfcnvrt 006A            _vfpfcnvrt$690 00BC  
          _vfpfcnvrt$694 00BE            _vfpfcnvrt$689 00BA                 sprintf@f 0186  
               tolower@c 000A                 sprintf@s 00D2   __size_of___fpclassifyf 00FE  
               strncmp@l 000B                 strncmp@n 0008                 strncmp@r 000D  
           ___aldiv@sign 0019    __size_of_trata_serial 361C            ___fladd@signs 0010  
           ___fladd@aexp 0011             ___fladd@bexp 0012           escreve_USART@c 0004  
