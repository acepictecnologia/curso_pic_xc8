

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 19 16:19:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TMR0	set	4054
    50  0000                     _PORTAbits	set	3968
    51  0000                     _PORTCbits	set	3970
    52  0000                     _PORTBbits	set	3969
    53  0000                     _T0CON	set	4053
    54  0000                     _INTCON	set	4082
    55  0000                     _ADCON1	set	4033
    56  0000                     _PORTB	set	3969
    57  0000                     _TRISCbits	set	3988
    58  0000                     _TRISAbits	set	3986
    59  0000                     _TRISB	set	3987
    60  0000                     _TMR0IF	set	32658
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  0000BC                     __pcinit:
    66                           	opt callstack 0
    67  0000BC                     start_initialization:
    68                           	opt callstack 0
    69  0000BC                     __initialization:
    70                           	opt callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (6 bytes)
    73  0000BC  6A06               	clrf	(__pbssCOMRAM+5)& (0+255),c
    74  0000BE  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    75  0000C0  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    76  0000C2  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    77  0000C4  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    78  0000C6  6A01               	clrf	__pbssCOMRAM& (0+255),c
    79  0000C8                     end_of_initialization:
    80                           	opt callstack 0
    81  0000C8                     __end_of__initialization:
    82                           	opt callstack 0
    83  0000C8  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    84  0000CA  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    85  0000CC  0100               	movlb	0
    86  0000CE  EF34  F000         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89  000001                     __pbssCOMRAM:
    90                           	opt callstack 0
    91  000001                     _T3SB3:
    92                           	opt callstack 0
    93  000001                     	ds	1
    94  000002                     _T3SB2:
    95                           	opt callstack 0
    96  000002                     	ds	1
    97  000003                     _T3SB1:
    98                           	opt callstack 0
    99  000003                     	ds	1
   100  000004                     _TL3:
   101                           	opt callstack 0
   102  000004                     	ds	1
   103  000005                     _TL2:
   104                           	opt callstack 0
   105  000005                     	ds	1
   106  000006                     _TL1:
   107                           	opt callstack 0
   108  000006                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111  000000                     __pcstackCOMRAM:
   112                           	opt callstack 0
   113  000000                     
   114                           ; 1 bytes @ 0x0
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 51 in file "EX13.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;		None
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   134 ;;      Params:         0       0       0       0       0       0       0
   135 ;;      Locals:         0       0       0       0       0       0       0
   136 ;;      Temps:          0       0       0       0       0       0       0
   137 ;;      Totals:         0       0       0       0       0       0       0
   138 ;;Total ram usage:        0 bytes
   139 ;; Hardware stack levels required when called:    1
   140 ;; This function calls:
   141 ;;		Nothing
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  000068                     __ptext0:
   149                           	opt callstack 0
   150  000068                     _main:
   151                           	opt callstack 30
   152                           
   153                           ;EX13.c: 53:     TRISB = 0B00000001;
   154                           
   155                           ;incstack = 0
   156  000068  0E01               	movlw	1
   157  00006A  6E93               	movwf	3987,c	;volatile
   158                           
   159                           ;EX13.c: 54:     TRISAbits.TRISA4 = 1;
   160  00006C  8892               	bsf	3986,4,c	;volatile
   161                           
   162                           ;EX13.c: 55:     TRISCbits.TRISC0 = 1;
   163  00006E  8094               	bsf	3988,0,c	;volatile
   164                           
   165                           ;EX13.c: 57:     PORTB = 0b00000000;
   166  000070  0E00               	movlw	0
   167  000072  6E81               	movwf	3969,c	;volatile
   168                           
   169                           ;EX13.c: 59:     ADCON1 = 0x0F;
   170  000074  0E0F               	movlw	15
   171  000076  6EC1               	movwf	4033,c	;volatile
   172                           
   173                           ;EX13.c: 61:     INTCON = 0b10100000;
   174  000078  0EA0               	movlw	160
   175  00007A  6EF2               	movwf	4082,c	;volatile
   176                           
   177                           ;EX13.c: 71:     T0CON = 0b11000111;
   178  00007C  0EC7               	movlw	199
   179  00007E  6ED5               	movwf	4053,c	;volatile
   180                           
   181                           ;EX13.c: 79:     TMR0 = 61;
   182  000080  0E00               	movlw	0
   183  000082  6ED7               	movwf	4055,c	;volatile
   184  000084  0E3D               	movlw	61
   185  000086  6ED6               	movwf	4054,c	;volatile
   186  000088                     l768:
   187                           
   188                           ;EX13.c: 82:     {;EX13.c: 83:         if (PORTBbits.RB0)
   189  000088  A081               	btfss	3969,0,c	;volatile
   190  00008A  D003               	goto	l774
   191                           
   192                           ;EX13.c: 84:         {;EX13.c: 85:             PORTBbits.RB5 = 1;
   193  00008C  8A81               	bsf	3969,5,c	;volatile
   194                           
   195                           ;EX13.c: 86:             TL1 = 1;
   196  00008E  0E01               	movlw	1
   197  000090  6E06               	movwf	_TL1,c
   198  000092                     l774:
   199                           
   200                           ;EX13.c: 89:         if (PORTCbits.RC0)
   201  000092  A082               	btfss	3970,0,c	;volatile
   202  000094  D003               	goto	l780
   203                           
   204                           ;EX13.c: 90:         {;EX13.c: 91:             PORTBbits.RB6 = 1;
   205  000096  8C81               	bsf	3969,6,c	;volatile
   206                           
   207                           ;EX13.c: 92:             TL2 = 1;
   208  000098  0E01               	movlw	1
   209  00009A  6E05               	movwf	_TL2,c
   210  00009C                     l780:
   211                           
   212                           ;EX13.c: 95:         if (PORTAbits.RA4)
   213  00009C  A880               	btfss	3968,4,c	;volatile
   214  00009E  D003               	goto	l56
   215                           
   216                           ;EX13.c: 96:         {;EX13.c: 97:             PORTBbits.RB7 = 1;
   217  0000A0  8E81               	bsf	3969,7,c	;volatile
   218                           
   219                           ;EX13.c: 98:             TL3 = 1;
   220  0000A2  0E01               	movlw	1
   221  0000A4  6E04               	movwf	_TL3,c
   222  0000A6                     l56:
   223                           
   224                           ;EX13.c: 101:         if (!TL1) PORTBbits.RB5 = 0;
   225  0000A6  5006               	movf	_TL1,w,c
   226  0000A8  B4D8               	btfsc	status,2,c
   227  0000AA  9A81               	bcf	3969,5,c	;volatile
   228                           
   229                           ;EX13.c: 102:         if (!TL2) PORTBbits.RB6 = 0;
   230  0000AC  5005               	movf	_TL2,w,c
   231  0000AE  B4D8               	btfsc	status,2,c
   232  0000B0  9C81               	bcf	3969,6,c	;volatile
   233                           
   234                           ;EX13.c: 103:         if (!TL3) PORTBbits.RB7 = 0;
   235  0000B2  5004               	movf	_TL3,w,c
   236  0000B4  A4D8               	btfss	status,2,c
   237  0000B6  D7E8               	goto	l768
   238  0000B8  9E81               	bcf	3969,7,c	;volatile
   239  0000BA  D7E6               	goto	l768
   240  0000BC                     __end_of_main:
   241                           	opt callstack 0
   242                           
   243 ;; *************** function _int_TMR0 *****************
   244 ;; Defined at:
   245 ;;		line 10 in file "EX13.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   259 ;;      Params:         0       0       0       0       0       0       0
   260 ;;      Locals:         0       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0
   262 ;;      Totals:         0       0       0       0       0       0       0
   263 ;;Total ram usage:        0 bytes
   264 ;; Hardware stack levels used:    1
   265 ;; This function calls:
   266 ;;		Nothing
   267 ;; This function is called by:
   268 ;;		Interrupt level 2
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	intcode
   273  000008                     __pintcode:
   274                           	opt callstack 0
   275  000008                     _int_TMR0:
   276                           	opt callstack 30
   277                           
   278                           ;incstack = 0
   279  000008  8207               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   280  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   281                           
   282                           	psect	intcode_body
   283  000012                     __pintcode_body:
   284                           	opt callstack 30
   285  000012                     int_func:
   286                           	opt callstack 30
   287  000012  0006               	pop		; remove dummy address from shadow register refresh
   288                           
   289                           ;EX13.c: 12:     if (TMR0IF)
   290  000014  A4F2               	btfss	4082,2,c	;volatile
   291  000016  D021               	goto	i2l41
   292                           
   293                           ;EX13.c: 13:     {;EX13.c: 14:        if (TL1)
   294  000018  5006               	movf	_TL1,w,c
   295  00001A  B4D8               	btfsc	status,2,c
   296  00001C  D008               	goto	i2l42
   297                           
   298                           ;EX13.c: 15:        {;EX13.c: 16:            T3SB1++;
   299  00001E  2A03               	incf	_T3SB1,f,c
   300                           
   301                           ;EX13.c: 18:            if (T3SB1 >= 120)
   302  000020  0E77               	movlw	119
   303  000022  6403               	cpfsgt	_T3SB1,c
   304  000024  D004               	goto	i2l42
   305                           
   306                           ;EX13.c: 19:            {;EX13.c: 20:                TL1 = 0;
   307  000026  0E00               	movlw	0
   308  000028  6E06               	movwf	_TL1,c
   309                           
   310                           ;EX13.c: 21:                T3SB1 = 0;
   311  00002A  0E00               	movlw	0
   312  00002C  6E03               	movwf	_T3SB1,c
   313  00002E                     i2l42:
   314                           
   315                           ;EX13.c: 25:        if (TL2)
   316  00002E  5005               	movf	_TL2,w,c
   317  000030  B4D8               	btfsc	status,2,c
   318  000032  D008               	goto	i2l44
   319                           
   320                           ;EX13.c: 26:        {;EX13.c: 27:            T3SB2++;
   321  000034  2A02               	incf	_T3SB2,f,c
   322                           
   323                           ;EX13.c: 29:            if (T3SB2 >= 120)
   324  000036  0E77               	movlw	119
   325  000038  6402               	cpfsgt	_T3SB2,c
   326  00003A  D004               	goto	i2l44
   327                           
   328                           ;EX13.c: 30:            {;EX13.c: 31:                TL2 = 0;
   329  00003C  0E00               	movlw	0
   330  00003E  6E05               	movwf	_TL2,c
   331                           
   332                           ;EX13.c: 32:                T3SB2 = 0;
   333  000040  0E00               	movlw	0
   334  000042  6E02               	movwf	_T3SB2,c
   335  000044                     i2l44:
   336                           
   337                           ;EX13.c: 36:        if (TL3)
   338  000044  5004               	movf	_TL3,w,c
   339  000046  B4D8               	btfsc	status,2,c
   340  000048  D008               	goto	i2l41
   341                           
   342                           ;EX13.c: 37:        {;EX13.c: 38:            T3SB3++;
   343  00004A  2A01               	incf	_T3SB3,f,c
   344                           
   345                           ;EX13.c: 40:            if (T3SB3 >= 120)
   346  00004C  0E77               	movlw	119
   347  00004E  6401               	cpfsgt	_T3SB3,c
   348  000050  D004               	goto	i2l41
   349                           
   350                           ;EX13.c: 41:            {;EX13.c: 42:                TL3 = 0;
   351  000052  0E00               	movlw	0
   352  000054  6E04               	movwf	_TL3,c
   353                           
   354                           ;EX13.c: 43:                T3SB3 = 0;
   355  000056  0E00               	movlw	0
   356  000058  6E01               	movwf	_T3SB3,c
   357  00005A                     i2l41:
   358                           
   359                           ;EX13.c: 47:     TMR0 = 61;
   360  00005A  0E00               	movlw	0
   361  00005C  6ED7               	movwf	4055,c	;volatile
   362  00005E  0E3D               	movlw	61
   363  000060  6ED6               	movwf	4054,c	;volatile
   364                           
   365                           ;EX13.c: 48:     TMR0IF = 0;
   366  000062  94F2               	bcf	4082,2,c	;volatile
   367  000064  9207               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   368  000066  0011               	retfie		f
   369  000068                     __end_of_int_TMR0:
   370                           	opt callstack 0
   371  0000                     
   372                           	psect	rparam
   373  0000                     
   374                           	psect	temp
   375  000007                     btemp:
   376                           	opt callstack 0
   377  000007                     	ds	1
   378  0000                     int$flags	set	btemp
   379  0000                     wtemp8	set	btemp+1
   380  0000                     ttemp5	set	btemp+1
   381  0000                     ttemp6	set	btemp+4
   382  0000                     ttemp7	set	btemp+8
   383                           tosu	equ	0xFFF
   384                           tosh	equ	0xFFE
   385                           tosl	equ	0xFFD
   386                           stkptr	equ	0xFFC
   387                           pclatu	equ	0xFFB
   388                           pclath	equ	0xFFA
   389                           pcl	equ	0xFF9
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           prodh	equ	0xFF4
   395                           prodl	equ	0xFF3
   396                           indf0	equ	0xFEF
   397                           postinc0	equ	0xFEE
   398                           postdec0	equ	0xFED
   399                           preinc0	equ	0xFEC
   400                           plusw0	equ	0xFEB
   401                           fsr0h	equ	0xFEA
   402                           fsr0l	equ	0xFE9
   403                           wreg	equ	0xFE8
   404                           indf1	equ	0xFE7
   405                           postinc1	equ	0xFE6
   406                           postdec1	equ	0xFE5
   407                           preinc1	equ	0xFE4
   408                           plusw1	equ	0xFE3
   409                           fsr1h	equ	0xFE2
   410                           fsr1l	equ	0xFE1
   411                           bsr	equ	0xFE0
   412                           indf2	equ	0xFDF
   413                           postinc2	equ	0xFDE
   414                           postdec2	equ	0xFDD
   415                           preinc2	equ	0xFDC
   416                           plusw2	equ	0xFDB
   417                           fsr2h	equ	0xFDA
   418                           fsr2l	equ	0xFD9
   419                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _int_TMR0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_TMR0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_TMR0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _int_TMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _int_TMR0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       6       1        4.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      15        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 19 16:19:43 2019

                     l56 00A6              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l780 009C                      l774 0092  
                    l768 0088             __CFG_CPB$OFF 000000                      _TL1 0006  
           __CFG_CPD$OFF 000000                      _TL2 0005                      _TL3 0004  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l41 005A  
                   i2l42 002E                     i2l44 0044                     _TMR0 000FD6  
           __CFG_PWRT$ON 000000                     _main 0068                     btemp 0007  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0000                    _T0CON 000FD5  
                  _T3SB1 0003                    _T3SB2 0002                    _T3SB3 0001  
                  _PORTB 000F81                    _TRISB 000F93            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_BOREN$OFF 000000                    ttemp5 0008                    ttemp6 000B  
                  ttemp7 000F                    status 000FD8                    wtemp8 0008  
        __initialization 00BC             __end_of_main 00BC                   ??_main 0000  
          __activetblptr 000000                   _ADCON1 000FC1                   _INTCON 000FF2  
                 _TMR0IF 007F92           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
       __end_of_int_TMR0 0068               __accesstop 0080  __end_of__initialization 00C8  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
              ?_int_TMR0 0000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00BC                  __ramtop 0600                  __ptext0 0068  
         __pintcode_body 0012     end_of_initialization 00C8               ??_int_TMR0 0000  
                int_func 0012                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISAbits 000F92                _TRISCbits 000F94  
    start_initialization 00BC         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001  
      __size_of_int_TMR0 0060        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
               _int_TMR0 0008            __size_of_main 0054                 int$flags 0007  
               intlevel2 0000  
