

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 05 15:54:15 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4520 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _TXREG	set	4013
    47  0000                     _SPBRG	set	4015
    48  0000                     _BAUDCTLbits	set	4024
    49  0000                     _RCSTAbits	set	4011
    50  0000                     _TXSTAbits	set	4012
    51  0000                     _TRMT	set	32097
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  007F92                     __pcinit:
    57                           	opt callstack 0
    58  007F92                     start_initialization:
    59                           	opt callstack 0
    60  007F92                     __initialization:
    61                           	opt callstack 0
    62  007F92                     end_of_initialization:
    63                           	opt callstack 0
    64  007F92                     __end_of__initialization:
    65                           	opt callstack 0
    66  007F92  0100               	movlb	0
    67  007F94  EFD7  F03F         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70  000001                     __pcstackCOMRAM:
    71                           	opt callstack 0
    72  000001                     escreve_USART@c:
    73                           	opt callstack 0
    74                           
    75                           ; 1 bytes @ 0x0
    76  000001                     	ds	1
    77  000002                     
    78                           ; 1 bytes @ 0x1
    79 ;;
    80 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    81 ;;
    82 ;; *************** function _main *****************
    83 ;; Defined at:
    84 ;;		line 9 in file "EX22.c"
    85 ;; Parameters:    Size  Location     Type
    86 ;;		None
    87 ;; Auto vars:     Size  Location     Type
    88 ;;		None
    89 ;; Return value:  Size  Location     Type
    90 ;;                  1    wreg      void 
    91 ;; Registers used:
    92 ;;		wreg, status,2, cstack
    93 ;; Tracked objects:
    94 ;;		On entry : 0/0
    95 ;;		On exit  : 0/0
    96 ;;		Unchanged: 0/0
    97 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    98 ;;      Params:         0       0       0       0       0       0       0
    99 ;;      Locals:         0       0       0       0       0       0       0
   100 ;;      Temps:          0       0       0       0       0       0       0
   101 ;;      Totals:         0       0       0       0       0       0       0
   102 ;;Total ram usage:        0 bytes
   103 ;; Hardware stack levels required when called:    1
   104 ;; This function calls:
   105 ;;		_escreve_USART
   106 ;; This function is called by:
   107 ;;		Startup code after reset
   108 ;; This function uses a non-reentrant model
   109 ;;
   110                           
   111                           	psect	text0
   112  007FAE                     __ptext0:
   113                           	opt callstack 0
   114  007FAE                     _main:
   115                           	opt callstack 30
   116  007FAE                     
   117                           ;EX22.c: 11:     TXSTAbits.TXEN = 1;
   118  007FAE  8AAC               	bsf	172,5,c	;volatile
   119                           
   120                           ;EX22.c: 12:     TXSTAbits.SYNC = 0;
   121  007FB0  98AC               	bcf	172,4,c	;volatile
   122                           
   123                           ;EX22.c: 13:     RCSTAbits.SPEN = 1;
   124  007FB2  8EAB               	bsf	171,7,c	;volatile
   125                           
   126                           ;EX22.c: 15:     TXSTAbits.BRGH = 0;
   127  007FB4  94AC               	bcf	172,2,c	;volatile
   128                           
   129                           ;EX22.c: 16:     BAUDCTLbits.BRG16 = 0;
   130  007FB6  96B8               	bcf	184,3,c	;volatile
   131  007FB8                     
   132                           ;EX22.c: 18:     SPBRG = 12;
   133  007FB8  0E0C               	movlw	12
   134  007FBA  6EAF               	movwf	175,c	;volatile
   135  007FBC                     
   136                           ;EX22.c: 21:     escreve_USART('P');
   137  007FBC  0E50               	movlw	80
   138  007FBE  ECCC  F03F         	call	_escreve_USART
   139  007FC2                     
   140                           ;EX22.c: 22:     escreve_USART('I');
   141  007FC2  0E49               	movlw	73
   142  007FC4  ECCC  F03F         	call	_escreve_USART
   143  007FC8                     
   144                           ;EX22.c: 23:     escreve_USART('C');
   145  007FC8  0E43               	movlw	67
   146  007FCA  ECCC  F03F         	call	_escreve_USART
   147  007FCE                     
   148                           ;EX22.c: 24:     escreve_USART('1');
   149  007FCE  0E31               	movlw	49
   150  007FD0  ECCC  F03F         	call	_escreve_USART
   151  007FD4                     
   152                           ;EX22.c: 25:     escreve_USART('8');
   153  007FD4  0E38               	movlw	56
   154  007FD6  ECCC  F03F         	call	_escreve_USART
   155  007FDA                     
   156                           ;EX22.c: 26:     escreve_USART('F');
   157  007FDA  0E46               	movlw	70
   158  007FDC  ECCC  F03F         	call	_escreve_USART
   159  007FE0                     
   160                           ;EX22.c: 27:     escreve_USART('4');
   161  007FE0  0E34               	movlw	52
   162  007FE2  ECCC  F03F         	call	_escreve_USART
   163  007FE6                     
   164                           ;EX22.c: 28:     escreve_USART('5');
   165  007FE6  0E35               	movlw	53
   166  007FE8  ECCC  F03F         	call	_escreve_USART
   167  007FEC                     
   168                           ;EX22.c: 29:     escreve_USART('2');
   169  007FEC  0E32               	movlw	50
   170  007FEE  ECCC  F03F         	call	_escreve_USART
   171  007FF2                     
   172                           ;EX22.c: 30:     escreve_USART('0');
   173  007FF2  0E30               	movlw	48
   174  007FF4  ECCC  F03F         	call	_escreve_USART
   175  007FF8                     l19:
   176  007FF8  EFFC  F03F         	goto	l19
   177  007FFC  EF00  F000         	goto	start
   178  008000                     __end_of_main:
   179                           	opt callstack 0
   180                           
   181 ;; *************** function _escreve_USART *****************
   182 ;; Defined at:
   183 ;;		line 38 in file "EX22.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;  c               1    wreg     unsigned char 
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  c               1    0[COMRAM] unsigned char 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   197 ;;      Params:         0       0       0       0       0       0       0
   198 ;;      Locals:         1       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0
   200 ;;      Totals:         1       0       0       0       0       0       0
   201 ;;Total ram usage:        1 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  007F98                     __ptext1:
   212                           	opt callstack 0
   213  007F98                     _escreve_USART:
   214                           	opt callstack 30
   215                           
   216                           ;incstack = 0
   217                           ;escreve_USART@c stored from wreg
   218  007F98  6E01               	movwf	escreve_USART@c^0,c
   219  007F9A                     l25:
   220  007F9A  A2AC               	btfss	4012,1,c	;volatile
   221  007F9C  EFD2  F03F         	goto	u11
   222  007FA0  EFD4  F03F         	goto	u10
   223  007FA4                     u11:
   224  007FA4  EFCD  F03F         	goto	l25
   225  007FA8                     u10:
   226  007FA8                     
   227                           ;EX22.c: 41:    TXREG = c;
   228  007FA8  C001  FFAD         	movff	escreve_USART@c,4013	;volatile
   229  007FAC  0012               	return		;funcret
   230  007FAE                     __end_of_escreve_USART:
   231                           	opt callstack 0
   232  0000                     
   233                           	psect	rparam
   234  0000                     tosu	equ	0xFFF
   235                           tosh	equ	0xFFE
   236                           tosl	equ	0xFFD
   237                           stkptr	equ	0xFFC
   238                           pclatu	equ	0xFFB
   239                           pclath	equ	0xFFA
   240                           pcl	equ	0xFF9
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           prodh	equ	0xFF4
   246                           prodl	equ	0xFF3
   247                           indf0	equ	0xFEF
   248                           postinc0	equ	0xFEE
   249                           postdec0	equ	0xFED
   250                           preinc0	equ	0xFEC
   251                           plusw0	equ	0xFEB
   252                           fsr0h	equ	0xFEA
   253                           fsr0l	equ	0xFE9
   254                           wreg	equ	0xFE8
   255                           indf1	equ	0xFE7
   256                           postinc1	equ	0xFE6
   257                           postdec1	equ	0xFE5
   258                           preinc1	equ	0xFE4
   259                           plusw1	equ	0xFE3
   260                           fsr1h	equ	0xFE2
   261                           fsr1l	equ	0xFE1
   262                           bsr	equ	0xFE0
   263                           indf2	equ	0xFDF
   264                           postinc2	equ	0xFDE
   265                           postdec2	equ	0xFDD
   266                           preinc2	equ	0xFDC
   267                           plusw2	equ	0xFDB
   268                           fsr2h	equ	0xFDA
   269                           fsr2l	equ	0xFD9
   270                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      1       1
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_escreve_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                      _escreve_USART
 ---------------------------------------------------------------------------------
 (1) _escreve_USART                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escreve_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      1       1       1        0.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 05 15:54:15 2019

                     l20 7FF8                       l25 7F9A                       l19 7FF8  
                     l28 7FAC                       u10 7FA8                       u11 7FA4  
            __CFG_BORV$3 000000   __size_of_escreve_USART 0016             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l710 7FB8                      l704 7F9A  
                    l720 7FD4                      l712 7FBC                      l706 7FA8  
                    l730 7FF2                      l722 7FDA                      l714 7FC2  
                    l724 7FE0                      l716 7FC8                      l708 7FAE  
                    l726 7FE6                      l718 7FCE                      l728 7FEC  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _TRMT 007D61             __CFG_PWRT$ON 000000  
                   _main 7FAE                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _SPBRG 000FAF                    _TXREG 000FAD            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_BOREN$OFF 000000            _escreve_USART 7F98          __initialization 7F92  
           __end_of_main 8000                   ??_main 0002            __activetblptr 000000  
         ?_escreve_USART 0001           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
             __accesstop 0080  __end_of__initialization 7F92          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001          ??_escreve_USART 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F92  
                __ramtop 0600                  __ptext0 7FAE                  __ptext1 7F98  
   end_of_initialization 7F92                _RCSTAbits 000FAB                _TXSTAbits 000FAC  
            _BAUDCTLbits 000FB8      start_initialization 7F92         __CFG_LPT1OSC$OFF 000000  
  __end_of_escreve_USART 7FAE        __CFG_CCP2MX$PORTC 000000         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0052  
         escreve_USART@c 0001  
