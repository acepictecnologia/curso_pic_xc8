

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Oct 05 14:58:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     _LATDbits	set	3980
    91  0000                     _LATEbits	set	3981
    92  0000                     _LATD	set	3980
    93  0000                     _TRISEbits	set	3990
    94  0000                     _TRISD	set	3989
    95  0000                     _ADRESL	set	4035
    96  0000                     _ADRESH	set	4036
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON0	set	4034
   101                           
   102                           	psect	smallconst
   103  000600                     __psmallconst:
   104                           	opt callstack 0
   105  000600  00                 	db	0
   106  000601                     STR_3:
   107  000601  25                 	db	37
   108  000602  30                 	db	48	;'0'
   109  000603  2E                 	db	46
   110  000604  31                 	db	49	;'1'
   111  000605  66                 	db	102	;'f'
   112  000606  20                 	db	32
   113  000607  25                 	db	37
   114  000608  63                 	db	99	;'c'
   115  000609  43                 	db	67	;'C'
   116  00060A  00                 	db	0
   117  00060B                     STR_4:
   118  00060B  25                 	db	37
   119  00060C  30                 	db	48	;'0'
   120  00060D  34                 	db	52	;'4'
   121  00060E  6C                 	db	108	;'l'
   122  00060F  75                 	db	117	;'u'
   123  000610  20                 	db	32
   124  000611  6D                 	db	109	;'m'
   125  000612  56                 	db	86	;'V'
   126  000613  00                 	db	0
   127  000614                     STR_1:
   128  000614  54                 	db	84	;'T'
   129  000615  65                 	db	101	;'e'
   130  000616  6D                 	db	109	;'m'
   131  000617  70                 	db	112	;'p'
   132  000618  3A                 	db	58	;':'
   133  000619  00                 	db	0
   134  00061A                     STR_2:
   135  00061A  56                 	db	86	;'V'
   136  00061B  6F                 	db	111	;'o'
   137  00061C  6C                 	db	108	;'l'
   138  00061D  74                 	db	116	;'t'
   139  00061E  3A                 	db	58	;':'
   140  00061F  00                 	db	0
   141  000620                     STR_5:
   142  000620  49                 	db	73	;'I'
   143  000621  4E                 	db	78	;'N'
   144  000622  46                 	db	70	;'F'
   145  000623  00                 	db	0
   146  000624                     STR_9:
   147  000624  4E                 	db	78	;'N'
   148  000625  41                 	db	65	;'A'
   149  000626  4E                 	db	78	;'N'
   150  000627  00                 	db	0
   151  000628                     STR_6:
   152  000628  69                 	db	105	;'i'
   153  000629  6E                 	db	110	;'n'
   154  00062A  66                 	db	102	;'f'
   155  00062B  00                 	db	0
   156  00062C                     STR_10:
   157  00062C  6E                 	db	110	;'n'
   158  00062D  61                 	db	97	;'a'
   159  00062E  6E                 	db	110	;'n'
   160  00062F  00                 	db	0
   161  000630                     STR_13:
   162  000630  6C                 	db	108	;'l'
   163  000631  66                 	db	102	;'f'
   164  000632  00                 	db	0
   165  000633                     STR_18:
   166  000633  6C                 	db	108	;'l'
   167  000634  75                 	db	117	;'u'
   168  000635  00                 	db	0
   169  0000                     
   170                           ; #config settings
   171  000636  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	cinit
   174  00409A                     __pcinit:
   175                           	opt callstack 0
   176  00409A                     start_initialization:
   177                           	opt callstack 0
   178  00409A                     __initialization:
   179                           	opt callstack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (96 bytes)
   182  00409A  EE01  F000         	lfsr	0,__pbssBANK1
   183  00409E  0E60               	movlw	96
   184  0040A0                     clear_0:
   185  0040A0  6AEE               	clrf	postinc0,c
   186  0040A2  06E8               	decf	wreg,f,c
   187  0040A4  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (26 bytes)
   190  0040A6  EE00  F0DC         	lfsr	0,__pbssBANK0
   191  0040AA  0E1A               	movlw	26
   192  0040AC                     clear_1:
   193  0040AC  6AEE               	clrf	postinc0,c
   194  0040AE  06E8               	decf	wreg,f,c
   195  0040B0  E1FD               	bnz	clear_1
   196  0040B2                     end_of_initialization:
   197                           	opt callstack 0
   198  0040B2                     __end_of__initialization:
   199                           	opt callstack 0
   200  0040B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201  0040B4  6EF8               	movwf	tblptru,c
   202  0040B6  0100               	movlb	0
   203  0040B8  EF1E  F013         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssBANK0
   206  0000DC                     __pbssBANK0:
   207                           	opt callstack 0
   208  0000DC                     floorf@F524:
   209                           	opt callstack 0
   210  0000DC                     	ds	4
   211  0000E0                     ___fpclassifyf@F463:
   212                           	opt callstack 0
   213  0000E0                     	ds	4
   214  0000E4                     _temp:
   215                           	opt callstack 0
   216  0000E4                     	ds	4
   217  0000E8                     _volt:
   218                           	opt callstack 0
   219  0000E8                     	ds	4
   220  0000EC                     _nout:
   221                           	opt callstack 0
   222  0000EC                     	ds	2
   223  0000EE                     _width:
   224                           	opt callstack 0
   225  0000EE                     	ds	2
   226  0000F0                     _prec:
   227                           	opt callstack 0
   228  0000F0                     	ds	2
   229  0000F2                     _flags:
   230                           	opt callstack 0
   231  0000F2                     	ds	2
   232  0000F4                     _adc:
   233                           	opt callstack 0
   234  0000F4                     	ds	2
   235                           
   236                           	psect	bssBANK1
   237  000100                     __pbssBANK1:
   238                           	opt callstack 0
   239  000100                     _dbuf:
   240                           	opt callstack 0
   241  000100                     	ds	80
   242  000150                     _bufferLCD:
   243                           	opt callstack 0
   244  000150                     	ds	16
   245                           
   246                           	psect	cstackBANK0
   247  000080                     __pcstackBANK0:
   248                           	opt callstack 0
   249  000080                     efgtoa@ou:
   250                           	opt callstack 0
   251                           
   252                           ; 4 bytes @ 0x0
   253  000080                     	ds	4
   254  000084                     _efgtoa$381:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258  000084                     	ds	2
   259  000086                     _efgtoa$382:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x6
   263  000086                     	ds	2
   264  000088                     _efgtoa$386:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x8
   268  000088                     	ds	2
   269  00008A                     _efgtoa$390:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0xA
   273  00008A                     	ds	2
   274  00008C                     _efgtoa$391:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0xC
   278  00008C                     	ds	2
   279  00008E                     _efgtoa$392:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0xE
   283  00008E                     	ds	2
   284  000090                     efgtoa@t:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x10
   288  000090                     	ds	2
   289  000092                     efgtoa@pp:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x12
   293  000092                     	ds	2
   294  000094                     efgtoa@m:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x14
   298  000094                     	ds	2
   299  000096                     efgtoa@ne:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x16
   303  000096                     	ds	2
   304  000098                     efgtoa@d:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x18
   308  000098                     	ds	2
   309  00009A                     efgtoa@sign:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x1A
   313  00009A                     	ds	2
   314  00009C                     efgtoa@p:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x1C
   318  00009C                     	ds	2
   319  00009E                     efgtoa@nmode:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x1E
   323  00009E                     	ds	1
   324  00009F                     efgtoa@w:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x1F
   328  00009F                     	ds	2
   329  0000A1                     efgtoa@mode:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0x21
   333  0000A1                     	ds	1
   334  0000A2                     efgtoa@h:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x22
   338  0000A2                     	ds	4
   339  0000A6                     efgtoa@l:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x26
   343  0000A6                     	ds	4
   344  0000AA                     efgtoa@i:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x2A
   348  0000AA                     	ds	2
   349  0000AC                     efgtoa@g:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x2C
   353  0000AC                     	ds	4
   354  0000B0                     efgtoa@e:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x30
   358  0000B0                     	ds	2
   359  0000B2                     efgtoa@n:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x32
   363  0000B2                     	ds	2
   364  0000B4                     efgtoa@u:
   365                           	opt callstack 0
   366                           
   367                           ; 4 bytes @ 0x34
   368  0000B4                     	ds	4
   369  0000B8                     vfpfcnvrt@done:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x38
   373  0000B8                     	ds	2
   374  0000BA                     _vfpfcnvrt$413:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x3A
   378  0000BA                     	ds	2
   379  0000BC                     _vfpfcnvrt$414:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x3C
   383  0000BC                     	ds	2
   384  0000BE                     _vfpfcnvrt$419:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x3E
   388  0000BE                     	ds	2
   389  0000C0                     vfpfcnvrt@llu:
   390                           	opt callstack 0
   391                           
   392                           ; 8 bytes @ 0x40
   393  0000C0                     	ds	8
   394  0000C8                     vfpfcnvrt@f:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0x48
   398  0000C8                     	ds	4
   399  0000CC                     vfpfcnvrt@ct:
   400                           	opt callstack 0
   401                           
   402                           ; 3 bytes @ 0x4C
   403  0000CC                     	ds	3
   404  0000CF                     vfpfcnvrt@c:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0x4F
   408  0000CF                     	ds	3
   409  0000D2                     sprintf@ap:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x52
   413  0000D2                     	ds	2
   414  0000D4                     sprintf@f:
   415                           	opt callstack 0
   416                           
   417                           ; 6 bytes @ 0x54
   418  0000D4                     	ds	6
   419  0000DA                     ??_main:
   420                           
   421                           ; 1 bytes @ 0x5A
   422  0000DA                     	ds	2
   423                           
   424                           	psect	cstackCOMRAM
   425  000001                     __pcstackCOMRAM:
   426                           	opt callstack 0
   427  000001                     ?_strlen:
   428                           	opt callstack 0
   429  000001                     ?___fpclassifyf:
   430                           	opt callstack 0
   431  000001                     ?_isupper:
   432                           	opt callstack 0
   433  000001                     ?_isdigit:
   434                           	opt callstack 0
   435  000001                     ?_strncmp:
   436                           	opt callstack 0
   437  000001                     ?_isspace:
   438                           	opt callstack 0
   439  000001                     ?___wmul:
   440                           	opt callstack 0
   441  000001                     ?___awdiv:
   442                           	opt callstack 0
   443  000001                     ?___awmod:
   444                           	opt callstack 0
   445  000001                     ?___fladd:
   446                           	opt callstack 0
   447  000001                     ?___lmul:
   448                           	opt callstack 0
   449  000001                     ?___flneg:
   450                           	opt callstack 0
   451  000001                     ?___fltol:
   452                           	opt callstack 0
   453  000001                     ?___xxtofl:
   454                           	opt callstack 0
   455  000001                     ?___lodiv:
   456                           	opt callstack 0
   457  000001                     ?___lomod:
   458                           	opt callstack 0
   459  000001                     set_bit@comp:
   460                           	opt callstack 0
   461  000001                     ___wmul@multiplier:
   462                           	opt callstack 0
   463  000001                     ___awdiv@dividend:
   464                           	opt callstack 0
   465  000001                     ___awmod@dividend:
   466                           	opt callstack 0
   467  000001                     isdigit@c:
   468                           	opt callstack 0
   469  000001                     isspace@c:
   470                           	opt callstack 0
   471  000001                     isupper@c:
   472                           	opt callstack 0
   473  000001                     fputc@c:
   474                           	opt callstack 0
   475  000001                     strcpy@dest:
   476                           	opt callstack 0
   477  000001                     strlen@s:
   478                           	opt callstack 0
   479  000001                     strncmp@_l:
   480                           	opt callstack 0
   481  000001                     ___lmul@multiplier:
   482                           	opt callstack 0
   483  000001                     ___fleq@ff1:
   484                           	opt callstack 0
   485  000001                     ___flneg@f1:
   486                           	opt callstack 0
   487  000001                     ___fltol@f1:
   488                           	opt callstack 0
   489  000001                     ___fladd@b:
   490                           	opt callstack 0
   491  000001                     ___xxtofl@val:
   492                           	opt callstack 0
   493  000001                     ___fpclassifyf@x:
   494                           	opt callstack 0
   495  000001                     ___lodiv@dividend:
   496                           	opt callstack 0
   497  000001                     ___lomod@dividend:
   498                           	opt callstack 0
   499                           
   500                           ; 8 bytes @ 0x0
   501  000001                     	ds	1
   502  000002                     set_bit@cmd:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x1
   506  000002                     	ds	1
   507  000003                     ??_lcd_cmd:
   508  000003                     ??_isupper:
   509  000003                     ??_isdigit:
   510  000003                     ??_isspace:
   511  000003                     ___wmul@multiplicand:
   512                           	opt callstack 0
   513  000003                     ___awdiv@divisor:
   514                           	opt callstack 0
   515  000003                     ___awmod@divisor:
   516                           	opt callstack 0
   517  000003                     fputc@fp:
   518                           	opt callstack 0
   519  000003                     strcpy@src:
   520                           	opt callstack 0
   521  000003                     strlen@a:
   522                           	opt callstack 0
   523  000003                     strncmp@_r:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527  000003                     	ds	1
   528  000004                     lcd_cmd@cmd:
   529                           	opt callstack 0
   530                           
   531                           ; 1 bytes @ 0x3
   532  000004                     	ds	1
   533  000005                     ??_lcd_ini:
   534  000005                     ??_fputc:
   535  000005                     ??___fpclassifyf:
   536  000005                     ??_strcpy:
   537  000005                     ??___fltol:
   538  000005                     ??___xxtofl:
   539  000005                     lcd_envia_byte@dado:
   540                           	opt callstack 0
   541  000005                     ___awdiv@counter:
   542                           	opt callstack 0
   543  000005                     ___awmod@counter:
   544                           	opt callstack 0
   545  000005                     ___wmul@product:
   546                           	opt callstack 0
   547  000005                     strncmp@n:
   548                           	opt callstack 0
   549  000005                     ___lmul@multiplicand:
   550                           	opt callstack 0
   551  000005                     ___fleq@ff2:
   552                           	opt callstack 0
   553  000005                     ___fladd@a:
   554                           	opt callstack 0
   555                           
   556                           ; 4 bytes @ 0x4
   557  000005                     	ds	1
   558  000006                     lcd_ini@i:
   559                           	opt callstack 0
   560  000006                     lcd_envia_byte@nivel:
   561                           	opt callstack 0
   562  000006                     ___awdiv@sign:
   563                           	opt callstack 0
   564  000006                     ___awmod@sign:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x5
   568  000006                     	ds	1
   569  000007                     ??_strncmp:
   570  000007                     ?_tolower:
   571                           	opt callstack 0
   572  000007                     lcd_escreve_bf@col:
   573                           	opt callstack 0
   574  000007                     _isspace$927:
   575                           	opt callstack 0
   576  000007                     ___awdiv@quotient:
   577                           	opt callstack 0
   578  000007                     strcpy@s:
   579                           	opt callstack 0
   580  000007                     tolower@c:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x6
   584  000007                     	ds	1
   585  000008                     ?_atoi:
   586                           	opt callstack 0
   587  000008                     lcd_escreve_bf@str:
   588                           	opt callstack 0
   589  000008                     atoi@s:
   590                           	opt callstack 0
   591  000008                     strncmp@l:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x7
   595  000008                     	ds	1
   596  000009                     ??_tolower:
   597  000009                     ??___fladd:
   598  000009                     ??___fleq:
   599  000009                     ___fltol@sign1:
   600                           	opt callstack 0
   601  000009                     ___xxtofl@sign:
   602                           	opt callstack 0
   603  000009                     ___fpclassifyf@e:
   604                           	opt callstack 0
   605  000009                     strcpy@d:
   606                           	opt callstack 0
   607  000009                     ___lmul@product:
   608                           	opt callstack 0
   609  000009                     ___lodiv@divisor:
   610                           	opt callstack 0
   611  000009                     ___lomod@divisor:
   612                           	opt callstack 0
   613                           
   614                           ; 8 bytes @ 0x8
   615  000009                     	ds	1
   616  00000A                     ??_atoi:
   617  00000A                     lcd_escreve_bf@end:
   618                           	opt callstack 0
   619  00000A                     ___fltol@exp1:
   620                           	opt callstack 0
   621  00000A                     ___xxtofl@exp:
   622                           	opt callstack 0
   623  00000A                     fputs@s:
   624                           	opt callstack 0
   625  00000A                     strncmp@r:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     lcd_escreve_bf@lin:
   631                           	opt callstack 0
   632  00000B                     ___xxtofl@arg:
   633                           	opt callstack 0
   634  00000B                     ___fpclassifyf@u:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0xA
   638  00000B                     	ds	1
   639  00000C                     fputs@fp:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0xB
   643  00000C                     	ds	1
   644  00000D                     ?___aldiv:
   645                           	opt callstack 0
   646  00000D                     ___fladd@signs:
   647                           	opt callstack 0
   648  00000D                     _tolower$1012:
   649                           	opt callstack 0
   650  00000D                     ___aldiv@dividend:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0xC
   654  00000D                     	ds	1
   655  00000E                     ___fladd@aexp:
   656                           	opt callstack 0
   657  00000E                     fputs@c:
   658                           	opt callstack 0
   659  00000E                     atoi@neg:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xD
   663  00000E                     	ds	1
   664  00000F                     ?___flmul:
   665                           	opt callstack 0
   666  00000F                     ___fladd@bexp:
   667                           	opt callstack 0
   668  00000F                     fputs@i:
   669                           	opt callstack 0
   670  00000F                     ___flmul@b:
   671                           	opt callstack 0
   672                           
   673                           ; 4 bytes @ 0xE
   674  00000F                     	ds	1
   675  000010                     ___fladd@grs:
   676                           	opt callstack 0
   677  000010                     _atoi$896:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0xF
   681  000010                     	ds	1
   682  000011                     ?_pad:
   683                           	opt callstack 0
   684  000011                     ___lomod@counter:
   685                           	opt callstack 0
   686  000011                     pad@fp:
   687                           	opt callstack 0
   688  000011                     ___aldiv@divisor:
   689                           	opt callstack 0
   690  000011                     ___lodiv@quotient:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x10
   694  000011                     	ds	1
   695  000012                     _atoi$898:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x11
   699  000012                     	ds	1
   700  000013                     pad@buf:
   701                           	opt callstack 0
   702  000013                     ___flmul@a:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x12
   706  000013                     	ds	1
   707  000014                     _atoi$897:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x13
   711  000014                     	ds	1
   712  000015                     ___aldiv@counter:
   713                           	opt callstack 0
   714  000015                     pad@p:
   715                           	opt callstack 0
   716  000015                     atoi@n:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x14
   720  000015                     	ds	1
   721  000016                     ___aldiv@sign:
   722                           	opt callstack 0
   723                           
   724                           ; 1 bytes @ 0x15
   725  000016                     	ds	1
   726  000017                     ??___flmul:
   727  000017                     ??_pad:
   728  000017                     ___aldiv@quotient:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x16
   732  000017                     	ds	1
   733  000018                     pad@i:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x17
   737  000018                     	ds	1
   738  000019                     ___lodiv@counter:
   739                           	opt callstack 0
   740                           
   741                           ; 1 bytes @ 0x18
   742  000019                     	ds	1
   743  00001A                     pad@w:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x19
   747  00001A                     	ds	1
   748  00001B                     ___flmul@sign:
   749                           	opt callstack 0
   750                           
   751                           ; 1 bytes @ 0x1A
   752  00001B                     	ds	1
   753  00001C                     ?_ctoa:
   754                           	opt callstack 0
   755  00001C                     ?_utoa:
   756                           	opt callstack 0
   757  00001C                     ctoa@fp:
   758                           	opt callstack 0
   759  00001C                     utoa@fp:
   760                           	opt callstack 0
   761  00001C                     ___flmul@grs:
   762                           	opt callstack 0
   763                           
   764                           ; 4 bytes @ 0x1B
   765  00001C                     	ds	2
   766  00001E                     ctoa@c:
   767                           	opt callstack 0
   768  00001E                     utoa@d:
   769                           	opt callstack 0
   770                           
   771                           ; 8 bytes @ 0x1D
   772  00001E                     	ds	1
   773  00001F                     ctoa@w:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x1E
   777  00001F                     	ds	1
   778  000020                     ___flmul@aexp:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x1F
   782  000020                     	ds	1
   783  000021                     ___flmul@bexp:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x20
   787  000021                     	ds	1
   788  000022                     ___flmul@prod:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x21
   792  000022                     	ds	4
   793  000026                     ??_utoa:
   794  000026                     ___flmul@temp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x25
   798  000026                     	ds	2
   799  000028                     ?___fldiv:
   800                           	opt callstack 0
   801  000028                     ?___flsub:
   802                           	opt callstack 0
   803  000028                     ___flge@ff1:
   804                           	opt callstack 0
   805  000028                     ___flsub@b:
   806                           	opt callstack 0
   807  000028                     ___fldiv@b:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x27
   811  000028                     	ds	4
   812  00002C                     ___flge@ff2:
   813                           	opt callstack 0
   814  00002C                     ___flsub@a:
   815                           	opt callstack 0
   816  00002C                     ___fldiv@a:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x2B
   820  00002C                     	ds	2
   821  00002E                     utoa@p:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x2D
   825  00002E                     	ds	2
   826  000030                     ??___fldiv:
   827  000030                     ??___flge:
   828  000030                     utoa@w:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x2F
   832  000030                     	ds	2
   833  000032                     utoa@n:
   834                           	opt callstack 0
   835                           
   836                           ; 8 bytes @ 0x31
   837  000032                     	ds	2
   838  000034                     ___fldiv@rem:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0x33
   842  000034                     	ds	4
   843  000038                     ___fldiv@sign:
   844                           	opt callstack 0
   845                           
   846                           ; 1 bytes @ 0x37
   847  000038                     	ds	1
   848  000039                     ___fldiv@new_exp:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x38
   852  000039                     	ds	1
   853  00003A                     utoa@i:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x39
   857  00003A                     	ds	1
   858  00003B                     ___fldiv@grs:
   859                           	opt callstack 0
   860                           
   861                           ; 4 bytes @ 0x3A
   862  00003B                     	ds	4
   863  00003F                     ___fldiv@bexp:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0x3E
   867  00003F                     	ds	1
   868  000040                     ___fldiv@aexp:
   869                           	opt callstack 0
   870                           
   871                           ; 1 bytes @ 0x3F
   872  000040                     	ds	1
   873  000041                     ?_floorf:
   874                           	opt callstack 0
   875  000041                     floorf@x:
   876                           	opt callstack 0
   877                           
   878                           ; 4 bytes @ 0x40
   879  000041                     	ds	4
   880  000045                     ??_floorf:
   881                           
   882                           ; 1 bytes @ 0x44
   883  000045                     	ds	6
   884  00004B                     floorf@m:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x4A
   888  00004B                     	ds	4
   889  00004F                     floorf@e:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x4E
   893  00004F                     	ds	2
   894  000051                     floorf@u:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0x50
   898  000051                     	ds	4
   899  000055                     ?_efgtoa:
   900                           	opt callstack 0
   901  000055                     efgtoa@fp:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x54
   905  000055                     	ds	2
   906  000057                     efgtoa@f:
   907                           	opt callstack 0
   908                           
   909                           ; 4 bytes @ 0x56
   910  000057                     	ds	4
   911  00005B                     efgtoa@c:
   912                           	opt callstack 0
   913                           
   914                           ; 1 bytes @ 0x5A
   915  00005B                     	ds	1
   916  00005C                     ??_efgtoa:
   917                           
   918                           ; 1 bytes @ 0x5B
   919  00005C                     	ds	5
   920  000061                     ?_vfpfcnvrt:
   921                           	opt callstack 0
   922  000061                     vfpfcnvrt@fp:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0x60
   926  000061                     	ds	2
   927  000063                     vfpfcnvrt@fmt:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x62
   931  000063                     	ds	2
   932  000065                     vfpfcnvrt@ap:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x64
   936  000065                     	ds	2
   937  000067                     ??_vfpfcnvrt:
   938                           
   939                           ; 1 bytes @ 0x66
   940  000067                     	ds	6
   941  00006D                     ?_vfprintf:
   942                           	opt callstack 0
   943  00006D                     vfprintf@fp:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x6C
   947  00006D                     	ds	2
   948  00006F                     vfprintf@fmt:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x6E
   952  00006F                     	ds	2
   953  000071                     vfprintf@ap:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x70
   957  000071                     	ds	2
   958  000073                     vfprintf@cfmt:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x72
   962  000073                     	ds	2
   963  000075                     ?_sprintf:
   964                           	opt callstack 0
   965  000075                     sprintf@s:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x74
   969  000075                     	ds	2
   970  000077                     sprintf@fmt:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x76
   974  000077                     	ds	8
   975  00007F                     
   976                           ; 1 bytes @ 0x7E
   977 ;;
   978 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   979 ;;
   980 ;; *************** function _main *****************
   981 ;; Defined at:
   982 ;;		line 14 in file "EX21.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       2       0       0       0       0       0
   999 ;;      Totals:         0       2       0       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels required when called:    8
  1002 ;; This function calls:
  1003 ;;		___aldiv
  1004 ;;		___fldiv
  1005 ;;		___flmul
  1006 ;;		___lmul
  1007 ;;		___xxtofl
  1008 ;;		_lcd_escreve_bf
  1009 ;;		_lcd_ini
  1010 ;;		_sprintf
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text0
  1017  00263C                     __ptext0:
  1018                           	opt callstack 0
  1019  00263C                     _main:
  1020                           	opt callstack 23
  1021  00263C                     
  1022                           ;EX21.c: 16:     ADCON0 = 0b00000001;
  1023  00263C  0E01               	movlw	1
  1024  00263E  6EC2               	movwf	194,c	;volatile
  1025                           
  1026                           ;EX21.c: 21:     ADCON1 = 0b00001101;
  1027  002640  0E0D               	movlw	13
  1028  002642  6EC1               	movwf	193,c	;volatile
  1029                           
  1030                           ;EX21.c: 26:     ADCON2 = 0b10000111;
  1031  002644  0E87               	movlw	135
  1032  002646  6EC0               	movwf	192,c	;volatile
  1033  002648                     
  1034                           ;EX21.c: 32:     lcd_ini();
  1035  002648  ECF5  F01D         	call	_lcd_ini	;wreg free
  1036  00264C                     
  1037                           ;EX21.c: 35:     lcd_escreve_bf(1, 1, "Temp:");
  1038  00264C  0E01               	movlw	1
  1039  00264E  6E07               	movwf	lcd_escreve_bf@col^0,c
  1040  002650  0E14               	movlw	low STR_1
  1041  002652  6E08               	movwf	lcd_escreve_bf@str^0,c
  1042  002654  0E06               	movlw	high STR_1
  1043  002656  6E09               	movwf	(lcd_escreve_bf@str+1)^0,c
  1044  002658  0E01               	movlw	1
  1045  00265A  ECA5  F01D         	call	_lcd_escreve_bf
  1046  00265E                     
  1047                           ;EX21.c: 38:     lcd_escreve_bf(2, 1, "Volt:");
  1048  00265E  0E01               	movlw	1
  1049  002660  6E07               	movwf	lcd_escreve_bf@col^0,c
  1050  002662  0E1A               	movlw	low STR_2
  1051  002664  6E08               	movwf	lcd_escreve_bf@str^0,c
  1052  002666  0E06               	movlw	high STR_2
  1053  002668  6E09               	movwf	(lcd_escreve_bf@str+1)^0,c
  1054  00266A  0E02               	movlw	2
  1055  00266C  ECA5  F01D         	call	_lcd_escreve_bf
  1056  002670                     l4445:
  1057                           
  1058                           ;EX21.c: 41:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1059  002670  0E04               	movlw	4
  1060  002672  0100               	movlb	0	; () banked
  1061  002674  6FDB               	movwf	(??_main+1)& (0+255),b
  1062  002676  0E0C               	movlw	12
  1063  002678  6FDA               	movwf	??_main& (0+255),b
  1064  00267A  0E33               	movlw	51
  1065  00267C                     u5637:
  1066  00267C  2EE8               	decfsz	wreg,f,c
  1067  00267E  D7FE               	bra	u5637
  1068  002680  2FDA               	decfsz	??_main& (0+255),f,b
  1069  002682  D7FC               	bra	u5637
  1070  002684  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1071  002686  D7FA               	bra	u5637
  1072  002688  D000               	nop2	
  1073  00268A                     
  1074                           ;EX21.c: 43:         ADCON0 = 0b00000001;
  1075  00268A  0E01               	movlw	1
  1076  00268C  6EC2               	movwf	194,c	;volatile
  1077  00268E                     
  1078                           ;EX21.c: 45:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1079  00268E  0E42               	movlw	66
  1080  002690                     u5647:
  1081  002690  2EE8               	decfsz	wreg,f,c
  1082  002692  D7FE               	bra	u5647
  1083  002694  D000               	nop2	
  1084  002696                     
  1085                           ;EX21.c: 47:         ADCON0bits.GO = 1;
  1086  002696  82C2               	bsf	194,1,c	;volatile
  1087  002698                     l34:
  1088  002698  B2C2               	btfsc	194,1,c	;volatile
  1089  00269A  EF51  F013         	goto	u5611
  1090  00269E  EF53  F013         	goto	u5610
  1091  0026A2                     u5611:
  1092  0026A2  EF4C  F013         	goto	l34
  1093  0026A6                     u5610:
  1094  0026A6                     
  1095                           ;EX21.c: 51:         adc = ADRESH;
  1096  0026A6  CFC4 F0F4          	movff	4036,_adc	;volatile
  1097  0026AA  0100               	movlb	0	; () banked
  1098  0026AC  6BF5               	clrf	(_adc+1)& (0+255),b
  1099  0026AE                     
  1100                           ; BSR set to: 0
  1101                           ;EX21.c: 53:         adc = (adc << 8) + ADRESL;
  1102  0026AE  51F4               	movf	_adc& (0+255),w,b
  1103  0026B0  6FDB               	movwf	(??_main+1)& (0+255),b
  1104  0026B2  6BDA               	clrf	??_main& (0+255),b
  1105  0026B4  50C3               	movf	195,w,c	;volatile
  1106  0026B6  25DA               	addwf	??_main& (0+255),w,b
  1107  0026B8  6FF4               	movwf	_adc& (0+255),b
  1108  0026BA  0E00               	movlw	0
  1109  0026BC  21DB               	addwfc	(??_main+1)& (0+255),w,b
  1110  0026BE  6FF5               	movwf	(_adc+1)& (0+255),b
  1111  0026C0                     
  1112                           ; BSR set to: 0
  1113                           ;EX21.c: 56:         temp = ((float)adc * 5000) / 1023;
  1114  0026C0  0E00               	movlw	0
  1115  0026C2  6E13               	movwf	___flmul@a^0,c
  1116  0026C4  0E40               	movlw	64
  1117  0026C6  6E14               	movwf	(___flmul@a+1)^0,c
  1118  0026C8  0E9C               	movlw	156
  1119  0026CA  6E15               	movwf	(___flmul@a+2)^0,c
  1120  0026CC  0E45               	movlw	69
  1121  0026CE  6E16               	movwf	(___flmul@a+3)^0,c
  1122  0026D0  C0F4  F001         	movff	_adc,___xxtofl@val
  1123  0026D4  C0F5  F002         	movff	_adc+1,___xxtofl@val+1
  1124  0026D8  0E00               	movlw	0
  1125  0026DA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1126  0026DC  0EFF               	movlw	-1
  1127  0026DE  6E03               	movwf	(___xxtofl@val+2)^0,c
  1128  0026E0  6E04               	movwf	(___xxtofl@val+3)^0,c
  1129  0026E2  0E01               	movlw	1
  1130  0026E4  EC43  F016         	call	___xxtofl
  1131  0026E8  C001  F00F         	movff	?___xxtofl,___flmul@b
  1132  0026EC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1133  0026F0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1134  0026F4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1135  0026F8  EC3C  F00F         	call	___flmul	;wreg free
  1136  0026FC  C00F  F028         	movff	?___flmul,___fldiv@b
  1137  002700  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1138  002704  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1139  002708  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1140  00270C  0E00               	movlw	0
  1141  00270E  6E2C               	movwf	___fldiv@a^0,c
  1142  002710  0EC0               	movlw	192
  1143  002712  6E2D               	movwf	(___fldiv@a+1)^0,c
  1144  002714  0E7F               	movlw	127
  1145  002716  6E2E               	movwf	(___fldiv@a+2)^0,c
  1146  002718  0E44               	movlw	68
  1147  00271A  6E2F               	movwf	(___fldiv@a+3)^0,c
  1148  00271C  EC51  F011         	call	___fldiv	;wreg free
  1149  002720  C028  F0E4         	movff	?___fldiv,_temp
  1150  002724  C029  F0E5         	movff	?___fldiv+1,_temp+1
  1151  002728  C02A  F0E6         	movff	?___fldiv+2,_temp+2
  1152  00272C  C02B  F0E7         	movff	?___fldiv+3,_temp+3
  1153  002730                     
  1154                           ;EX21.c: 57:         temp = temp / 10;
  1155  002730  C0E4  F028         	movff	_temp,___fldiv@b
  1156  002734  C0E5  F029         	movff	_temp+1,___fldiv@b+1
  1157  002738  C0E6  F02A         	movff	_temp+2,___fldiv@b+2
  1158  00273C  C0E7  F02B         	movff	_temp+3,___fldiv@b+3
  1159  002740  0E00               	movlw	0
  1160  002742  6E2C               	movwf	___fldiv@a^0,c
  1161  002744  0E00               	movlw	0
  1162  002746  6E2D               	movwf	(___fldiv@a+1)^0,c
  1163  002748  0E20               	movlw	32
  1164  00274A  6E2E               	movwf	(___fldiv@a+2)^0,c
  1165  00274C  0E41               	movlw	65
  1166  00274E  6E2F               	movwf	(___fldiv@a+3)^0,c
  1167  002750  EC51  F011         	call	___fldiv	;wreg free
  1168  002754  C028  F0E4         	movff	?___fldiv,_temp
  1169  002758  C029  F0E5         	movff	?___fldiv+1,_temp+1
  1170  00275C  C02A  F0E6         	movff	?___fldiv+2,_temp+2
  1171  002760  C02B  F0E7         	movff	?___fldiv+3,_temp+3
  1172  002764                     
  1173                           ;EX21.c: 59:         ADCON0 = 0b00000101;
  1174  002764  0E05               	movlw	5
  1175  002766  6EC2               	movwf	194,c	;volatile
  1176  002768                     
  1177                           ;EX21.c: 61:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1178  002768  0E42               	movlw	66
  1179  00276A                     u5657:
  1180  00276A  2EE8               	decfsz	wreg,f,c
  1181  00276C  D7FE               	bra	u5657
  1182  00276E  D000               	nop2	
  1183  002770                     
  1184                           ;EX21.c: 63:         ADCON0bits.GO = 1;
  1185  002770  82C2               	bsf	194,1,c	;volatile
  1186  002772                     l37:
  1187  002772  B2C2               	btfsc	194,1,c	;volatile
  1188  002774  EFBE  F013         	goto	u5621
  1189  002778  EFC0  F013         	goto	u5620
  1190  00277C                     u5621:
  1191  00277C  EFB9  F013         	goto	l37
  1192  002780                     u5620:
  1193  002780                     
  1194                           ;EX21.c: 67:         adc = ADRESH;
  1195  002780  CFC4 F0F4          	movff	4036,_adc	;volatile
  1196  002784  0100               	movlb	0	; () banked
  1197  002786  6BF5               	clrf	(_adc+1)& (0+255),b
  1198  002788                     
  1199                           ; BSR set to: 0
  1200                           ;EX21.c: 69:         adc = (adc << 8) + ADRESL;
  1201  002788  51F4               	movf	_adc& (0+255),w,b
  1202  00278A  6FDB               	movwf	(??_main+1)& (0+255),b
  1203  00278C  6BDA               	clrf	??_main& (0+255),b
  1204  00278E  50C3               	movf	195,w,c	;volatile
  1205  002790  25DA               	addwf	??_main& (0+255),w,b
  1206  002792  6FF4               	movwf	_adc& (0+255),b
  1207  002794  0E00               	movlw	0
  1208  002796  21DB               	addwfc	(??_main+1)& (0+255),w,b
  1209  002798  6FF5               	movwf	(_adc+1)& (0+255),b
  1210  00279A                     
  1211                           ; BSR set to: 0
  1212                           ;EX21.c: 72:         volt = ((long)adc * 5000) / 1023;
  1213  00279A  C0F4  F001         	movff	_adc,___lmul@multiplier
  1214  00279E  C0F5  F002         	movff	_adc+1,___lmul@multiplier+1
  1215  0027A2  0E00               	movlw	0
  1216  0027A4  BE02               	btfsc	(___lmul@multiplier+1)^0,7,c
  1217  0027A6  0EFF               	movlw	-1
  1218  0027A8  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1219  0027AA  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1220  0027AC  0E88               	movlw	136
  1221  0027AE  6E05               	movwf	___lmul@multiplicand^0,c
  1222  0027B0  0E13               	movlw	19
  1223  0027B2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1224  0027B4  0E00               	movlw	0
  1225  0027B6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1226  0027B8  0E00               	movlw	0
  1227  0027BA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1228  0027BC  EC42  F01E         	call	___lmul	;wreg free
  1229  0027C0  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1230  0027C4  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1231  0027C8  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1232  0027CC  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1233  0027D0  0EFF               	movlw	255
  1234  0027D2  6E11               	movwf	___aldiv@divisor^0,c
  1235  0027D4  0E03               	movlw	3
  1236  0027D6  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1237  0027D8  0E00               	movlw	0
  1238  0027DA  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1239  0027DC  0E00               	movlw	0
  1240  0027DE  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1241  0027E0  EC72  F018         	call	___aldiv	;wreg free
  1242  0027E4  C00D  F0E8         	movff	?___aldiv,_volt
  1243  0027E8  C00E  F0E9         	movff	?___aldiv+1,_volt+1
  1244  0027EC  C00F  F0EA         	movff	?___aldiv+2,_volt+2
  1245  0027F0  C010  F0EB         	movff	?___aldiv+3,_volt+3
  1246  0027F4                     
  1247                           ;EX21.c: 75:         sprintf(bufferLCD, "%0.1f %cC", temp, 0xDF);
  1248  0027F4  0E50               	movlw	low _bufferLCD
  1249  0027F6  6E75               	movwf	sprintf@s^0,c
  1250  0027F8  0E01               	movlw	high _bufferLCD
  1251  0027FA  6E76               	movwf	(sprintf@s+1)^0,c
  1252  0027FC  0E01               	movlw	low STR_3
  1253  0027FE  6E77               	movwf	sprintf@fmt^0,c
  1254  002800  0E06               	movlw	high STR_3
  1255  002802  6E78               	movwf	(sprintf@fmt+1)^0,c
  1256  002804  C0E4  F079         	movff	_temp,?_sprintf+4
  1257  002808  C0E5  F07A         	movff	_temp+1,?_sprintf+5
  1258  00280C  C0E6  F07B         	movff	_temp+2,?_sprintf+6
  1259  002810  C0E7  F07C         	movff	_temp+3,?_sprintf+7
  1260  002814  0E00               	movlw	0
  1261  002816  6E7E               	movwf	(?_sprintf+9)^0,c
  1262  002818  0EDF               	movlw	223
  1263  00281A  6E7D               	movwf	(?_sprintf+8)^0,c
  1264  00281C  EC34  F01F         	call	_sprintf	;wreg free
  1265  002820                     
  1266                           ;EX21.c: 78:         lcd_escreve_bf(1, 7, bufferLCD);
  1267  002820  0E07               	movlw	7
  1268  002822  6E07               	movwf	lcd_escreve_bf@col^0,c
  1269  002824  0E50               	movlw	low _bufferLCD
  1270  002826  6E08               	movwf	lcd_escreve_bf@str^0,c
  1271  002828  0E01               	movlw	high _bufferLCD
  1272  00282A  6E09               	movwf	(lcd_escreve_bf@str+1)^0,c
  1273  00282C  0E01               	movlw	1
  1274  00282E  ECA5  F01D         	call	_lcd_escreve_bf
  1275  002832                     
  1276                           ;EX21.c: 81:         sprintf(bufferLCD, "%04lu mV", volt);
  1277  002832  0E50               	movlw	low _bufferLCD
  1278  002834  6E75               	movwf	sprintf@s^0,c
  1279  002836  0E01               	movlw	high _bufferLCD
  1280  002838  6E76               	movwf	(sprintf@s+1)^0,c
  1281  00283A  0E0B               	movlw	low STR_4
  1282  00283C  6E77               	movwf	sprintf@fmt^0,c
  1283  00283E  0E06               	movlw	high STR_4
  1284  002840  6E78               	movwf	(sprintf@fmt+1)^0,c
  1285  002842  C0E8  F079         	movff	_volt,?_sprintf+4
  1286  002846  C0E9  F07A         	movff	_volt+1,?_sprintf+5
  1287  00284A  C0EA  F07B         	movff	_volt+2,?_sprintf+6
  1288  00284E  C0EB  F07C         	movff	_volt+3,?_sprintf+7
  1289  002852  EC34  F01F         	call	_sprintf	;wreg free
  1290  002856                     
  1291                           ;EX21.c: 84:         lcd_escreve_bf(2, 7, bufferLCD);
  1292  002856  0E07               	movlw	7
  1293  002858  6E07               	movwf	lcd_escreve_bf@col^0,c
  1294  00285A  0E50               	movlw	low _bufferLCD
  1295  00285C  6E08               	movwf	lcd_escreve_bf@str^0,c
  1296  00285E  0E01               	movlw	high _bufferLCD
  1297  002860  6E09               	movwf	(lcd_escreve_bf@str+1)^0,c
  1298  002862  0E02               	movlw	2
  1299  002864  ECA5  F01D         	call	_lcd_escreve_bf
  1300  002868  EF38  F013         	goto	l4445
  1301  00286C  EF00  F000         	goto	start
  1302  002870                     __end_of_main:
  1303                           	opt callstack 0
  1304                           
  1305 ;; *************** function _sprintf *****************
  1306 ;; Defined at:
  1307 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  s               2  116[COMRAM] PTR unsigned char 
  1310 ;;		 -> bufferLCD(16), 
  1311 ;;  fmt             2  118[COMRAM] PTR const unsigned char 
  1312 ;;		 -> STR_4(9), STR_3(10), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  f               6   84[BANK0 ] struct _IO_FILE
  1315 ;;  ap              2   82[BANK0 ] PTR void [1]
  1316 ;;		 -> ?_sprintf(2), 
  1317 ;;  ret             2    0        int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2  116[COMRAM] int 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1327 ;;      Params:        10       0       0       0       0       0       0
  1328 ;;      Locals:         0      10       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0
  1330 ;;      Totals:        10      10       0       0       0       0       0
  1331 ;;Total ram usage:       20 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    7
  1334 ;; This function calls:
  1335 ;;		_vfprintf
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text1
  1342  003E68                     __ptext1:
  1343                           	opt callstack 0
  1344  003E68                     _sprintf:
  1345                           	opt callstack 23
  1346  003E68  0E79               	movlw	low (?_sprintf+4)
  1347  003E6A  0100               	movlb	0	; () banked
  1348  003E6C  6FD2               	movwf	sprintf@ap& (0+255),b
  1349  003E6E  0E00               	movlw	high (?_sprintf+4)
  1350  003E70  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  1351  003E72  C075  F0D4         	movff	sprintf@s,sprintf@f
  1352  003E76  C076  F0D5         	movff	sprintf@s+1,sprintf@f+1
  1353  003E7A                     
  1354                           ; BSR set to: 0
  1355  003E7A  0E00               	movlw	0
  1356  003E7C  6FD7               	movwf	(sprintf@f+3)& (0+255),b
  1357  003E7E  0E00               	movlw	0
  1358  003E80  6FD6               	movwf	(sprintf@f+2)& (0+255),b
  1359  003E82                     
  1360                           ; BSR set to: 0
  1361  003E82  0E00               	movlw	0
  1362  003E84  6FD9               	movwf	(sprintf@f+5)& (0+255),b
  1363  003E86  0E00               	movlw	0
  1364  003E88  6FD8               	movwf	(sprintf@f+4)& (0+255),b
  1365  003E8A                     
  1366                           ; BSR set to: 0
  1367  003E8A  0ED4               	movlw	low sprintf@f
  1368  003E8C  6E6D               	movwf	vfprintf@fp^0,c
  1369  003E8E  0E00               	movlw	high sprintf@f
  1370  003E90  6E6E               	movwf	(vfprintf@fp+1)^0,c
  1371  003E92  C077  F06F         	movff	sprintf@fmt,vfprintf@fmt
  1372  003E96  C078  F070         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1373  003E9A  0ED2               	movlw	low sprintf@ap
  1374  003E9C  6E71               	movwf	vfprintf@ap^0,c
  1375  003E9E  0E00               	movlw	high sprintf@ap
  1376  003EA0  6E72               	movwf	(vfprintf@ap+1)^0,c
  1377  003EA2  EC77  F01E         	call	_vfprintf	;wreg free
  1378  003EA6  0100               	movlb	0	; () banked
  1379  003EA8  51D6               	movf	(sprintf@f+2)& (0+255),w,b
  1380  003EAA  2475               	addwf	sprintf@s^0,w,c
  1381  003EAC  6ED9               	movwf	fsr2l,c
  1382  003EAE  51D7               	movf	(sprintf@f+3)& (0+255),w,b
  1383  003EB0  2076               	addwfc	(sprintf@s+1)^0,w,c
  1384  003EB2  6EDA               	movwf	fsr2h,c
  1385  003EB4  0E00               	movlw	0
  1386  003EB6  6EDF               	movwf	indf2,c
  1387  003EB8                     
  1388                           ; BSR set to: 0
  1389  003EB8  0012               	return		;funcret
  1390  003EBA                     __end_of_sprintf:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _vfprintf *****************
  1394 ;; Defined at:
  1395 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  1398 ;;		 -> sprintf@f(6), 
  1399 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  1400 ;;		 -> STR_4(9), STR_3(10), 
  1401 ;;  ap              2  112[COMRAM] PTR PTR void 
  1402 ;;		 -> sprintf@ap(2), 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  1405 ;;		 -> STR_4(9), STR_3(10), 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2  108[COMRAM] int 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1415 ;;      Params:         6       0       0       0       0       0       0
  1416 ;;      Locals:         2       0       0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0
  1418 ;;      Totals:         8       0       0       0       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    6
  1422 ;; This function calls:
  1423 ;;		_vfpfcnvrt
  1424 ;; This function is called by:
  1425 ;;		_sprintf
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text2
  1430  003CEE                     __ptext2:
  1431                           	opt callstack 0
  1432  003CEE                     _vfprintf:
  1433                           	opt callstack 23
  1434  003CEE                     
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1436  003CEE  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  1437  003CF2  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1438  003CF6                     
  1439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1440  003CF6  0E00               	movlw	0
  1441  003CF8  0100               	movlb	0	; () banked
  1442  003CFA  6FED               	movwf	(_nout+1)& (0+255),b
  1443  003CFC  0E00               	movlw	0
  1444  003CFE  6FEC               	movwf	_nout& (0+255),b
  1445                           
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1447  003D00  EF95  F01E         	goto	l4267
  1448  003D04                     l4265:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1452  003D04  C06D  F061         	movff	vfprintf@fp,vfpfcnvrt@fp
  1453  003D08  C06E  F062         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1454  003D0C  0E73               	movlw	low vfprintf@cfmt
  1455  003D0E  6E63               	movwf	vfpfcnvrt@fmt^0,c
  1456  003D10  0E00               	movlw	high vfprintf@cfmt
  1457  003D12  6E64               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1458  003D14  C071  F065         	movff	vfprintf@ap,vfpfcnvrt@ap
  1459  003D18  C072  F066         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1460  003D1C  ECF4  F008         	call	_vfpfcnvrt	;wreg free
  1461  003D20  5061               	movf	?_vfpfcnvrt^0,w,c
  1462  003D22  0100               	movlb	0	; () banked
  1463  003D24  27EC               	addwf	_nout& (0+255),f,b
  1464  003D26  5062               	movf	(?_vfpfcnvrt+1)^0,w,c
  1465  003D28  23ED               	addwfc	(_nout+1)& (0+255),f,b
  1466  003D2A                     l4267:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1470  003D2A  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  1471  003D2E  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1472  003D32                     	if	0	;tblptru may be non-zero
  1473  003D32                     	endif
  1474  003D32                     	if	0	;tblptru may be non-zero
  1475  003D32                     	endif
  1476  003D32  0008               	tblrd		*
  1477  003D34  50F5               	movf	tablat,w,c
  1478  003D36  0900               	iorlw	0
  1479  003D38  A4D8               	btfss	status,2,c
  1480  003D3A  EFA1  F01E         	goto	u5361
  1481  003D3E  EFA3  F01E         	goto	u5360
  1482  003D42                     u5361:
  1483  003D42  EF82  F01E         	goto	l4265
  1484  003D46                     u5360:
  1485  003D46                     
  1486                           ; BSR set to: 0
  1487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1488  003D46  C0EC  F06D         	movff	_nout,?_vfprintf
  1489  003D4A  C0ED  F06E         	movff	_nout+1,?_vfprintf+1
  1490  003D4E                     
  1491                           ; BSR set to: 0
  1492  003D4E  0012               	return		;funcret
  1493  003D50                     __end_of_vfprintf:
  1494                           	opt callstack 0
  1495                           
  1496 ;; *************** function _vfpfcnvrt *****************
  1497 ;; Defined at:
  1498 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  fp              2   96[COMRAM] PTR struct _IO_FILE
  1501 ;;		 -> sprintf@f(6), 
  1502 ;;  fmt             2   98[COMRAM] PTR PTR unsigned char 
  1503 ;;		 -> vfprintf@cfmt(2), 
  1504 ;;  ap              2  100[COMRAM] PTR PTR void 
  1505 ;;		 -> sprintf@ap(2), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  llu             8   64[BANK0 ] unsigned long long 
  1508 ;;  ll              8    0        long long 
  1509 ;;  f               4   72[BANK0 ] long long 
  1510 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1511 ;;  vp              3    0        PTR void 
  1512 ;;  cp              3    0        PTR unsigned char 
  1513 ;;  done            2   56[BANK0 ] int 
  1514 ;;  i               2    0        int 
  1515 ;;  c               1   79[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2   96[COMRAM] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1525 ;;      Params:         6       0       0       0       0       0       0
  1526 ;;      Locals:         0      24       0       0       0       0       0
  1527 ;;      Temps:          6       0       0       0       0       0       0
  1528 ;;      Totals:        12      24       0       0       0       0       0
  1529 ;;Total ram usage:       36 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		_atoi
  1534 ;;		_ctoa
  1535 ;;		_efgtoa
  1536 ;;		_fputc
  1537 ;;		_isdigit
  1538 ;;		_isupper
  1539 ;;		_strncmp
  1540 ;;		_tolower
  1541 ;;		_utoa
  1542 ;; This function is called by:
  1543 ;;		_vfprintf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text3
  1548  0011E8                     __ptext3:
  1549                           	opt callstack 0
  1550  0011E8                     _vfpfcnvrt:
  1551                           	opt callstack 23
  1552  0011E8                     
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1554  0011E8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555  0011EC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556  0011F0  CFDE FFF6          	movff	postinc2,tblptrl
  1557  0011F4  CFDD FFF7          	movff	postdec2,tblptrh
  1558  0011F8                     	if	0	;tblptru may be non-zero
  1559  0011F8                     	endif
  1560  0011F8                     	if	0	;tblptru may be non-zero
  1561  0011F8                     	endif
  1562  0011F8  0008               	tblrd		*
  1563  0011FA  50F5               	movf	tablat,w,c
  1564  0011FC  0A25               	xorlw	37
  1565  0011FE  A4D8               	btfss	status,2,c
  1566  001200  EF04  F009         	goto	u5111
  1567  001204  EF06  F009         	goto	u5110
  1568  001208                     u5111:
  1569  001208  EFC0  F00C         	goto	l4239
  1570  00120C                     u5110:
  1571  00120C                     
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1573  00120C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1574  001210  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1575  001214  2ADE               	incf	postinc2,f,c
  1576  001216  0E00               	movlw	0
  1577  001218  22DD               	addwfc	postdec2,f,c
  1578  00121A                     
  1579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1580  00121A  0E00               	movlw	0
  1581  00121C  0100               	movlb	0	; () banked
  1582  00121E  6FEF               	movwf	(_width+1)& (0+255),b
  1583  001220  0E00               	movlw	0
  1584  001222  6FEE               	movwf	_width& (0+255),b
  1585  001224  C0EE  F0F2         	movff	_width,_flags
  1586  001228  C0EF  F0F3         	movff	_width+1,_flags+1
  1587  00122C                     
  1588                           ; BSR set to: 0
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1590  00122C  69F0               	setf	_prec& (0+255),b
  1591  00122E  69F1               	setf	(_prec+1)& (0+255),b
  1592  001230                     
  1593                           ; BSR set to: 0
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1595  001230  0E00               	movlw	0
  1596  001232  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1597  001234  0E00               	movlw	0
  1598  001236  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1599                           
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1601  001238  EF64  F009         	goto	l4119
  1602  00123C                     l4093:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1606  00123C  81F2               	bsf	_flags& (0+255),0,b
  1607  00123E                     l4095:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1611  00123E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612  001242  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613  001246  2ADE               	incf	postinc2,f,c
  1614  001248  0E00               	movlw	0
  1615  00124A  22DD               	addwfc	postdec2,f,c
  1616                           
  1617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1618  00124C  EF64  F009         	goto	l4119
  1619  001250                     l4097:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1623  001250  83F2               	bsf	_flags& (0+255),1,b
  1624  001252  EF1F  F009         	goto	l4095
  1625  001256                     l4101:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1629  001256  85F2               	bsf	_flags& (0+255),2,b
  1630  001258  EF1F  F009         	goto	l4095
  1631  00125C                     l4105:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1635  00125C  87F2               	bsf	_flags& (0+255),3,b
  1636  00125E  EF1F  F009         	goto	l4095
  1637  001262                     l4109:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1641  001262  89F2               	bsf	_flags& (0+255),4,b
  1642  001264  EF1F  F009         	goto	l4095
  1643  001268                     l4113:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1647  001268  0E00               	movlw	0
  1648  00126A  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1649  00126C  0E01               	movlw	1
  1650  00126E  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1651                           
  1652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1653  001270  EF64  F009         	goto	l4119
  1654  001274                     l4117:
  1655                           
  1656                           ; BSR set to: 0
  1657  001274  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1658  001278  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1659  00127C  CFDE FFF6          	movff	postinc2,tblptrl
  1660  001280  CFDD FFF7          	movff	postdec2,tblptrh
  1661  001284                     	if	0	;tblptru may be non-zero
  1662  001284                     	endif
  1663  001284                     	if	0	;tblptru may be non-zero
  1664  001284                     	endif
  1665  001284  0008               	tblrd		*
  1666  001286  50F5               	movf	tablat,w,c
  1667  001288  6E67               	movwf	??_vfpfcnvrt^0,c
  1668  00128A  6A68               	clrf	(??_vfpfcnvrt+1)^0,c
  1669                           
  1670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1671                           ; Switch size 1, requested type "simple"
  1672                           ; Number of cases is 1, Range of values is 0 to 0
  1673                           ; switch strategies available:
  1674                           ; Name         Instructions Cycles
  1675                           ; simple_byte            4     3 (average)
  1676                           ;	Chosen strategy is simple_byte
  1677  00128C  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  1678  00128E  0A00               	xorlw	0	; case 0
  1679  001290  B4D8               	btfsc	status,2,c
  1680  001292  EF4D  F009         	goto	l4527
  1681  001296  EF34  F009         	goto	l4113
  1682  00129A                     l4527:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ; Switch size 1, requested type "simple"
  1686                           ; Number of cases is 5, Range of values is 32 to 48
  1687                           ; switch strategies available:
  1688                           ; Name         Instructions Cycles
  1689                           ; simple_byte           16     9 (average)
  1690                           ;	Chosen strategy is simple_byte
  1691  00129A  5067               	movf	??_vfpfcnvrt^0,w,c
  1692  00129C  0A20               	xorlw	32	; case 32
  1693  00129E  B4D8               	btfsc	status,2,c
  1694  0012A0  EF2E  F009         	goto	l4105
  1695  0012A4  0A03               	xorlw	3	; case 35
  1696  0012A6  B4D8               	btfsc	status,2,c
  1697  0012A8  EF31  F009         	goto	l4109
  1698  0012AC  0A08               	xorlw	8	; case 43
  1699  0012AE  B4D8               	btfsc	status,2,c
  1700  0012B0  EF2B  F009         	goto	l4101
  1701  0012B4  0A06               	xorlw	6	; case 45
  1702  0012B6  B4D8               	btfsc	status,2,c
  1703  0012B8  EF1E  F009         	goto	l4093
  1704  0012BC  0A1D               	xorlw	29	; case 48
  1705  0012BE  B4D8               	btfsc	status,2,c
  1706  0012C0  EF28  F009         	goto	l4097
  1707  0012C4  EF34  F009         	goto	l4113
  1708  0012C8                     l4119:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1712  0012C8  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1713  0012CA  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1714  0012CC  B4D8               	btfsc	status,2,c
  1715  0012CE  EF6B  F009         	goto	u5121
  1716  0012D2  EF6D  F009         	goto	u5120
  1717  0012D6                     u5121:
  1718  0012D6  EF3A  F009         	goto	l4117
  1719  0012DA                     u5120:
  1720  0012DA                     
  1721                           ; BSR set to: 0
  1722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1723  0012DA  A1F2               	btfss	_flags& (0+255),0,b
  1724  0012DC  EF72  F009         	goto	u5131
  1725  0012E0  EF74  F009         	goto	u5130
  1726  0012E4                     u5131:
  1727  0012E4  EF75  F009         	goto	l4123
  1728  0012E8                     u5130:
  1729  0012E8                     
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1732  0012E8  93F2               	bcf	_flags& (0+255),1,b
  1733  0012EA                     l4123:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1737  0012EA  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738  0012EE  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739  0012F2  CFDE FFF6          	movff	postinc2,tblptrl
  1740  0012F6  CFDD FFF7          	movff	postdec2,tblptrh
  1741  0012FA                     	if	0	;tblptru may be non-zero
  1742  0012FA                     	endif
  1743  0012FA                     	if	0	;tblptru may be non-zero
  1744  0012FA                     	endif
  1745  0012FA  0008               	tblrd		*
  1746  0012FC  50F5               	movf	tablat,w,c
  1747  0012FE  0A2A               	xorlw	42
  1748  001300  A4D8               	btfss	status,2,c
  1749  001302  EF85  F009         	goto	u5141
  1750  001306  EF87  F009         	goto	u5140
  1751  00130A                     u5141:
  1752  00130A  EFB0  F009         	goto	l4131
  1753  00130E                     u5140:
  1754  00130E                     
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1757  00130E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  001312  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  001316  2ADE               	incf	postinc2,f,c
  1760  001318  0E00               	movlw	0
  1761  00131A  22DD               	addwfc	postdec2,f,c
  1762                           
  1763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1764  00131C  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1765  001320  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1766  001324  CFDF F067          	movff	indf2,??_vfpfcnvrt
  1767  001328  0E02               	movlw	2
  1768  00132A  26DE               	addwf	postinc2,f,c
  1769  00132C  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  1770  001330  0E00               	movlw	0
  1771  001332  22DD               	addwfc	postdec2,f,c
  1772  001334  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1773  001338  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1774  00133C  CFDE F0EE          	movff	postinc2,_width
  1775  001340  CFDD F0EF          	movff	postdec2,_width+1
  1776  001344                     
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1779  001344  BFEF               	btfsc	(_width+1)& (0+255),7,b
  1780  001346  EFA9  F009         	goto	u5150
  1781  00134A  EFA7  F009         	goto	u5151
  1782  00134E                     u5151:
  1783  00134E  EFF4  F009         	goto	l4141
  1784  001352                     u5150:
  1785  001352                     
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1788  001352  81F2               	bsf	_flags& (0+255),0,b
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1791  001354  6DEE               	negf	_width& (0+255),b
  1792  001356  1FEF               	comf	(_width+1)& (0+255),f,b
  1793  001358  B0D8               	btfsc	status,0,c
  1794  00135A  2BEF               	incf	(_width+1)& (0+255),f,b
  1795  00135C  EFF4  F009         	goto	l4141
  1796  001360                     l4131:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1800  001360  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  001364  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  001368  CFDE F008          	movff	postinc2,atoi@s
  1803  00136C  CFDD F009          	movff	postdec2,atoi@s+1
  1804  001370  EC1D  F017         	call	_atoi	;wreg free
  1805  001374  C008  F0EE         	movff	?_atoi,_width
  1806  001378  C009  F0EF         	movff	?_atoi+1,_width+1
  1807                           
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1809  00137C  EFC7  F009         	goto	l4135
  1810  001380                     l4133:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1814  001380  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  001384  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  001388  2ADE               	incf	postinc2,f,c
  1817  00138A  0E00               	movlw	0
  1818  00138C  22DD               	addwfc	postdec2,f,c
  1819  00138E                     l4135:
  1820  00138E  0ED0               	movlw	208
  1821  001390  6E67               	movwf	??_vfpfcnvrt^0,c
  1822  001392  0EFF               	movlw	255
  1823  001394  6E68               	movwf	(??_vfpfcnvrt+1)^0,c
  1824  001396  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  00139A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  00139E  CFDE FFF6          	movff	postinc2,tblptrl
  1827  0013A2  CFDD FFF7          	movff	postdec2,tblptrh
  1828  0013A6                     	if	0	;tblptru may be non-zero
  1829  0013A6                     	endif
  1830  0013A6                     	if	0	;tblptru may be non-zero
  1831  0013A6                     	endif
  1832  0013A6  0008               	tblrd		*
  1833  0013A8  50F5               	movf	tablat,w,c
  1834  0013AA  6E69               	movwf	(??_vfpfcnvrt+2)^0,c
  1835  0013AC  6A6A               	clrf	(??_vfpfcnvrt+3)^0,c
  1836  0013AE  5067               	movf	??_vfpfcnvrt^0,w,c
  1837  0013B0  2669               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1838  0013B2  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  1839  0013B4  226A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1840  0013B6  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  1841  0013B8  E10A               	bnz	u5160
  1842  0013BA  0E0A               	movlw	10
  1843  0013BC  5C69               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1844  0013BE  A0D8               	btfss	status,0,c
  1845  0013C0  EFE4  F009         	goto	u5161
  1846  0013C4  EFE7  F009         	goto	u5160
  1847  0013C8                     u5161:
  1848  0013C8  0E01               	movlw	1
  1849  0013CA  EFE8  F009         	goto	u5170
  1850  0013CE                     u5160:
  1851  0013CE  0E00               	movlw	0
  1852  0013D0                     u5170:
  1853  0013D0  0100               	movlb	0	; () banked
  1854  0013D2  6FBA               	movwf	_vfpfcnvrt$413& (0+255),b
  1855  0013D4  6BBB               	clrf	(_vfpfcnvrt$413+1)& (0+255),b
  1856  0013D6                     
  1857                           ; BSR set to: 0
  1858  0013D6  51BA               	movf	_vfpfcnvrt$413& (0+255),w,b
  1859  0013D8  11BB               	iorwf	(_vfpfcnvrt$413+1)& (0+255),w,b
  1860  0013DA  A4D8               	btfss	status,2,c
  1861  0013DC  EFF2  F009         	goto	u5181
  1862  0013E0  EFF4  F009         	goto	u5180
  1863  0013E4                     u5181:
  1864  0013E4  EFC0  F009         	goto	l4133
  1865  0013E8                     u5180:
  1866  0013E8                     l4141:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1870  0013E8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871  0013EC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872  0013F0  CFDE FFF6          	movff	postinc2,tblptrl
  1873  0013F4  CFDD FFF7          	movff	postdec2,tblptrh
  1874  0013F8                     	if	0	;tblptru may be non-zero
  1875  0013F8                     	endif
  1876  0013F8                     	if	0	;tblptru may be non-zero
  1877  0013F8                     	endif
  1878  0013F8  0008               	tblrd		*
  1879  0013FA  50F5               	movf	tablat,w,c
  1880  0013FC  0A2E               	xorlw	46
  1881  0013FE  A4D8               	btfss	status,2,c
  1882  001400  EF04  F00A         	goto	u5191
  1883  001404  EF06  F00A         	goto	u5190
  1884  001408                     u5191:
  1885  001408  EF84  F00A         	goto	l4161
  1886  00140C                     u5190:
  1887  00140C                     
  1888                           ; BSR set to: 0
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1890  00140C  0E00               	movlw	0
  1891  00140E  6FF1               	movwf	(_prec+1)& (0+255),b
  1892  001410  0E00               	movlw	0
  1893  001412  6FF0               	movwf	_prec& (0+255),b
  1894  001414                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1897  001414  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  001418  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  00141C  2ADE               	incf	postinc2,f,c
  1900  00141E  0E00               	movlw	0
  1901  001420  22DD               	addwfc	postdec2,f,c
  1902  001422                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1905  001422  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1906  001426  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1907  00142A  CFDE FFF6          	movff	postinc2,tblptrl
  1908  00142E  CFDD FFF7          	movff	postdec2,tblptrh
  1909  001432                     	if	0	;tblptru may be non-zero
  1910  001432                     	endif
  1911  001432                     	if	0	;tblptru may be non-zero
  1912  001432                     	endif
  1913  001432  0008               	tblrd		*
  1914  001434  50F5               	movf	tablat,w,c
  1915  001436  0A2A               	xorlw	42
  1916  001438  A4D8               	btfss	status,2,c
  1917  00143A  EF21  F00A         	goto	u5201
  1918  00143E  EF23  F00A         	goto	u5200
  1919  001442                     u5201:
  1920  001442  EF40  F00A         	goto	l4151
  1921  001446                     u5200:
  1922  001446                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1925  001446  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1926  00144A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1927  00144E  2ADE               	incf	postinc2,f,c
  1928  001450  0E00               	movlw	0
  1929  001452  22DD               	addwfc	postdec2,f,c
  1930                           
  1931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1932  001454  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1933  001458  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1934  00145C  CFDF F067          	movff	indf2,??_vfpfcnvrt
  1935  001460  0E02               	movlw	2
  1936  001462  26DE               	addwf	postinc2,f,c
  1937  001464  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  1938  001468  0E00               	movlw	0
  1939  00146A  22DD               	addwfc	postdec2,f,c
  1940  00146C  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1941  001470  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1942  001474  CFDE F0F0          	movff	postinc2,_prec
  1943  001478  CFDD F0F1          	movff	postdec2,_prec+1
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1946  00147C  EF84  F00A         	goto	l4161
  1947  001480                     l4151:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1951  001480  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952  001484  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953  001488  CFDE F008          	movff	postinc2,atoi@s
  1954  00148C  CFDD F009          	movff	postdec2,atoi@s+1
  1955  001490  EC1D  F017         	call	_atoi	;wreg free
  1956  001494  C008  F0F0         	movff	?_atoi,_prec
  1957  001498  C009  F0F1         	movff	?_atoi+1,_prec+1
  1958                           
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1960  00149C  EF57  F00A         	goto	l4155
  1961  0014A0                     l4153:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1965  0014A0  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  0014A4  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  0014A8  2ADE               	incf	postinc2,f,c
  1968  0014AA  0E00               	movlw	0
  1969  0014AC  22DD               	addwfc	postdec2,f,c
  1970  0014AE                     l4155:
  1971  0014AE  0ED0               	movlw	208
  1972  0014B0  6E67               	movwf	??_vfpfcnvrt^0,c
  1973  0014B2  0EFF               	movlw	255
  1974  0014B4  6E68               	movwf	(??_vfpfcnvrt+1)^0,c
  1975  0014B6  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1976  0014BA  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1977  0014BE  CFDE FFF6          	movff	postinc2,tblptrl
  1978  0014C2  CFDD FFF7          	movff	postdec2,tblptrh
  1979  0014C6                     	if	0	;tblptru may be non-zero
  1980  0014C6                     	endif
  1981  0014C6                     	if	0	;tblptru may be non-zero
  1982  0014C6                     	endif
  1983  0014C6  0008               	tblrd		*
  1984  0014C8  50F5               	movf	tablat,w,c
  1985  0014CA  6E69               	movwf	(??_vfpfcnvrt+2)^0,c
  1986  0014CC  6A6A               	clrf	(??_vfpfcnvrt+3)^0,c
  1987  0014CE  5067               	movf	??_vfpfcnvrt^0,w,c
  1988  0014D0  2669               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1989  0014D2  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  1990  0014D4  226A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1991  0014D6  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  1992  0014D8  E10A               	bnz	u5210
  1993  0014DA  0E0A               	movlw	10
  1994  0014DC  5C69               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1995  0014DE  A0D8               	btfss	status,0,c
  1996  0014E0  EF74  F00A         	goto	u5211
  1997  0014E4  EF77  F00A         	goto	u5210
  1998  0014E8                     u5211:
  1999  0014E8  0E01               	movlw	1
  2000  0014EA  EF78  F00A         	goto	u5220
  2001  0014EE                     u5210:
  2002  0014EE  0E00               	movlw	0
  2003  0014F0                     u5220:
  2004  0014F0  0100               	movlb	0	; () banked
  2005  0014F2  6FBC               	movwf	_vfpfcnvrt$414& (0+255),b
  2006  0014F4  6BBD               	clrf	(_vfpfcnvrt$414+1)& (0+255),b
  2007  0014F6                     
  2008                           ; BSR set to: 0
  2009  0014F6  51BC               	movf	_vfpfcnvrt$414& (0+255),w,b
  2010  0014F8  11BD               	iorwf	(_vfpfcnvrt$414+1)& (0+255),w,b
  2011  0014FA  A4D8               	btfss	status,2,c
  2012  0014FC  EF82  F00A         	goto	u5231
  2013  001500  EF84  F00A         	goto	u5230
  2014  001504                     u5231:
  2015  001504  EF50  F00A         	goto	l4153
  2016  001508                     u5230:
  2017  001508                     l4161:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2021  001508  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2022  00150C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2023  001510  CFDE FFF6          	movff	postinc2,tblptrl
  2024  001514  CFDD FFF7          	movff	postdec2,tblptrh
  2025  001518                     	if	0	;tblptru may be non-zero
  2026  001518                     	endif
  2027  001518                     	if	0	;tblptru may be non-zero
  2028  001518                     	endif
  2029  001518  0008               	tblrd		*
  2030  00151A  50F5               	movf	tablat,w,c
  2031  00151C  6E07               	movwf	tolower@c^0,c
  2032  00151E  6A08               	clrf	(tolower@c+1)^0,c
  2033  001520  ECA8  F01E         	call	_tolower	;wreg free
  2034  001524  5007               	movf	?_tolower^0,w,c
  2035  001526  0100               	movlb	0	; () banked
  2036  001528  6FCC               	movwf	vfpfcnvrt@ct& (0+255),b
  2037  00152A                     
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2040  00152A  51CC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2041  00152C  B4D8               	btfsc	status,2,c
  2042  00152E  EF9B  F00A         	goto	u5241
  2043  001532  EF9D  F00A         	goto	u5240
  2044  001536                     u5241:
  2045  001536  EFD7  F00A         	goto	l4171
  2046  00153A                     u5240:
  2047  00153A                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2050  00153A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2051  00153E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  001542  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2053  001546  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2054  00154A  0E01               	movlw	1
  2055  00154C  2667               	addwf	??_vfpfcnvrt^0,f,c
  2056  00154E  0E00               	movlw	0
  2057  001550  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2058  001552  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2059  001556  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2060  00155A                     	if	0	;tblptru may be non-zero
  2061  00155A                     	endif
  2062  00155A                     	if	0	;tblptru may be non-zero
  2063  00155A                     	endif
  2064  00155A  0008               	tblrd		*
  2065  00155C  50F5               	movf	tablat,w,c
  2066  00155E  6E07               	movwf	tolower@c^0,c
  2067  001560  6A08               	clrf	(tolower@c+1)^0,c
  2068  001562  ECA8  F01E         	call	_tolower	;wreg free
  2069  001566  5007               	movf	?_tolower^0,w,c
  2070  001568  0100               	movlb	0	; () banked
  2071  00156A  6FCD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2072  00156C                     
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2075  00156C  51CD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2076  00156E  B4D8               	btfsc	status,2,c
  2077  001570  EFBC  F00A         	goto	u5251
  2078  001574  EFBE  F00A         	goto	u5250
  2079  001578                     u5251:
  2080  001578  EFD7  F00A         	goto	l4171
  2081  00157C                     u5250:
  2082  00157C                     
  2083                           ; BSR set to: 0
  2084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2085  00157C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086  001580  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087  001584  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2088  001588  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2089  00158C  0E02               	movlw	2
  2090  00158E  2667               	addwf	??_vfpfcnvrt^0,f,c
  2091  001590  0E00               	movlw	0
  2092  001592  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2093  001594  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2094  001598  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2095  00159C                     	if	0	;tblptru may be non-zero
  2096  00159C                     	endif
  2097  00159C                     	if	0	;tblptru may be non-zero
  2098  00159C                     	endif
  2099  00159C  0008               	tblrd		*
  2100  00159E  50F5               	movf	tablat,w,c
  2101  0015A0  6E07               	movwf	tolower@c^0,c
  2102  0015A2  6A08               	clrf	(tolower@c+1)^0,c
  2103  0015A4  ECA8  F01E         	call	_tolower	;wreg free
  2104  0015A8  5007               	movf	?_tolower^0,w,c
  2105  0015AA  0100               	movlb	0	; () banked
  2106  0015AC  6FCE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2107  0015AE                     l4171:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2111  0015AE  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2112  0015B2  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2113  0015B6  CFDE FFF6          	movff	postinc2,tblptrl
  2114  0015BA  CFDD FFF7          	movff	postdec2,tblptrh
  2115  0015BE                     	if	0	;tblptru may be non-zero
  2116  0015BE                     	endif
  2117  0015BE                     	if	0	;tblptru may be non-zero
  2118  0015BE                     	endif
  2119  0015BE  0008               	tblrd		*
  2120  0015C0  50F5               	movf	tablat,w,c
  2121  0015C2  0A63               	xorlw	99
  2122  0015C4  A4D8               	btfss	status,2,c
  2123  0015C6  EFE7  F00A         	goto	u5261
  2124  0015CA  EFE9  F00A         	goto	u5260
  2125  0015CE                     u5261:
  2126  0015CE  EF10  F00B         	goto	l4179
  2127  0015D2                     u5260:
  2128  0015D2                     
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2131  0015D2  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2132  0015D6  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2133  0015DA  2ADE               	incf	postinc2,f,c
  2134  0015DC  0E00               	movlw	0
  2135  0015DE  22DD               	addwfc	postdec2,f,c
  2136                           
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2138  0015E0  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2139  0015E4  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2140  0015E8  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2141  0015EC  0E02               	movlw	2
  2142  0015EE  26DE               	addwf	postinc2,f,c
  2143  0015F0  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2144  0015F4  0E00               	movlw	0
  2145  0015F6  22DD               	addwfc	postdec2,f,c
  2146  0015F8  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2147  0015FC  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2148  001600  50DF               	movf	indf2,w,c
  2149  001602  6FCF               	movwf	vfpfcnvrt@c& (0+255),b
  2150  001604                     
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2153  001604  C061  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2154  001608  C062  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2155  00160C  C0CF  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2156  001610  EC06  F01F         	call	_ctoa	;wreg free
  2157  001614  C01C  F061         	movff	?_ctoa,?_vfpfcnvrt
  2158  001618  C01D  F062         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2159  00161C  EFDB  F00C         	goto	l279
  2160  001620                     l4179:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2164  001620  0E66               	movlw	102
  2165  001622  19CC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2166  001624  A4D8               	btfss	status,2,c
  2167  001626  EF17  F00B         	goto	u5271
  2168  00162A  EF19  F00B         	goto	u5270
  2169  00162E                     u5271:
  2170  00162E  EF59  F00B         	goto	l4191
  2171  001632                     u5270:
  2172  001632                     
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2175  001632  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  001636  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  00163A  CFDE FFF6          	movff	postinc2,tblptrl
  2178  00163E  CFDD FFF7          	movff	postdec2,tblptrh
  2179  001642                     	if	0	;tblptru may be non-zero
  2180  001642                     	endif
  2181  001642                     	if	0	;tblptru may be non-zero
  2182  001642                     	endif
  2183  001642  0008               	tblrd		*
  2184  001644  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2185  001648                     
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2188  001648  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  00164C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  001650  2ADE               	incf	postinc2,f,c
  2191  001652  0E00               	movlw	0
  2192  001654  22DD               	addwfc	postdec2,f,c
  2193  001656                     
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2196  001656  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2197  00165A  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2198  00165E  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2199  001662  0E04               	movlw	4
  2200  001664  26DE               	addwf	postinc2,f,c
  2201  001666  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2202  00166A  0E00               	movlw	0
  2203  00166C  22DD               	addwfc	postdec2,f,c
  2204  00166E  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2205  001672  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2206  001676  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2207  00167A  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2208  00167E  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2209  001682  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2210  001686                     l4187:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2214  001686  C061  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2215  00168A  C062  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2216  00168E  C0C8  F057         	movff	vfpfcnvrt@f,efgtoa@f
  2217  001692  C0C9  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2218  001696  C0CA  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2219  00169A  C0CB  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2220  00169E  C0CF  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  2221  0016A2  EC1C  F003         	call	_efgtoa	;wreg free
  2222  0016A6  C055  F061         	movff	?_efgtoa,?_vfpfcnvrt
  2223  0016AA  C056  F062         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2224  0016AE  EFDB  F00C         	goto	l279
  2225  0016B2                     l4191:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2229  0016B2  0ECC               	movlw	low vfpfcnvrt@ct
  2230  0016B4  6E01               	movwf	strncmp@_l^0,c
  2231  0016B6  0E00               	movlw	high vfpfcnvrt@ct
  2232  0016B8  6E02               	movwf	(strncmp@_l+1)^0,c
  2233  0016BA  0E30               	movlw	low STR_13
  2234  0016BC  6E03               	movwf	strncmp@_r^0,c
  2235  0016BE  0E06               	movlw	high STR_13
  2236  0016C0  6E04               	movwf	(strncmp@_r+1)^0,c
  2237  0016C2  0E00               	movlw	0
  2238  0016C4  6E06               	movwf	(strncmp@n+1)^0,c
  2239  0016C6  0E02               	movlw	2
  2240  0016C8  6E05               	movwf	strncmp@n^0,c
  2241  0016CA  ECE5  F017         	call	_strncmp	;wreg free
  2242  0016CE  5001               	movf	?_strncmp^0,w,c
  2243  0016D0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2244  0016D2  A4D8               	btfss	status,2,c
  2245  0016D4  EF6E  F00B         	goto	u5281
  2246  0016D8  EF70  F00B         	goto	u5280
  2247  0016DC                     u5281:
  2248  0016DC  EFEC  F00B         	goto	l4207
  2249  0016E0                     u5280:
  2250  0016E0                     
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2252  0016E0  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2253  0016E4  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2254  0016E8  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2255  0016EC  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2256  0016F0  0E01               	movlw	1
  2257  0016F2  2667               	addwf	??_vfpfcnvrt^0,f,c
  2258  0016F4  0E00               	movlw	0
  2259  0016F6  2268               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2260  0016F8  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2261  0016FC  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2262  001700                     	if	0	;tblptru may be non-zero
  2263  001700                     	endif
  2264  001700                     	if	0	;tblptru may be non-zero
  2265  001700                     	endif
  2266  001700  0008               	tblrd		*
  2267  001702  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2268  001706  0EBF               	movlw	191
  2269  001708  6E67               	movwf	??_vfpfcnvrt^0,c
  2270  00170A  0EFF               	movlw	255
  2271  00170C  6E68               	movwf	(??_vfpfcnvrt+1)^0,c
  2272  00170E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2273  001712  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2274  001716  CFDE FFF6          	movff	postinc2,tblptrl
  2275  00171A  CFDD FFF7          	movff	postdec2,tblptrh
  2276  00171E                     	if	0	;tblptru may be non-zero
  2277  00171E                     	endif
  2278  00171E                     	if	0	;tblptru may be non-zero
  2279  00171E                     	endif
  2280  00171E  0008               	tblrd		*
  2281  001720  50F5               	movf	tablat,w,c
  2282  001722  6E69               	movwf	(??_vfpfcnvrt+2)^0,c
  2283  001724  6A6A               	clrf	(??_vfpfcnvrt+3)^0,c
  2284  001726  5067               	movf	??_vfpfcnvrt^0,w,c
  2285  001728  2669               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2286  00172A  5068               	movf	(??_vfpfcnvrt+1)^0,w,c
  2287  00172C  226A               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2288  00172E  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  2289  001730  E10A               	bnz	u5290
  2290  001732  0E1A               	movlw	26
  2291  001734  5C69               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2292  001736  A0D8               	btfss	status,0,c
  2293  001738  EFA0  F00B         	goto	u5291
  2294  00173C  EFA3  F00B         	goto	u5290
  2295  001740                     u5291:
  2296  001740  0E01               	movlw	1
  2297  001742  EFA4  F00B         	goto	u5300
  2298  001746                     u5290:
  2299  001746  0E00               	movlw	0
  2300  001748                     u5300:
  2301  001748  0100               	movlb	0	; () banked
  2302  00174A  6FBE               	movwf	_vfpfcnvrt$419& (0+255),b
  2303  00174C  6BBF               	clrf	(_vfpfcnvrt$419+1)& (0+255),b
  2304  00174E                     
  2305                           ; BSR set to: 0
  2306  00174E  51BE               	movf	_vfpfcnvrt$419& (0+255),w,b
  2307  001750  11BF               	iorwf	(_vfpfcnvrt$419+1)& (0+255),w,b
  2308  001752  B4D8               	btfsc	status,2,c
  2309  001754  EFAE  F00B         	goto	u5311
  2310  001758  EFB0  F00B         	goto	u5310
  2311  00175C                     u5311:
  2312  00175C  EFCA  F00B         	goto	l4201
  2313  001760                     u5310:
  2314  001760                     
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2317  001760  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2318  001764  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2319  001768  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2320  00176C  0E04               	movlw	4
  2321  00176E  26DE               	addwf	postinc2,f,c
  2322  001770  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2323  001774  0E00               	movlw	0
  2324  001776  22DD               	addwfc	postdec2,f,c
  2325  001778  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2326  00177C  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2327  001780  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2328  001784  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2329  001788  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2330  00178C  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2331                           
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2333  001790  EFE2  F00B         	goto	l287
  2334  001794                     l4201:
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2338  001794  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2339  001798  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2340  00179C  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2341  0017A0  0E04               	movlw	4
  2342  0017A2  26DE               	addwf	postinc2,f,c
  2343  0017A4  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2344  0017A8  0E00               	movlw	0
  2345  0017AA  22DD               	addwfc	postdec2,f,c
  2346  0017AC  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2347  0017B0  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2348  0017B4  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2349  0017B8  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2350  0017BC  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2351  0017C0  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2352  0017C4                     l287:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2356  0017C4  0E02               	movlw	2
  2357  0017C6  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  0017CA  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  0017CE  26DE               	addwf	postinc2,f,c
  2360  0017D0  0E00               	movlw	0
  2361  0017D2  22DD               	addwfc	postdec2,f,c
  2362  0017D4  EF43  F00B         	goto	l4187
  2363  0017D8                     l4207:
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2366  0017D8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367  0017DC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368  0017E0  CFDE FFF6          	movff	postinc2,tblptrl
  2369  0017E4  CFDD FFF7          	movff	postdec2,tblptrh
  2370  0017E8                     	if	0	;tblptru may be non-zero
  2371  0017E8                     	endif
  2372  0017E8                     	if	0	;tblptru may be non-zero
  2373  0017E8                     	endif
  2374  0017E8  0008               	tblrd		*
  2375  0017EA  50F5               	movf	tablat,w,c
  2376  0017EC  0A75               	xorlw	117
  2377  0017EE  A4D8               	btfss	status,2,c
  2378  0017F0  EFFC  F00B         	goto	u5321
  2379  0017F4  EFFE  F00B         	goto	u5320
  2380  0017F8                     u5321:
  2381  0017F8  EF40  F00C         	goto	l4215
  2382  0017FC                     u5320:
  2383  0017FC                     
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2385  0017FC  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2386  001800  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2387  001804  2ADE               	incf	postinc2,f,c
  2388  001806  0E00               	movlw	0
  2389  001808  22DD               	addwfc	postdec2,f,c
  2390                           
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2392  00180A  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2393  00180E  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2394  001812  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2395  001816  0E02               	movlw	2
  2396  001818  26DE               	addwf	postinc2,f,c
  2397  00181A  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2398  00181E  0E00               	movlw	0
  2399  001820  22DD               	addwfc	postdec2,f,c
  2400  001822  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2401  001826  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2402  00182A  CFDE F069          	movff	postinc2,??_vfpfcnvrt+2
  2403  00182E  CFDD F06A          	movff	postdec2,??_vfpfcnvrt+3
  2404  001832  C069  F0C0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2405  001836  C06A  F0C1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2406  00183A  0100               	movlb	0	; () banked
  2407  00183C  6BC2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2408  00183E  6BC3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2409  001840  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2410  001842  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2411  001844  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2412  001846  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2413  001848                     l4211:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2417  001848  C061  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2418  00184C  C062  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2419  001850  C0C0  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2420  001854  C0C1  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2421  001858  C0C2  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2422  00185C  C0C3  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2423  001860  C0C4  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2424  001864  C0C5  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2425  001868  C0C6  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2426  00186C  C0C7  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2427  001870  EC41  F015         	call	_utoa	;wreg free
  2428  001874  C01C  F061         	movff	?_utoa,?_vfpfcnvrt
  2429  001878  C01D  F062         	movff	?_utoa+1,?_vfpfcnvrt+1
  2430  00187C  EFDB  F00C         	goto	l279
  2431  001880                     l4215:
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  2434  001880  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  001884  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  001888  CFDE F001          	movff	postinc2,strncmp@_l
  2437  00188C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2438  001890  0E33               	movlw	low STR_18
  2439  001892  6E03               	movwf	strncmp@_r^0,c
  2440  001894  0E06               	movlw	high STR_18
  2441  001896  6E04               	movwf	(strncmp@_r+1)^0,c
  2442  001898  0E00               	movlw	0
  2443  00189A  6E06               	movwf	(strncmp@n+1)^0,c
  2444  00189C  0E02               	movlw	2
  2445  00189E  6E05               	movwf	strncmp@n^0,c
  2446  0018A0  ECE5  F017         	call	_strncmp	;wreg free
  2447  0018A4  5001               	movf	?_strncmp^0,w,c
  2448  0018A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2449  0018A8  A4D8               	btfss	status,2,c
  2450  0018AA  EF59  F00C         	goto	u5331
  2451  0018AE  EF5B  F00C         	goto	u5330
  2452  0018B2                     u5331:
  2453  0018B2  EF8A  F00C         	goto	l4223
  2454  0018B6                     u5330:
  2455  0018B6                     
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  2457  0018B6  0E02               	movlw	2
  2458  0018B8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2459  0018BC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  0018C0  26DE               	addwf	postinc2,f,c
  2461  0018C2  0E00               	movlw	0
  2462  0018C4  22DD               	addwfc	postdec2,f,c
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  2465  0018C6  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2466  0018CA  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2467  0018CE  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2468  0018D2  0E04               	movlw	4
  2469  0018D4  26DE               	addwf	postinc2,f,c
  2470  0018D6  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2471  0018DA  0E00               	movlw	0
  2472  0018DC  22DD               	addwfc	postdec2,f,c
  2473  0018DE  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2474  0018E2  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2475  0018E6  CFDE F069          	movff	postinc2,??_vfpfcnvrt+2
  2476  0018EA  CFDE F06A          	movff	postinc2,??_vfpfcnvrt+3
  2477  0018EE  CFDE F06B          	movff	postinc2,??_vfpfcnvrt+4
  2478  0018F2  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+5
  2479  0018F6  5069               	movf	(??_vfpfcnvrt+2)^0,w,c
  2480  0018F8  0100               	movlb	0	; () banked
  2481  0018FA  6FC0               	movwf	vfpfcnvrt@llu& (0+255),b
  2482  0018FC  506A               	movf	(??_vfpfcnvrt+3)^0,w,c
  2483  0018FE  6FC1               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  2484  001900  506B               	movf	(??_vfpfcnvrt+4)^0,w,c
  2485  001902  6FC2               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  2486  001904  506C               	movf	(??_vfpfcnvrt+5)^0,w,c
  2487  001906  6FC3               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  2488  001908  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2489  00190A  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2490  00190C  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2491  00190E  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2492  001910  EF24  F00C         	goto	l4211
  2493  001914                     l4223:
  2494                           
  2495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2496  001914  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497  001918  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498  00191C  CFDE FFF6          	movff	postinc2,tblptrl
  2499  001920  CFDD FFF7          	movff	postdec2,tblptrh
  2500  001924                     	if	0	;tblptru may be non-zero
  2501  001924                     	endif
  2502  001924                     	if	0	;tblptru may be non-zero
  2503  001924                     	endif
  2504  001924  0008               	tblrd		*
  2505  001926  50F5               	movf	tablat,w,c
  2506  001928  0A25               	xorlw	37
  2507  00192A  A4D8               	btfss	status,2,c
  2508  00192C  EF9A  F00C         	goto	u5341
  2509  001930  EF9C  F00C         	goto	u5340
  2510  001934                     u5341:
  2511  001934  EFB3  F00C         	goto	l4233
  2512  001938                     u5340:
  2513  001938                     
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2515  001938  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516  00193C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517  001940  2ADE               	incf	postinc2,f,c
  2518  001942  0E00               	movlw	0
  2519  001944  22DD               	addwfc	postdec2,f,c
  2520  001946                     
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2522  001946  0E00               	movlw	0
  2523  001948  6E02               	movwf	(fputc@c+1)^0,c
  2524  00194A  0E25               	movlw	37
  2525  00194C  6E01               	movwf	fputc@c^0,c
  2526  00194E  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2527  001952  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2528  001956  ECCE  F01B         	call	_fputc	;wreg free
  2529  00195A                     l4229:
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2532  00195A  0E00               	movlw	0
  2533  00195C  6E62               	movwf	(?_vfpfcnvrt+1)^0,c
  2534  00195E  0E01               	movlw	1
  2535  001960  6E61               	movwf	?_vfpfcnvrt^0,c
  2536  001962  EFDB  F00C         	goto	l279
  2537  001966                     l4233:
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2540  001966  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2541  00196A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2542  00196E  2ADE               	incf	postinc2,f,c
  2543  001970  0E00               	movlw	0
  2544  001972  22DD               	addwfc	postdec2,f,c
  2545  001974                     
  2546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2547  001974  0E00               	movlw	0
  2548  001976  6E62               	movwf	(?_vfpfcnvrt+1)^0,c
  2549  001978  0E00               	movlw	0
  2550  00197A  6E61               	movwf	?_vfpfcnvrt^0,c
  2551  00197C  EFDB  F00C         	goto	l279
  2552  001980                     l4239:
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2555  001980  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2556  001984  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2557  001988  CFDE FFF6          	movff	postinc2,tblptrl
  2558  00198C  CFDD FFF7          	movff	postdec2,tblptrh
  2559  001990                     	if	0	;tblptru may be non-zero
  2560  001990                     	endif
  2561  001990                     	if	0	;tblptru may be non-zero
  2562  001990                     	endif
  2563  001990  0008               	tblrd		*
  2564  001992  50F5               	movf	tablat,w,c
  2565  001994  6E01               	movwf	fputc@c^0,c
  2566  001996  6A02               	clrf	(fputc@c+1)^0,c
  2567  001998  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2568  00199C  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2569  0019A0  ECCE  F01B         	call	_fputc	;wreg free
  2570  0019A4                     
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2572  0019A4  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  0019A8  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  0019AC  2ADE               	incf	postinc2,f,c
  2575  0019AE  0E00               	movlw	0
  2576  0019B0  22DD               	addwfc	postdec2,f,c
  2577  0019B2  EFAD  F00C         	goto	l4229
  2578  0019B6                     l279:
  2579  0019B6  0012               	return		;funcret
  2580  0019B8                     __end_of_vfpfcnvrt:
  2581                           	opt callstack 0
  2582                           
  2583 ;; *************** function _utoa *****************
  2584 ;; Defined at:
  2585 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2588 ;;		 -> sprintf@f(6), 
  2589 ;;  d               8   29[COMRAM] unsigned long long 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  n               8   49[COMRAM] unsigned long long 
  2592 ;;  i               2   57[COMRAM] int 
  2593 ;;  w               2   47[COMRAM] int 
  2594 ;;  p               2   45[COMRAM] int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2   27[COMRAM] int 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2604 ;;      Params:        10       0       0       0       0       0       0
  2605 ;;      Locals:        14       0       0       0       0       0       0
  2606 ;;      Temps:          8       0       0       0       0       0       0
  2607 ;;      Totals:        32       0       0       0       0       0       0
  2608 ;;Total ram usage:       32 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    4
  2611 ;; This function calls:
  2612 ;;		___lodiv
  2613 ;;		___lomod
  2614 ;;		_pad
  2615 ;; This function is called by:
  2616 ;;		_vfpfcnvrt
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text4
  2621  002A82                     __ptext4:
  2622                           	opt callstack 0
  2623  002A82                     _utoa:
  2624                           	opt callstack 23
  2625  002A82                     
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2627  002A82  0100               	movlb	0	; () banked
  2628  002A84  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2629  002A86  EF47  F015         	goto	u4901
  2630  002A8A  EF49  F015         	goto	u4900
  2631  002A8E                     u4901:
  2632  002A8E  EF4A  F015         	goto	l3969
  2633  002A92                     u4900:
  2634  002A92                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  2637  002A92  93F2               	bcf	_flags& (0+255),1,b
  2638  002A94                     l3969:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  2642  002A94  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2643  002A96  EF57  F015         	goto	u4910
  2644  002A9A  51F1               	movf	(_prec+1)& (0+255),w,b
  2645  002A9C  E106               	bnz	u4911
  2646  002A9E  05F0               	decf	_prec& (0+255),w,b
  2647  002AA0  B0D8               	btfsc	status,0,c
  2648  002AA2  EF55  F015         	goto	u4911
  2649  002AA6  EF57  F015         	goto	u4910
  2650  002AAA                     u4911:
  2651  002AAA  EF5D  F015         	goto	l230
  2652  002AAE                     u4910:
  2653  002AAE                     
  2654                           ; BSR set to: 0
  2655  002AAE  0E00               	movlw	0
  2656  002AB0  6E2F               	movwf	(utoa@p+1)^0,c
  2657  002AB2  0E01               	movlw	1
  2658  002AB4  6E2E               	movwf	utoa@p^0,c
  2659  002AB6  EF61  F015         	goto	l232
  2660  002ABA                     l230:
  2661                           
  2662                           ; BSR set to: 0
  2663  002ABA  C0F0  F02E         	movff	_prec,utoa@p
  2664  002ABE  C0F1  F02F         	movff	_prec+1,utoa@p+1
  2665  002AC2                     l232:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  2669  002AC2  C0EE  F030         	movff	_width,utoa@w
  2670  002AC6  C0EF  F031         	movff	_width+1,utoa@w+1
  2671                           
  2672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  2673  002ACA  C01E  F032         	movff	utoa@d,utoa@n
  2674  002ACE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2675  002AD2  C020  F034         	movff	utoa@d+2,utoa@n+2
  2676  002AD6  C021  F035         	movff	utoa@d+3,utoa@n+3
  2677  002ADA  C022  F036         	movff	utoa@d+4,utoa@n+4
  2678  002ADE  C023  F037         	movff	utoa@d+5,utoa@n+5
  2679  002AE2  C024  F038         	movff	utoa@d+6,utoa@n+6
  2680  002AE6  C025  F039         	movff	utoa@d+7,utoa@n+7
  2681  002AEA                     
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  2684  002AEA  0E00               	movlw	0
  2685  002AEC  6E3B               	movwf	(utoa@i+1)^0,c
  2686  002AEE  0E4F               	movlw	79
  2687  002AF0  6E3A               	movwf	utoa@i^0,c
  2688  002AF2                     
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  2691  002AF2  0E00               	movlw	0
  2692  002AF4  0101               	movlb	1	; () banked
  2693  002AF6  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2694                           
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2696  002AF8  EFF4  F015         	goto	l3987
  2697  002AFC                     l3977:
  2698                           
  2699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  2700  002AFC  063A               	decf	utoa@i^0,f,c
  2701  002AFE  A0D8               	btfss	status,0,c
  2702  002B00  063B               	decf	(utoa@i+1)^0,f,c
  2703  002B02                     
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2705  002B02  0E00               	movlw	low _dbuf
  2706  002B04  243A               	addwf	utoa@i^0,w,c
  2707  002B06  6ED9               	movwf	fsr2l,c
  2708  002B08  0E01               	movlw	high _dbuf
  2709  002B0A  203B               	addwfc	(utoa@i+1)^0,w,c
  2710  002B0C  6EDA               	movwf	fsr2h,c
  2711  002B0E  C032  F001         	movff	utoa@n,___lomod@dividend
  2712  002B12  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2713  002B16  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2714  002B1A  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2715  002B1E  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2716  002B22  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2717  002B26  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2718  002B2A  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2719  002B2E  0E0A               	movlw	10
  2720  002B30  6E09               	movwf	___lomod@divisor^0,c
  2721  002B32  0E00               	movlw	0
  2722  002B34  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2723  002B36  0E00               	movlw	0
  2724  002B38  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2725  002B3A  0E00               	movlw	0
  2726  002B3C  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2727  002B3E  0E00               	movlw	0
  2728  002B40  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2729  002B42  0E00               	movlw	0
  2730  002B44  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2731  002B46  0E00               	movlw	0
  2732  002B48  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2733  002B4A  0E00               	movlw	0
  2734  002B4C  6E10               	movwf	(___lomod@divisor+7)^0,c
  2735  002B4E  EC66  F01B         	call	___lomod	;wreg free
  2736  002B52  C001  F026         	movff	?___lomod,??_utoa
  2737  002B56  C002  F027         	movff	?___lomod+1,??_utoa+1
  2738  002B5A  C003  F028         	movff	?___lomod+2,??_utoa+2
  2739  002B5E  C004  F029         	movff	?___lomod+3,??_utoa+3
  2740  002B62  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2741  002B66  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2742  002B6A  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2743  002B6E  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2744  002B72  5026               	movf	??_utoa^0,w,c
  2745  002B74  0F30               	addlw	48
  2746  002B76  6EDF               	movwf	indf2,c
  2747  002B78                     
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2749  002B78  062E               	decf	utoa@p^0,f,c
  2750  002B7A  A0D8               	btfss	status,0,c
  2751  002B7C  062F               	decf	(utoa@p+1)^0,f,c
  2752  002B7E                     
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2754  002B7E  0630               	decf	utoa@w^0,f,c
  2755  002B80  A0D8               	btfss	status,0,c
  2756  002B82  0631               	decf	(utoa@w+1)^0,f,c
  2757  002B84                     
  2758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2759  002B84  C032  F001         	movff	utoa@n,___lodiv@dividend
  2760  002B88  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2761  002B8C  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2762  002B90  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2763  002B94  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2764  002B98  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2765  002B9C  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2766  002BA0  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2767  002BA4  0E0A               	movlw	10
  2768  002BA6  6E09               	movwf	___lodiv@divisor^0,c
  2769  002BA8  0E00               	movlw	0
  2770  002BAA  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2771  002BAC  0E00               	movlw	0
  2772  002BAE  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2773  002BB0  0E00               	movlw	0
  2774  002BB2  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2775  002BB4  0E00               	movlw	0
  2776  002BB6  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2777  002BB8  0E00               	movlw	0
  2778  002BBA  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2779  002BBC  0E00               	movlw	0
  2780  002BBE  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2781  002BC0  0E00               	movlw	0
  2782  002BC2  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2783  002BC4  EC7C  F01A         	call	___lodiv	;wreg free
  2784  002BC8  C001  F032         	movff	?___lodiv,utoa@n
  2785  002BCC  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2786  002BD0  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2787  002BD4  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2788  002BD8  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2789  002BDC  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2790  002BE0  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2791  002BE4  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2792  002BE8                     l3987:
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2795  002BE8  503A               	movf	utoa@i^0,w,c
  2796  002BEA  103B               	iorwf	(utoa@i+1)^0,w,c
  2797  002BEC  B4D8               	btfsc	status,2,c
  2798  002BEE  EFFB  F015         	goto	u4921
  2799  002BF2  EFFD  F015         	goto	u4920
  2800  002BF6                     u4921:
  2801  002BF6  EF2E  F016         	goto	l3997
  2802  002BFA                     u4920:
  2803  002BFA  5032               	movf	utoa@n^0,w,c
  2804  002BFC  1033               	iorwf	(utoa@n+1)^0,w,c
  2805  002BFE  1034               	iorwf	(utoa@n+2)^0,w,c
  2806  002C00  1035               	iorwf	(utoa@n+3)^0,w,c
  2807  002C02  1036               	iorwf	(utoa@n+4)^0,w,c
  2808  002C04  1037               	iorwf	(utoa@n+5)^0,w,c
  2809  002C06  1038               	iorwf	(utoa@n+6)^0,w,c
  2810  002C08  1039               	iorwf	(utoa@n+7)^0,w,c
  2811  002C0A  A4D8               	btfss	status,2,c
  2812  002C0C  EF0A  F016         	goto	u4931
  2813  002C10  EF0C  F016         	goto	u4930
  2814  002C14                     u4931:
  2815  002C14  EF7E  F015         	goto	l3977
  2816  002C18                     u4930:
  2817  002C18  BE2F               	btfsc	(utoa@p+1)^0,7,c
  2818  002C1A  EF19  F016         	goto	u4940
  2819  002C1E  502F               	movf	(utoa@p+1)^0,w,c
  2820  002C20  E106               	bnz	u4941
  2821  002C22  042E               	decf	utoa@p^0,w,c
  2822  002C24  B0D8               	btfsc	status,0,c
  2823  002C26  EF17  F016         	goto	u4941
  2824  002C2A  EF19  F016         	goto	u4940
  2825  002C2E                     u4941:
  2826  002C2E  EF7E  F015         	goto	l3977
  2827  002C32                     u4940:
  2828  002C32  BE31               	btfsc	(utoa@w+1)^0,7,c
  2829  002C34  EF24  F016         	goto	u4951
  2830  002C38  5031               	movf	(utoa@w+1)^0,w,c
  2831  002C3A  E108               	bnz	u4950
  2832  002C3C  0430               	decf	utoa@w^0,w,c
  2833  002C3E  A0D8               	btfss	status,0,c
  2834  002C40  EF24  F016         	goto	u4951
  2835  002C44  EF26  F016         	goto	u4950
  2836  002C48                     u4951:
  2837  002C48  EF2E  F016         	goto	l3997
  2838  002C4C                     u4950:
  2839  002C4C  0100               	movlb	0	; () banked
  2840  002C4E  B3F2               	btfsc	_flags& (0+255),1,b
  2841  002C50  EF2C  F016         	goto	u4961
  2842  002C54  EF2E  F016         	goto	u4960
  2843  002C58                     u4961:
  2844  002C58  EF7E  F015         	goto	l3977
  2845  002C5C                     u4960:
  2846  002C5C                     l3997:
  2847                           
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2849  002C5C  C01C  F011         	movff	utoa@fp,pad@fp
  2850  002C60  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2851  002C64  0E00               	movlw	low _dbuf
  2852  002C66  243A               	addwf	utoa@i^0,w,c
  2853  002C68  6E13               	movwf	pad@buf^0,c
  2854  002C6A  0E01               	movlw	high _dbuf
  2855  002C6C  203B               	addwfc	(utoa@i+1)^0,w,c
  2856  002C6E  6E14               	movwf	(pad@buf+1)^0,c
  2857  002C70  C030  F015         	movff	utoa@w,pad@p
  2858  002C74  C031  F016         	movff	utoa@w+1,pad@p+1
  2859  002C78  EC33  F01C         	call	_pad	;wreg free
  2860  002C7C  C011  F01C         	movff	?_pad,?_utoa
  2861  002C80  C012  F01D         	movff	?_pad+1,?_utoa+1
  2862  002C84  0012               	return		;funcret
  2863  002C86                     __end_of_utoa:
  2864                           	opt callstack 0
  2865                           
  2866 ;; *************** function ___lomod *****************
  2867 ;; Defined at:
  2868 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  dividend        8    0[COMRAM] unsigned long long 
  2871 ;;  divisor         8    8[COMRAM] unsigned long long 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  counter         1   16[COMRAM] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  8    0[COMRAM] unsigned long long 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2883 ;;      Params:        16       0       0       0       0       0       0
  2884 ;;      Locals:         1       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0
  2886 ;;      Totals:        17       0       0       0       0       0       0
  2887 ;;Total ram usage:       17 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_utoa
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text5
  2897  0036CC                     __ptext5:
  2898                           	opt callstack 0
  2899  0036CC                     ___lomod:
  2900                           	opt callstack 26
  2901  0036CC  5009               	movf	___lomod@divisor^0,w,c
  2902  0036CE  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2903  0036D0  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2904  0036D2  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2905  0036D4  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2906  0036D6  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2907  0036D8  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2908  0036DA  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2909  0036DC  B4D8               	btfsc	status,2,c
  2910  0036DE  EF73  F01B         	goto	u4311
  2911  0036E2  EF75  F01B         	goto	u4310
  2912  0036E6                     u4311:
  2913  0036E6  EFBD  F01B         	goto	l747
  2914  0036EA                     u4310:
  2915  0036EA  0E01               	movlw	1
  2916  0036EC  6E11               	movwf	___lomod@counter^0,c
  2917  0036EE  EF83  F01B         	goto	l3619
  2918  0036F2                     l3617:
  2919  0036F2  90D8               	bcf	status,0,c
  2920  0036F4  3609               	rlcf	___lomod@divisor^0,f,c
  2921  0036F6  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2922  0036F8  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2923  0036FA  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2924  0036FC  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2925  0036FE  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2926  003700  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2927  003702  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2928  003704  2A11               	incf	___lomod@counter^0,f,c
  2929  003706                     l3619:
  2930  003706  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2931  003708  EF88  F01B         	goto	u4321
  2932  00370C  EF8A  F01B         	goto	u4320
  2933  003710                     u4321:
  2934  003710  EF79  F01B         	goto	l3617
  2935  003714                     u4320:
  2936  003714                     l3621:
  2937  003714  5009               	movf	___lomod@divisor^0,w,c
  2938  003716  5C01               	subwf	___lomod@dividend^0,w,c
  2939  003718  500A               	movf	(___lomod@divisor+1)^0,w,c
  2940  00371A  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2941  00371C  500B               	movf	(___lomod@divisor+2)^0,w,c
  2942  00371E  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2943  003720  500C               	movf	(___lomod@divisor+3)^0,w,c
  2944  003722  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2945  003724  500D               	movf	(___lomod@divisor+4)^0,w,c
  2946  003726  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2947  003728  500E               	movf	(___lomod@divisor+5)^0,w,c
  2948  00372A  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2949  00372C  500F               	movf	(___lomod@divisor+6)^0,w,c
  2950  00372E  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2951  003730  5010               	movf	(___lomod@divisor+7)^0,w,c
  2952  003732  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2953  003734  A0D8               	btfss	status,0,c
  2954  003736  EF9F  F01B         	goto	u4331
  2955  00373A  EFA1  F01B         	goto	u4330
  2956  00373E                     u4331:
  2957  00373E  EFB1  F01B         	goto	l3625
  2958  003742                     u4330:
  2959  003742  5009               	movf	___lomod@divisor^0,w,c
  2960  003744  5E01               	subwf	___lomod@dividend^0,f,c
  2961  003746  500A               	movf	(___lomod@divisor+1)^0,w,c
  2962  003748  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2963  00374A  500B               	movf	(___lomod@divisor+2)^0,w,c
  2964  00374C  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2965  00374E  500C               	movf	(___lomod@divisor+3)^0,w,c
  2966  003750  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2967  003752  500D               	movf	(___lomod@divisor+4)^0,w,c
  2968  003754  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2969  003756  500E               	movf	(___lomod@divisor+5)^0,w,c
  2970  003758  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2971  00375A  500F               	movf	(___lomod@divisor+6)^0,w,c
  2972  00375C  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2973  00375E  5010               	movf	(___lomod@divisor+7)^0,w,c
  2974  003760  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2975  003762                     l3625:
  2976  003762  90D8               	bcf	status,0,c
  2977  003764  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2978  003766  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2979  003768  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2980  00376A  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2981  00376C  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2982  00376E  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2983  003770  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2984  003772  3209               	rrcf	___lomod@divisor^0,f,c
  2985  003774  2E11               	decfsz	___lomod@counter^0,f,c
  2986  003776  EF8A  F01B         	goto	l3621
  2987  00377A                     l747:
  2988  00377A  C001  F001         	movff	___lomod@dividend,?___lomod
  2989  00377E  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2990  003782  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2991  003786  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2992  00378A  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2993  00378E  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2994  003792  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2995  003796  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2996  00379A  0012               	return		;funcret
  2997  00379C                     __end_of___lomod:
  2998                           	opt callstack 0
  2999                           
  3000 ;; *************** function ___lodiv *****************
  3001 ;; Defined at:
  3002 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  dividend        8    0[COMRAM] unsigned long long 
  3005 ;;  divisor         8    8[COMRAM] unsigned long long 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  quotient        8   16[COMRAM] unsigned long long 
  3008 ;;  counter         1   24[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  8    0[COMRAM] unsigned long long 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3018 ;;      Params:        16       0       0       0       0       0       0
  3019 ;;      Locals:         9       0       0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0
  3021 ;;      Totals:        25       0       0       0       0       0       0
  3022 ;;Total ram usage:       25 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_utoa
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text6
  3032  0034F8                     __ptext6:
  3033                           	opt callstack 0
  3034  0034F8                     ___lodiv:
  3035                           	opt callstack 26
  3036  0034F8  EE20  F011         	lfsr	2,___lodiv@quotient
  3037  0034FC  0E07               	movlw	7
  3038  0034FE                     u4271:
  3039  0034FE  6ADE               	clrf	postinc2,c
  3040  003500  06E8               	decf	wreg,f,c
  3041  003502  E2FD               	bc	u4271
  3042  003504  5009               	movf	___lodiv@divisor^0,w,c
  3043  003506  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  3044  003508  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  3045  00350A  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  3046  00350C  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  3047  00350E  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  3048  003510  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  3049  003512  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  3050  003514  B4D8               	btfsc	status,2,c
  3051  003516  EF8F  F01A         	goto	u4281
  3052  00351A  EF91  F01A         	goto	u4280
  3053  00351E                     u4281:
  3054  00351E  EFE3  F01A         	goto	l737
  3055  003522                     u4280:
  3056  003522  0E01               	movlw	1
  3057  003524  6E19               	movwf	___lodiv@counter^0,c
  3058  003526  EF9F  F01A         	goto	l3599
  3059  00352A                     l3597:
  3060  00352A  90D8               	bcf	status,0,c
  3061  00352C  3609               	rlcf	___lodiv@divisor^0,f,c
  3062  00352E  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  3063  003530  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  3064  003532  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  3065  003534  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  3066  003536  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  3067  003538  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  3068  00353A  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  3069  00353C  2A19               	incf	___lodiv@counter^0,f,c
  3070  00353E                     l3599:
  3071  00353E  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  3072  003540  EFA4  F01A         	goto	u4291
  3073  003544  EFA6  F01A         	goto	u4290
  3074  003548                     u4291:
  3075  003548  EF95  F01A         	goto	l3597
  3076  00354C                     u4290:
  3077  00354C                     l3601:
  3078  00354C  90D8               	bcf	status,0,c
  3079  00354E  3611               	rlcf	___lodiv@quotient^0,f,c
  3080  003550  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  3081  003552  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  3082  003554  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  3083  003556  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  3084  003558  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  3085  00355A  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  3086  00355C  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  3087  00355E  5009               	movf	___lodiv@divisor^0,w,c
  3088  003560  5C01               	subwf	___lodiv@dividend^0,w,c
  3089  003562  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3090  003564  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  3091  003566  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3092  003568  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  3093  00356A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3094  00356C  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  3095  00356E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3096  003570  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  3097  003572  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3098  003574  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  3099  003576  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3100  003578  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  3101  00357A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3102  00357C  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  3103  00357E  A0D8               	btfss	status,0,c
  3104  003580  EFC4  F01A         	goto	u4301
  3105  003584  EFC6  F01A         	goto	u4300
  3106  003588                     u4301:
  3107  003588  EFD7  F01A         	goto	l3609
  3108  00358C                     u4300:
  3109  00358C  5009               	movf	___lodiv@divisor^0,w,c
  3110  00358E  5E01               	subwf	___lodiv@dividend^0,f,c
  3111  003590  500A               	movf	(___lodiv@divisor+1)^0,w,c
  3112  003592  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  3113  003594  500B               	movf	(___lodiv@divisor+2)^0,w,c
  3114  003596  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  3115  003598  500C               	movf	(___lodiv@divisor+3)^0,w,c
  3116  00359A  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  3117  00359C  500D               	movf	(___lodiv@divisor+4)^0,w,c
  3118  00359E  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  3119  0035A0  500E               	movf	(___lodiv@divisor+5)^0,w,c
  3120  0035A2  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  3121  0035A4  500F               	movf	(___lodiv@divisor+6)^0,w,c
  3122  0035A6  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  3123  0035A8  5010               	movf	(___lodiv@divisor+7)^0,w,c
  3124  0035AA  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  3125  0035AC  8011               	bsf	___lodiv@quotient^0,0,c
  3126  0035AE                     l3609:
  3127  0035AE  90D8               	bcf	status,0,c
  3128  0035B0  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  3129  0035B2  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  3130  0035B4  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  3131  0035B6  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  3132  0035B8  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  3133  0035BA  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  3134  0035BC  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  3135  0035BE  3209               	rrcf	___lodiv@divisor^0,f,c
  3136  0035C0  2E19               	decfsz	___lodiv@counter^0,f,c
  3137  0035C2  EFA6  F01A         	goto	l3601
  3138  0035C6                     l737:
  3139  0035C6  C011  F001         	movff	___lodiv@quotient,?___lodiv
  3140  0035CA  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  3141  0035CE  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  3142  0035D2  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  3143  0035D6  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  3144  0035DA  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  3145  0035DE  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  3146  0035E2  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  3147  0035E6  0012               	return		;funcret
  3148  0035E8                     __end_of___lodiv:
  3149                           	opt callstack 0
  3150                           
  3151 ;; *************** function _strncmp *****************
  3152 ;; Defined at:
  3153 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3156 ;;		 -> vfpfcnvrt@ct(3), STR_4(9), STR_3(10), 
  3157 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3158 ;;		 -> STR_20(3), STR_15(3), 
  3159 ;;  n               2    4[COMRAM] unsigned int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3162 ;;		 -> STR_20(3), STR_15(3), 
  3163 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3164 ;;		 -> vfpfcnvrt@ct(3), STR_4(9), STR_3(10), 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2    0[COMRAM] int 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         6       0       0       0       0       0       0
  3175 ;;      Locals:         4       0       0       0       0       0       0
  3176 ;;      Temps:          1       0       0       0       0       0       0
  3177 ;;      Totals:        11       0       0       0       0       0       0
  3178 ;;Total ram usage:       11 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_vfpfcnvrt
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text7
  3188  002FCA                     __ptext7:
  3189                           	opt callstack 0
  3190  002FCA                     _strncmp:
  3191                           	opt callstack 27
  3192  002FCA  C001  F008         	movff	strncmp@_l,strncmp@l
  3193  002FCE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3194  002FD2  C003  F00A         	movff	strncmp@_r,strncmp@r
  3195  002FD6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3196  002FDA  0605               	decf	strncmp@n^0,f,c
  3197  002FDC  A0D8               	btfss	status,0,c
  3198  002FDE  0606               	decf	(strncmp@n+1)^0,f,c
  3199  002FE0  2805               	incf	strncmp@n^0,w,c
  3200  002FE2  E106               	bnz	u5041
  3201  002FE4  2806               	incf	(strncmp@n+1)^0,w,c
  3202  002FE6  A4D8               	btfss	status,2,c
  3203  002FE8  EFF8  F017         	goto	u5041
  3204  002FEC  EFFA  F017         	goto	u5040
  3205  002FF0                     u5041:
  3206  002FF0  EF07  F018         	goto	l4051
  3207  002FF4                     u5040:
  3208  002FF4  0E00               	movlw	0
  3209  002FF6  6E02               	movwf	(?_strncmp+1)^0,c
  3210  002FF8  0E00               	movlw	0
  3211  002FFA  6E01               	movwf	?_strncmp^0,c
  3212  002FFC  EF71  F018         	goto	l1091
  3213  003000                     l4049:
  3214  003000  4A08               	infsnz	strncmp@l^0,f,c
  3215  003002  2A09               	incf	(strncmp@l+1)^0,f,c
  3216  003004  4A0A               	infsnz	strncmp@r^0,f,c
  3217  003006  2A0B               	incf	(strncmp@r+1)^0,f,c
  3218  003008  0605               	decf	strncmp@n^0,f,c
  3219  00300A  A0D8               	btfss	status,0,c
  3220  00300C  0606               	decf	(strncmp@n+1)^0,f,c
  3221  00300E                     l4051:
  3222  00300E  C008  FFF6         	movff	strncmp@l,tblptrl
  3223  003012  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3224  003016  6AF8               	clrf	tblptru,c
  3225  003018  0E05               	movlw	(high __ramtop+-1)
  3226  00301A  64F7               	cpfsgt	tblptrh,c
  3227  00301C  D003               	bra	u5057
  3228  00301E  0008               	tblrd		*
  3229  003020  50F5               	movf	tablat,w,c
  3230  003022  D005               	bra	u5050
  3231  003024                     u5057:
  3232  003024  CFF6 FFE1          	movff	tblptrl,fsr1l
  3233  003028  CFF7 FFE2          	movff	tblptrh,fsr1h
  3234  00302C  50E7               	movf	indf1,w,c
  3235  00302E                     u5050:
  3236  00302E  0900               	iorlw	0
  3237  003030  B4D8               	btfsc	status,2,c
  3238  003032  EF1D  F018         	goto	u5061
  3239  003036  EF1F  F018         	goto	u5060
  3240  00303A                     u5061:
  3241  00303A  EF55  F018         	goto	l4059
  3242  00303E                     u5060:
  3243  00303E  C00A  FFF6         	movff	strncmp@r,tblptrl
  3244  003042  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3245  003046                     	if	0	;tblptru may be non-zero
  3246  003046                     	endif
  3247  003046                     	if	0	;tblptru may be non-zero
  3248  003046                     	endif
  3249  003046  0008               	tblrd		*
  3250  003048  50F5               	movf	tablat,w,c
  3251  00304A  0900               	iorlw	0
  3252  00304C  B4D8               	btfsc	status,2,c
  3253  00304E  EF2B  F018         	goto	u5071
  3254  003052  EF2D  F018         	goto	u5070
  3255  003056                     u5071:
  3256  003056  EF55  F018         	goto	l4059
  3257  00305A                     u5070:
  3258  00305A  5005               	movf	strncmp@n^0,w,c
  3259  00305C  1006               	iorwf	(strncmp@n+1)^0,w,c
  3260  00305E  B4D8               	btfsc	status,2,c
  3261  003060  EF34  F018         	goto	u5081
  3262  003064  EF36  F018         	goto	u5080
  3263  003068                     u5081:
  3264  003068  EF55  F018         	goto	l4059
  3265  00306C                     u5080:
  3266  00306C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3267  003070  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3268  003074                     	if	0	;tblptru may be non-zero
  3269  003074                     	endif
  3270  003074                     	if	0	;tblptru may be non-zero
  3271  003074                     	endif
  3272  003074  0008               	tblrd		*
  3273  003076  CFF5 F007          	movff	tablat,??_strncmp
  3274  00307A  C008  FFF6         	movff	strncmp@l,tblptrl
  3275  00307E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3276  003082  6AF8               	clrf	tblptru,c
  3277  003084  0E05               	movlw	(high __ramtop+-1)
  3278  003086  64F7               	cpfsgt	tblptrh,c
  3279  003088  D003               	bra	u5097
  3280  00308A  0008               	tblrd		*
  3281  00308C  50F5               	movf	tablat,w,c
  3282  00308E  D005               	bra	u5095
  3283  003090                     u5097:
  3284  003090  CFF6 FFE1          	movff	tblptrl,fsr1l
  3285  003094  CFF7 FFE2          	movff	tblptrh,fsr1h
  3286  003098  50E7               	movf	indf1,w,c
  3287  00309A                     u5095:
  3288  00309A  1807               	xorwf	??_strncmp^0,w,c
  3289  00309C  B4D8               	btfsc	status,2,c
  3290  00309E  EF53  F018         	goto	u5091
  3291  0030A2  EF55  F018         	goto	u5090
  3292  0030A6                     u5091:
  3293  0030A6  EF00  F018         	goto	l4049
  3294  0030AA                     u5090:
  3295  0030AA                     l4059:
  3296  0030AA  C008  FFF6         	movff	strncmp@l,tblptrl
  3297  0030AE  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3298  0030B2  6AF8               	clrf	tblptru,c
  3299  0030B4  0E05               	movlw	(high __ramtop+-1)
  3300  0030B6  64F7               	cpfsgt	tblptrh,c
  3301  0030B8  D003               	bra	u5107
  3302  0030BA  0008               	tblrd		*
  3303  0030BC  50F5               	movf	tablat,w,c
  3304  0030BE  D005               	bra	u5100
  3305  0030C0                     u5107:
  3306  0030C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3307  0030C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3308  0030C8  50E7               	movf	indf1,w,c
  3309  0030CA                     u5100:
  3310  0030CA  6E07               	movwf	??_strncmp^0,c
  3311  0030CC  C00A  FFF6         	movff	strncmp@r,tblptrl
  3312  0030D0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3313  0030D4                     	if	0	;tblptru may be non-zero
  3314  0030D4                     	endif
  3315  0030D4                     	if	0	;tblptru may be non-zero
  3316  0030D4                     	endif
  3317  0030D4  0008               	tblrd		*
  3318  0030D6  50F5               	movf	tablat,w,c
  3319  0030D8  5C07               	subwf	??_strncmp^0,w,c
  3320  0030DA  6E01               	movwf	?_strncmp^0,c
  3321  0030DC  6A02               	clrf	(?_strncmp+1)^0,c
  3322  0030DE  A0D8               	btfss	status,0,c
  3323  0030E0  0602               	decf	(?_strncmp+1)^0,f,c
  3324  0030E2                     l1091:
  3325  0030E2  0012               	return		;funcret
  3326  0030E4                     __end_of_strncmp:
  3327                           	opt callstack 0
  3328                           
  3329 ;; *************** function _efgtoa *****************
  3330 ;; Defined at:
  3331 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  3334 ;;		 -> sprintf@f(6), 
  3335 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  3336 ;;  c               1   90[COMRAM] unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  u               4   52[BANK0 ] unsigned char 
  3339 ;;  g               4   44[BANK0 ] unsigned char 
  3340 ;;  l               4   38[BANK0 ] unsigned char 
  3341 ;;  h               4   34[BANK0 ] unsigned char 
  3342 ;;  ou              4    0[BANK0 ] unsigned char 
  3343 ;;  n               2   50[BANK0 ] int 
  3344 ;;  e               2   48[BANK0 ] int 
  3345 ;;  i               2   42[BANK0 ] int 
  3346 ;;  w               2   31[BANK0 ] int 
  3347 ;;  p               2   28[BANK0 ] int 
  3348 ;;  sign            2   26[BANK0 ] int 
  3349 ;;  d               2   24[BANK0 ] int 
  3350 ;;  ne              2   22[BANK0 ] int 
  3351 ;;  m               2   20[BANK0 ] int 
  3352 ;;  pp              2   18[BANK0 ] int 
  3353 ;;  t               2   16[BANK0 ] int 
  3354 ;;  mode            1   33[BANK0 ] unsigned char 
  3355 ;;  nmode           1   30[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  2   84[COMRAM] int 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3365 ;;      Params:         7       0       0       0       0       0       0
  3366 ;;      Locals:         0      56       0       0       0       0       0
  3367 ;;      Temps:          5       0       0       0       0       0       0
  3368 ;;      Totals:        12      56       0       0       0       0       0
  3369 ;;Total ram usage:       68 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    4
  3372 ;; This function calls:
  3373 ;;		___awdiv
  3374 ;;		___awmod
  3375 ;;		___fladd
  3376 ;;		___fldiv
  3377 ;;		___fleq
  3378 ;;		___flge
  3379 ;;		___flmul
  3380 ;;		___flneg
  3381 ;;		___flsub
  3382 ;;		___fltol
  3383 ;;		___fpclassifyf
  3384 ;;		_floorf
  3385 ;;		_isupper
  3386 ;;		_pad
  3387 ;;		_strcpy
  3388 ;;		_tolower
  3389 ;; This function is called by:
  3390 ;;		_vfpfcnvrt
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text8
  3395  000638                     __ptext8:
  3396                           	opt callstack 0
  3397  000638                     _efgtoa:
  3398                           	opt callstack 23
  3399  000638                     
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3401  000638  0E00               	movlw	0
  3402  00063A  0100               	movlb	0	; () banked
  3403  00063C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3404  00063E  0E00               	movlw	0
  3405  000640  6F9A               	movwf	efgtoa@sign& (0+255),b
  3406  000642                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3409  000642  C057  F0AC         	movff	efgtoa@f,efgtoa@g
  3410  000646  C058  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3411  00064A  C059  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3412  00064E  C05A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3413  000652                     
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3416  000652  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3417  000654  EF30  F003         	goto	u4380
  3418  000658  EF2E  F003         	goto	u4381
  3419  00065C                     u4381:
  3420  00065C  EF46  F003         	goto	l3677
  3421  000660                     u4380:
  3422  000660                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3425  000660  0E00               	movlw	0
  3426  000662  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3427  000664  0E01               	movlw	1
  3428  000666  6F9A               	movwf	efgtoa@sign& (0+255),b
  3429  000668                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3432  000668  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  3433  00066C  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3434  000670  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3435  000674  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3436  000678  ECE7  F01F         	call	___flneg	;wreg free
  3437  00067C  C001  F0AC         	movff	?___flneg,efgtoa@g
  3438  000680  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3439  000684  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3440  000688  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3441  00068C                     l3677:
  3442                           
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3444  00068C  0E00               	movlw	0
  3445  00068E  0100               	movlb	0	; () banked
  3446  000690  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3447  000692  0E00               	movlw	0
  3448  000694  6FB2               	movwf	efgtoa@n& (0+255),b
  3449  000696                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3452  000696  C0EE  F09F         	movff	_width,efgtoa@w
  3453  00069A  C0EF  F0A0         	movff	_width+1,efgtoa@w+1
  3454  00069E                     
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3457  00069E  519A               	movf	efgtoa@sign& (0+255),w,b
  3458  0006A0  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3459  0006A2  A4D8               	btfss	status,2,c
  3460  0006A4  EF56  F003         	goto	u4391
  3461  0006A8  EF58  F003         	goto	u4390
  3462  0006AC                     u4391:
  3463  0006AC  EF5F  F003         	goto	l3685
  3464  0006B0                     u4390:
  3465  0006B0                     
  3466                           ; BSR set to: 0
  3467  0006B0  A5F2               	btfss	_flags& (0+255),2,b
  3468  0006B2  EF5D  F003         	goto	u4401
  3469  0006B6  EF5F  F003         	goto	u4400
  3470  0006BA                     u4401:
  3471  0006BA  EF79  F003         	goto	l3697
  3472  0006BE                     u4400:
  3473  0006BE                     l3685:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3477  0006BE  519A               	movf	efgtoa@sign& (0+255),w,b
  3478  0006C0  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3479  0006C2  A4D8               	btfss	status,2,c
  3480  0006C4  EF66  F003         	goto	u4411
  3481  0006C8  EF68  F003         	goto	u4410
  3482  0006CC                     u4411:
  3483  0006CC  EF6E  F003         	goto	l3689
  3484  0006D0                     u4410:
  3485  0006D0                     
  3486                           ; BSR set to: 0
  3487  0006D0  0E00               	movlw	0
  3488  0006D2  6F85               	movwf	(_efgtoa$381+1)& (0+255),b
  3489  0006D4  0E2B               	movlw	43
  3490  0006D6  6F84               	movwf	_efgtoa$381& (0+255),b
  3491  0006D8  EF72  F003         	goto	l3691
  3492  0006DC                     l3689:
  3493                           
  3494                           ; BSR set to: 0
  3495  0006DC  0E00               	movlw	0
  3496  0006DE  6F85               	movwf	(_efgtoa$381+1)& (0+255),b
  3497  0006E0  0E2D               	movlw	45
  3498  0006E2  6F84               	movwf	_efgtoa$381& (0+255),b
  3499  0006E4                     l3691:
  3500                           
  3501                           ; BSR set to: 0
  3502  0006E4  C084  F100         	movff	_efgtoa$381,_dbuf
  3503  0006E8                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3506  0006E8  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3507  0006EA  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3508  0006EC                     
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3511  0006EC  079F               	decf	efgtoa@w& (0+255),f,b
  3512  0006EE  A0D8               	btfss	status,0,c
  3513  0006F0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3514  0006F2                     l3697:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3518  0006F2  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3519  0006F6  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3520  0006FA  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3521  0006FE  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3522  000702  ECFD  F019         	call	___fpclassifyf	;wreg free
  3523  000706  0401               	decf	?___fpclassifyf^0,w,c
  3524  000708  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3525  00070A  A4D8               	btfss	status,2,c
  3526  00070C  EF8A  F003         	goto	u4421
  3527  000710  EF8C  F003         	goto	u4420
  3528  000714                     u4421:
  3529  000714  EFE3  F003         	goto	l3715
  3530  000718                     u4420:
  3531  000718  0EBF               	movlw	191
  3532  00071A  6E5C               	movwf	??_efgtoa^0,c
  3533  00071C  0EFF               	movlw	255
  3534  00071E  6E5D               	movwf	(??_efgtoa+1)^0,c
  3535  000720  505B               	movf	efgtoa@c^0,w,c
  3536  000722  6E5E               	movwf	(??_efgtoa+2)^0,c
  3537  000724  6A5F               	clrf	(??_efgtoa+3)^0,c
  3538  000726  505C               	movf	??_efgtoa^0,w,c
  3539  000728  265E               	addwf	(??_efgtoa+2)^0,f,c
  3540  00072A  505D               	movf	(??_efgtoa+1)^0,w,c
  3541  00072C  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3542  00072E  505F               	movf	(??_efgtoa+3)^0,w,c
  3543  000730  E10A               	bnz	u4430
  3544  000732  0E1A               	movlw	26
  3545  000734  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3546  000736  A0D8               	btfss	status,0,c
  3547  000738  EFA0  F003         	goto	u4431
  3548  00073C  EFA3  F003         	goto	u4430
  3549  000740                     u4431:
  3550  000740  0E01               	movlw	1
  3551  000742  EFA4  F003         	goto	u4440
  3552  000746                     u4430:
  3553  000746  0E00               	movlw	0
  3554  000748                     u4440:
  3555  000748  0100               	movlb	0	; () banked
  3556  00074A  6F86               	movwf	_efgtoa$382& (0+255),b
  3557  00074C  6B87               	clrf	(_efgtoa$382+1)& (0+255),b
  3558  00074E                     
  3559                           ; BSR set to: 0
  3560  00074E  5186               	movf	_efgtoa$382& (0+255),w,b
  3561  000750  1187               	iorwf	(_efgtoa$382+1)& (0+255),w,b
  3562  000752  B4D8               	btfsc	status,2,c
  3563  000754  EFAE  F003         	goto	u4451
  3564  000758  EFB0  F003         	goto	u4450
  3565  00075C                     u4451:
  3566  00075C  EFBE  F003         	goto	l3707
  3567  000760                     u4450:
  3568  000760                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3571  000760  0E00               	movlw	low _dbuf
  3572  000762  25B2               	addwf	efgtoa@n& (0+255),w,b
  3573  000764  6E01               	movwf	strcpy@dest^0,c
  3574  000766  0E01               	movlw	high _dbuf
  3575  000768  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3576  00076A  6E02               	movwf	(strcpy@dest+1)^0,c
  3577  00076C  0E20               	movlw	low STR_5
  3578  00076E  6E03               	movwf	strcpy@src^0,c
  3579  000770  0E06               	movlw	high STR_5
  3580  000772  6E04               	movwf	(strcpy@src+1)^0,c
  3581  000774  ECD8  F01E         	call	_strcpy	;wreg free
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3584  000778  EFCA  F003         	goto	l3709
  3585  00077C                     l3707:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3589  00077C  0E00               	movlw	low _dbuf
  3590  00077E  25B2               	addwf	efgtoa@n& (0+255),w,b
  3591  000780  6E01               	movwf	strcpy@dest^0,c
  3592  000782  0E01               	movlw	high _dbuf
  3593  000784  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3594  000786  6E02               	movwf	(strcpy@dest+1)^0,c
  3595  000788  0E28               	movlw	low STR_6
  3596  00078A  6E03               	movwf	strcpy@src^0,c
  3597  00078C  0E06               	movlw	high STR_6
  3598  00078E  6E04               	movwf	(strcpy@src+1)^0,c
  3599  000790  ECD8  F01E         	call	_strcpy	;wreg free
  3600  000794                     l3709:
  3601                           
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3603  000794  0100               	movlb	0	; () banked
  3604  000796  0EFD               	movlw	253
  3605  000798  279F               	addwf	efgtoa@w& (0+255),f,b
  3606  00079A  0EFF               	movlw	255
  3607  00079C  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3608  00079E                     l3711:
  3609                           
  3610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3611  00079E  C055  F011         	movff	efgtoa@fp,pad@fp
  3612  0007A2  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3613  0007A6  0E00               	movlw	low _dbuf
  3614  0007A8  6E13               	movwf	pad@buf^0,c
  3615  0007AA  0E01               	movlw	high _dbuf
  3616  0007AC  6E14               	movwf	(pad@buf+1)^0,c
  3617  0007AE  C09F  F015         	movff	efgtoa@w,pad@p
  3618  0007B2  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  3619  0007B6  EC33  F01C         	call	_pad	;wreg free
  3620  0007BA  C011  F055         	movff	?_pad,?_efgtoa
  3621  0007BE  C012  F056         	movff	?_pad+1,?_efgtoa+1
  3622  0007C2  EFF3  F008         	goto	l152
  3623  0007C6                     l3715:
  3624                           
  3625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3626  0007C6  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3627  0007CA  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3628  0007CE  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3629  0007D2  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3630  0007D6  ECFD  F019         	call	___fpclassifyf	;wreg free
  3631  0007DA  5001               	movf	?___fpclassifyf^0,w,c
  3632  0007DC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3633  0007DE  A4D8               	btfss	status,2,c
  3634  0007E0  EFF4  F003         	goto	u4461
  3635  0007E4  EFF6  F003         	goto	u4460
  3636  0007E8                     u4461:
  3637  0007E8  EF36  F004         	goto	l3733
  3638  0007EC                     u4460:
  3639  0007EC  0EBF               	movlw	191
  3640  0007EE  6E5C               	movwf	??_efgtoa^0,c
  3641  0007F0  0EFF               	movlw	255
  3642  0007F2  6E5D               	movwf	(??_efgtoa+1)^0,c
  3643  0007F4  505B               	movf	efgtoa@c^0,w,c
  3644  0007F6  6E5E               	movwf	(??_efgtoa+2)^0,c
  3645  0007F8  6A5F               	clrf	(??_efgtoa+3)^0,c
  3646  0007FA  505C               	movf	??_efgtoa^0,w,c
  3647  0007FC  265E               	addwf	(??_efgtoa+2)^0,f,c
  3648  0007FE  505D               	movf	(??_efgtoa+1)^0,w,c
  3649  000800  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3650  000802  505F               	movf	(??_efgtoa+3)^0,w,c
  3651  000804  E10A               	bnz	u4470
  3652  000806  0E1A               	movlw	26
  3653  000808  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3654  00080A  A0D8               	btfss	status,0,c
  3655  00080C  EF0A  F004         	goto	u4471
  3656  000810  EF0D  F004         	goto	u4470
  3657  000814                     u4471:
  3658  000814  0E01               	movlw	1
  3659  000816  EF0E  F004         	goto	u4480
  3660  00081A                     u4470:
  3661  00081A  0E00               	movlw	0
  3662  00081C                     u4480:
  3663  00081C  0100               	movlb	0	; () banked
  3664  00081E  6F88               	movwf	_efgtoa$386& (0+255),b
  3665  000820  6B89               	clrf	(_efgtoa$386+1)& (0+255),b
  3666  000822                     
  3667                           ; BSR set to: 0
  3668  000822  5188               	movf	_efgtoa$386& (0+255),w,b
  3669  000824  1189               	iorwf	(_efgtoa$386+1)& (0+255),w,b
  3670  000826  B4D8               	btfsc	status,2,c
  3671  000828  EF18  F004         	goto	u4491
  3672  00082C  EF1A  F004         	goto	u4490
  3673  000830                     u4491:
  3674  000830  EF28  F004         	goto	l3725
  3675  000834                     u4490:
  3676  000834                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3679  000834  0E00               	movlw	low _dbuf
  3680  000836  25B2               	addwf	efgtoa@n& (0+255),w,b
  3681  000838  6E01               	movwf	strcpy@dest^0,c
  3682  00083A  0E01               	movlw	high _dbuf
  3683  00083C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3684  00083E  6E02               	movwf	(strcpy@dest+1)^0,c
  3685  000840  0E24               	movlw	low STR_9
  3686  000842  6E03               	movwf	strcpy@src^0,c
  3687  000844  0E06               	movlw	high STR_9
  3688  000846  6E04               	movwf	(strcpy@src+1)^0,c
  3689  000848  ECD8  F01E         	call	_strcpy	;wreg free
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3692  00084C  EFCA  F003         	goto	l3709
  3693  000850                     l3725:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3697  000850  0E00               	movlw	low _dbuf
  3698  000852  25B2               	addwf	efgtoa@n& (0+255),w,b
  3699  000854  6E01               	movwf	strcpy@dest^0,c
  3700  000856  0E01               	movlw	high _dbuf
  3701  000858  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3702  00085A  6E02               	movwf	(strcpy@dest+1)^0,c
  3703  00085C  0E2C               	movlw	low STR_10
  3704  00085E  6E03               	movwf	strcpy@src^0,c
  3705  000860  0E06               	movlw	high STR_10
  3706  000862  6E04               	movwf	(strcpy@src+1)^0,c
  3707  000864  ECD8  F01E         	call	_strcpy	;wreg free
  3708  000868  EFCA  F003         	goto	l3709
  3709  00086C                     l3733:
  3710                           
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3712  00086C  0E00               	movlw	0
  3713  00086E  0100               	movlb	0	; () banked
  3714  000870  6FB4               	movwf	efgtoa@u& (0+255),b
  3715  000872  0E00               	movlw	0
  3716  000874  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3717  000876  0E80               	movlw	128
  3718  000878  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3719  00087A  0E3F               	movlw	63
  3720  00087C  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3723  00087E  0E00               	movlw	0
  3724  000880  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3725  000882  0E00               	movlw	0
  3726  000884  6FB0               	movwf	efgtoa@e& (0+255),b
  3727  000886                     
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3730  000886  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  3731  00088A  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3732  00088E  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3733  000892  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3734  000896  0E00               	movlw	0
  3735  000898  6E05               	movwf	___fleq@ff2^0,c
  3736  00089A  0E00               	movlw	0
  3737  00089C  6E06               	movwf	(___fleq@ff2+1)^0,c
  3738  00089E  0E00               	movlw	0
  3739  0008A0  6E07               	movwf	(___fleq@ff2+2)^0,c
  3740  0008A2  0E00               	movlw	0
  3741  0008A4  6E08               	movwf	(___fleq@ff2+3)^0,c
  3742  0008A6  EC50  F01D         	call	___fleq	;wreg free
  3743  0008AA  B0D8               	btfsc	status,0,c
  3744  0008AC  EF5A  F004         	goto	u4501
  3745  0008B0  EF5C  F004         	goto	u4500
  3746  0008B4                     u4501:
  3747  0008B4  EFDF  F004         	goto	l3751
  3748  0008B8                     u4500:
  3749  0008B8  EF7B  F004         	goto	l3743
  3750  0008BC                     l3739:
  3751                           
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3753  0008BC  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  3754  0008C0  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  3755  0008C4  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  3756  0008C8  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  3757  0008CC  0E00               	movlw	0
  3758  0008CE  6E13               	movwf	___flmul@a^0,c
  3759  0008D0  0E00               	movlw	0
  3760  0008D2  6E14               	movwf	(___flmul@a+1)^0,c
  3761  0008D4  0E20               	movlw	32
  3762  0008D6  6E15               	movwf	(___flmul@a+2)^0,c
  3763  0008D8  0E41               	movlw	65
  3764  0008DA  6E16               	movwf	(___flmul@a+3)^0,c
  3765  0008DC  EC3C  F00F         	call	___flmul	;wreg free
  3766  0008E0  C00F  F0B4         	movff	?___flmul,efgtoa@u
  3767  0008E4  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3768  0008E8  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3769  0008EC  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3770  0008F0                     
  3771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3772  0008F0  0100               	movlb	0	; () banked
  3773  0008F2  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3774  0008F4  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3775  0008F6                     l3743:
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3778  0008F6  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  3779  0008FA  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3780  0008FE  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3781  000902  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3782  000906  0E00               	movlw	0
  3783  000908  6E13               	movwf	___flmul@a^0,c
  3784  00090A  0E00               	movlw	0
  3785  00090C  6E14               	movwf	(___flmul@a+1)^0,c
  3786  00090E  0E20               	movlw	32
  3787  000910  6E15               	movwf	(___flmul@a+2)^0,c
  3788  000912  0E41               	movlw	65
  3789  000914  6E16               	movwf	(___flmul@a+3)^0,c
  3790  000916  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  3791  00091A  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  3792  00091E  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  3793  000922  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  3794  000926  EC3C  F00F         	call	___flmul	;wreg free
  3795  00092A  C00F  F02C         	movff	?___flmul,___flge@ff2
  3796  00092E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3797  000932  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3798  000936  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3799  00093A  EC7B  F019         	call	___flge	;wreg free
  3800  00093E  B0D8               	btfsc	status,0,c
  3801  000940  EFA4  F004         	goto	u4511
  3802  000944  EFA6  F004         	goto	u4510
  3803  000948                     u4511:
  3804  000948  EF5E  F004         	goto	l3739
  3805  00094C                     u4510:
  3806  00094C  EFC6  F004         	goto	l3749
  3807  000950                     l3745:
  3808                           
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3810  000950  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  3811  000954  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3812  000958  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3813  00095C  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3814  000960  0E00               	movlw	0
  3815  000962  6E2C               	movwf	___fldiv@a^0,c
  3816  000964  0E00               	movlw	0
  3817  000966  6E2D               	movwf	(___fldiv@a+1)^0,c
  3818  000968  0E20               	movlw	32
  3819  00096A  6E2E               	movwf	(___fldiv@a+2)^0,c
  3820  00096C  0E41               	movlw	65
  3821  00096E  6E2F               	movwf	(___fldiv@a+3)^0,c
  3822  000970  EC51  F011         	call	___fldiv	;wreg free
  3823  000974  C028  F0B4         	movff	?___fldiv,efgtoa@u
  3824  000978  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3825  00097C  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3826  000980  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3827  000984                     
  3828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3829  000984  0100               	movlb	0	; () banked
  3830  000986  07B0               	decf	efgtoa@e& (0+255),f,b
  3831  000988  A0D8               	btfss	status,0,c
  3832  00098A  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3833  00098C                     l3749:
  3834                           
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3836  00098C  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  3837  000990  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3838  000994  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3839  000998  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3840  00099C  C0B4  F02C         	movff	efgtoa@u,___flge@ff2
  3841  0009A0  C0B5  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3842  0009A4  C0B6  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3843  0009A8  C0B7  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3844  0009AC  EC7B  F019         	call	___flge	;wreg free
  3845  0009B0  A0D8               	btfss	status,0,c
  3846  0009B2  EFDD  F004         	goto	u4521
  3847  0009B6  EFDF  F004         	goto	u4520
  3848  0009BA                     u4521:
  3849  0009BA  EFA8  F004         	goto	l3745
  3850  0009BE                     u4520:
  3851  0009BE                     l3751:
  3852                           
  3853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3854  0009BE  C05B  F007         	movff	efgtoa@c,tolower@c
  3855  0009C2  6A08               	clrf	(tolower@c+1)^0,c
  3856  0009C4  ECA8  F01E         	call	_tolower	;wreg free
  3857  0009C8  5007               	movf	?_tolower^0,w,c
  3858  0009CA  0100               	movlb	0	; () banked
  3859  0009CC  6FA1               	movwf	efgtoa@mode& (0+255),b
  3860  0009CE                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3863  0009CE  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3864  0009D2                     
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3867  0009D2  0E67               	movlw	103
  3868  0009D4  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3869  0009D6  A4D8               	btfss	status,2,c
  3870  0009D8  EFF0  F004         	goto	u4531
  3871  0009DC  EFF2  F004         	goto	u4530
  3872  0009E0                     u4531:
  3873  0009E0  EF18  F005         	goto	l3765
  3874  0009E4                     u4530:
  3875  0009E4                     
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3878  0009E4  51F0               	movf	_prec& (0+255),w,b
  3879  0009E6  11F1               	iorwf	(_prec+1)& (0+255),w,b
  3880  0009E8  A4D8               	btfss	status,2,c
  3881  0009EA  EFF9  F004         	goto	u4541
  3882  0009EE  EFFB  F004         	goto	u4540
  3883  0009F2                     u4541:
  3884  0009F2  EFFF  F004         	goto	l3761
  3885  0009F6                     u4540:
  3886  0009F6                     
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3889  0009F6  0E00               	movlw	0
  3890  0009F8  6FF1               	movwf	(_prec+1)& (0+255),b
  3891  0009FA  0E01               	movlw	1
  3892  0009FC  6FF0               	movwf	_prec& (0+255),b
  3893  0009FE                     l3761:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3897  0009FE  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3898  000A00  EF0C  F005         	goto	u4550
  3899  000A04  51F1               	movf	(_prec+1)& (0+255),w,b
  3900  000A06  E106               	bnz	u4551
  3901  000A08  05F0               	decf	_prec& (0+255),w,b
  3902  000A0A  B0D8               	btfsc	status,0,c
  3903  000A0C  EF0A  F005         	goto	u4551
  3904  000A10  EF0C  F005         	goto	u4550
  3905  000A14                     u4551:
  3906  000A14  EF12  F005         	goto	l170
  3907  000A18                     u4550:
  3908  000A18                     l3763:
  3909                           
  3910                           ; BSR set to: 0
  3911  000A18  0E00               	movlw	0
  3912  000A1A  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3913  000A1C  0E06               	movlw	6
  3914  000A1E  6F9C               	movwf	efgtoa@p& (0+255),b
  3915  000A20  EF21  F005         	goto	l3771
  3916  000A24                     l170:
  3917                           
  3918                           ; BSR set to: 0
  3919  000A24  C0F0  F09C         	movff	_prec,efgtoa@p
  3920  000A28  C0F1  F09D         	movff	_prec+1,efgtoa@p+1
  3921  000A2C  EF21  F005         	goto	l3771
  3922  000A30                     l3765:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3926  000A30  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3927  000A32  EF1D  F005         	goto	u4561
  3928  000A36  EF1F  F005         	goto	u4560
  3929  000A3A                     u4561:
  3930  000A3A  EF0C  F005         	goto	l3763
  3931  000A3E                     u4560:
  3932  000A3E  EF12  F005         	goto	l170
  3933  000A42                     l3771:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3937  000A42  0E67               	movlw	103
  3938  000A44  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3939  000A46  A4D8               	btfss	status,2,c
  3940  000A48  EF28  F005         	goto	u4571
  3941  000A4C  EF2A  F005         	goto	u4570
  3942  000A50                     u4571:
  3943  000A50  EF59  F005         	goto	l3781
  3944  000A54                     u4570:
  3945  000A54                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3948  000A54  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3949  000A56  EF38  F005         	goto	u4580
  3950  000A5A  0EFC               	movlw	252
  3951  000A5C  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3952  000A5E  0EFF               	movlw	255
  3953  000A60  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3954  000A62  A0D8               	btfss	status,0,c
  3955  000A64  EF36  F005         	goto	u4581
  3956  000A68  EF38  F005         	goto	u4580
  3957  000A6C                     u4581:
  3958  000A6C  EF57  F005         	goto	l3779
  3959  000A70                     u4580:
  3960  000A70                     
  3961                           ; BSR set to: 0
  3962  000A70  0EFF               	movlw	255
  3963  000A72  6E5C               	movwf	??_efgtoa^0,c
  3964  000A74  0EFF               	movlw	255
  3965  000A76  6E5D               	movwf	(??_efgtoa+1)^0,c
  3966  000A78  C09C  F05E         	movff	efgtoa@p,??_efgtoa+2
  3967  000A7C  C09D  F05F         	movff	efgtoa@p+1,??_efgtoa+3
  3968  000A80  505C               	movf	??_efgtoa^0,w,c
  3969  000A82  265E               	addwf	(??_efgtoa+2)^0,f,c
  3970  000A84  505D               	movf	(??_efgtoa+1)^0,w,c
  3971  000A86  225F               	addwfc	(??_efgtoa+3)^0,f,c
  3972  000A88  51B0               	movf	efgtoa@e& (0+255),w,b
  3973  000A8A  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  3974  000A8C  505F               	movf	(??_efgtoa+3)^0,w,c
  3975  000A8E  0A80               	xorlw	128
  3976  000A90  6E60               	movwf	(??_efgtoa+4)^0,c
  3977  000A92  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3978  000A94  0A80               	xorlw	128
  3979  000A96  5860               	subwfb	(??_efgtoa+4)^0,w,c
  3980  000A98  A0D8               	btfss	status,0,c
  3981  000A9A  EF51  F005         	goto	u4591
  3982  000A9E  EF53  F005         	goto	u4590
  3983  000AA2                     u4591:
  3984  000AA2  EF57  F005         	goto	l3779
  3985  000AA6                     u4590:
  3986  000AA6                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3989  000AA6  0E66               	movlw	102
  3990  000AA8  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3991                           
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3993  000AAA  EF59  F005         	goto	l3781
  3994  000AAE                     l3779:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3998  000AAE  0E65               	movlw	101
  3999  000AB0  6F9E               	movwf	efgtoa@nmode& (0+255),b
  4000  000AB2                     l3781:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4004  000AB2  C09C  F094         	movff	efgtoa@p,efgtoa@m
  4005  000AB6  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  4006  000ABA                     
  4007                           ; BSR set to: 0
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4009  000ABA  0E67               	movlw	103
  4010  000ABC  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4011  000ABE  A4D8               	btfss	status,2,c
  4012  000AC0  EF64  F005         	goto	u4601
  4013  000AC4  EF66  F005         	goto	u4600
  4014  000AC8                     u4601:
  4015  000AC8  EF76  F005         	goto	l3789
  4016  000ACC                     u4600:
  4017  000ACC                     
  4018                           ; BSR set to: 0
  4019  000ACC  0E66               	movlw	102
  4020  000ACE  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4021  000AD0  A4D8               	btfss	status,2,c
  4022  000AD2  EF6D  F005         	goto	u4611
  4023  000AD6  EF6F  F005         	goto	u4610
  4024  000ADA                     u4611:
  4025  000ADA  EF78  F005         	goto	l3791
  4026  000ADE                     u4610:
  4027  000ADE                     
  4028                           ; BSR set to: 0
  4029  000ADE  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4030  000AE0  EF76  F005         	goto	u4620
  4031  000AE4  EF74  F005         	goto	u4621
  4032  000AE8                     u4621:
  4033  000AE8  EF78  F005         	goto	l3791
  4034  000AEC                     u4620:
  4035  000AEC                     l3789:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4039  000AEC  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4040  000AEE  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4041  000AF0                     l3791:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4045  000AF0  0E66               	movlw	102
  4046  000AF2  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4047  000AF4  A4D8               	btfss	status,2,c
  4048  000AF6  EF7F  F005         	goto	u4631
  4049  000AFA  EF81  F005         	goto	u4630
  4050  000AFE                     u4631:
  4051  000AFE  EFA1  F005         	goto	l3801
  4052  000B02                     u4630:
  4053  000B02                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4056  000B02  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4057  000B04  EF88  F005         	goto	u4640
  4058  000B08  EF86  F005         	goto	u4641
  4059  000B0C                     u4641:
  4060  000B0C  EF94  F005         	goto	l3797
  4061  000B10                     u4640:
  4062  000B10                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4065  000B10  0E00               	movlw	0
  4066  000B12  6FB4               	movwf	efgtoa@u& (0+255),b
  4067  000B14  0E00               	movlw	0
  4068  000B16  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4069  000B18  0E80               	movlw	128
  4070  000B1A  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4071  000B1C  0E3F               	movlw	63
  4072  000B1E  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4073                           
  4074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4075  000B20  0E00               	movlw	0
  4076  000B22  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4077  000B24  0E00               	movlw	0
  4078  000B26  6FB0               	movwf	efgtoa@e& (0+255),b
  4079  000B28                     l3797:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4083  000B28  0E67               	movlw	103
  4084  000B2A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4085  000B2C  B4D8               	btfsc	status,2,c
  4086  000B2E  EF9B  F005         	goto	u4651
  4087  000B32  EF9D  F005         	goto	u4650
  4088  000B36                     u4651:
  4089  000B36  EFA1  F005         	goto	l3801
  4090  000B3A                     u4650:
  4091  000B3A                     
  4092                           ; BSR set to: 0
  4093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4094  000B3A  51B0               	movf	efgtoa@e& (0+255),w,b
  4095  000B3C  2794               	addwf	efgtoa@m& (0+255),f,b
  4096  000B3E  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4097  000B40  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4098  000B42                     l3801:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4102  000B42  0E00               	movlw	0
  4103  000B44  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4104  000B46  0E00               	movlw	0
  4105  000B48  6FAA               	movwf	efgtoa@i& (0+255),b
  4106  000B4A                     
  4107                           ; BSR set to: 0
  4108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4109  000B4A  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  4110  000B4E  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  4111  000B52  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  4112  000B56  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  4113  000B5A                     
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4116  000B5A  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  4117  000B5E  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  4118  000B62  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  4119  000B66  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  4120                           
  4121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4122  000B6A  EF32  F006         	goto	l3815
  4123  000B6E                     l3807:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4127  000B6E  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  4128  000B72  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4129  000B76  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4130  000B7A  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4131  000B7E  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  4132  000B82  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4133  000B86  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4134  000B8A  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4135  000B8E  EC51  F011         	call	___fldiv	;wreg free
  4136  000B92  C028  F041         	movff	?___fldiv,floorf@x
  4137  000B96  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4138  000B9A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4139  000B9E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4140  000BA2  EC38  F014         	call	_floorf	;wreg free
  4141  000BA6  C041  F0A6         	movff	?_floorf,efgtoa@l
  4142  000BAA  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4143  000BAE  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4144  000BB2  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4145                           
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4147  000BB6  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4148  000BBA  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4149  000BBE  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4150  000BC2  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4151  000BC6  ECF8  F018         	call	___fltol	;wreg free
  4152  000BCA  C001  F098         	movff	?___fltol,efgtoa@d
  4153  000BCE  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4154  000BD2                     
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4156  000BD2  C0A2  F028         	movff	efgtoa@h,___flsub@b
  4157  000BD6  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  4158  000BDA  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4159  000BDE  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4160  000BE2  C0B4  F013         	movff	efgtoa@u,___flmul@a
  4161  000BE6  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  4162  000BEA  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  4163  000BEE  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  4164  000BF2  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  4165  000BF6  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  4166  000BFA  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  4167  000BFE  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  4168  000C02  EC3C  F00F         	call	___flmul	;wreg free
  4169  000C06  C00F  F02C         	movff	?___flmul,___flsub@a
  4170  000C0A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4171  000C0E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4172  000C12  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4173  000C16  EC86  F01F         	call	___flsub	;wreg free
  4174  000C1A  C028  F0A2         	movff	?___flsub,efgtoa@h
  4175  000C1E  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4176  000C22  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4177  000C26  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4178  000C2A                     
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4180  000C2A  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  4181  000C2E  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4182  000C32  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4183  000C36  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4184  000C3A  0E00               	movlw	0
  4185  000C3C  6E2C               	movwf	___fldiv@a^0,c
  4186  000C3E  0E00               	movlw	0
  4187  000C40  6E2D               	movwf	(___fldiv@a+1)^0,c
  4188  000C42  0E20               	movlw	32
  4189  000C44  6E2E               	movwf	(___fldiv@a+2)^0,c
  4190  000C46  0E41               	movlw	65
  4191  000C48  6E2F               	movwf	(___fldiv@a+3)^0,c
  4192  000C4A  EC51  F011         	call	___fldiv	;wreg free
  4193  000C4E  C028  F0B4         	movff	?___fldiv,efgtoa@u
  4194  000C52  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4195  000C56  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4196  000C5A  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4197  000C5E                     
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4199  000C5E  0100               	movlb	0	; () banked
  4200  000C60  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4201  000C62  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4202  000C64                     l3815:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4206  000C64  5194               	movf	efgtoa@m& (0+255),w,b
  4207  000C66  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4208  000C68  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4209  000C6A  0A80               	xorlw	128
  4210  000C6C  6E5C               	movwf	??_efgtoa^0,c
  4211  000C6E  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4212  000C70  0A80               	xorlw	128
  4213  000C72  585C               	subwfb	??_efgtoa^0,w,c
  4214  000C74  A0D8               	btfss	status,0,c
  4215  000C76  EF3F  F006         	goto	u4661
  4216  000C7A  EF41  F006         	goto	u4660
  4217  000C7E                     u4661:
  4218  000C7E  EFB7  F005         	goto	l3807
  4219  000C82                     u4660:
  4220  000C82                     
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4223  000C82  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  4224  000C86  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  4225  000C8A  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  4226  000C8E  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  4227  000C92  0E00               	movlw	0
  4228  000C94  6E13               	movwf	___flmul@a^0,c
  4229  000C96  0E00               	movlw	0
  4230  000C98  6E14               	movwf	(___flmul@a+1)^0,c
  4231  000C9A  0EA0               	movlw	160
  4232  000C9C  6E15               	movwf	(___flmul@a+2)^0,c
  4233  000C9E  0E40               	movlw	64
  4234  000CA0  6E16               	movwf	(___flmul@a+3)^0,c
  4235  000CA2  EC3C  F00F         	call	___flmul	;wreg free
  4236  000CA6  C00F  F0A6         	movff	?___flmul,efgtoa@l
  4237  000CAA  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4238  000CAE  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4239  000CB2  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4240  000CB6                     
  4241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4242  000CB6  C0A2  F028         	movff	efgtoa@h,___flge@ff1
  4243  000CBA  C0A3  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4244  000CBE  C0A4  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4245  000CC2  C0A5  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4246  000CC6  C0A6  F02C         	movff	efgtoa@l,___flge@ff2
  4247  000CCA  C0A7  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4248  000CCE  C0A8  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4249  000CD2  C0A9  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4250  000CD6  EC7B  F019         	call	___flge	;wreg free
  4251  000CDA  B0D8               	btfsc	status,0,c
  4252  000CDC  EF72  F006         	goto	u4671
  4253  000CE0  EF74  F006         	goto	u4670
  4254  000CE4                     u4671:
  4255  000CE4  EF7F  F006         	goto	l3823
  4256  000CE8                     u4670:
  4257  000CE8                     
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4259  000CE8  0E00               	movlw	0
  4260  000CEA  0100               	movlb	0	; () banked
  4261  000CEC  6FA6               	movwf	efgtoa@l& (0+255),b
  4262  000CEE  0E00               	movlw	0
  4263  000CF0  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4264  000CF2  0E00               	movlw	0
  4265  000CF4  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4266  000CF6  0E00               	movlw	0
  4267  000CF8  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4268                           
  4269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4270  000CFA  EFA8  F006         	goto	l3829
  4271  000CFE                     l3823:
  4272                           
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4274  000CFE  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  4275  000D02  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4276  000D06  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4277  000D0A  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4278  000D0E  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  4279  000D12  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4280  000D16  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4281  000D1A  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4282  000D1E  EC50  F01D         	call	___fleq	;wreg free
  4283  000D22  A0D8               	btfss	status,0,c
  4284  000D24  EF96  F006         	goto	u4681
  4285  000D28  EF98  F006         	goto	u4680
  4286  000D2C                     u4681:
  4287  000D2C  EFA8  F006         	goto	l3829
  4288  000D30                     u4680:
  4289  000D30  0100               	movlb	0	; () banked
  4290  000D32  B198               	btfsc	efgtoa@d& (0+255),0,b
  4291  000D34  EF9E  F006         	goto	u4691
  4292  000D38  EFA0  F006         	goto	u4690
  4293  000D3C                     u4691:
  4294  000D3C  EFA8  F006         	goto	l3829
  4295  000D40                     u4690:
  4296  000D40                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4299  000D40  0E00               	movlw	0
  4300  000D42  6FA6               	movwf	efgtoa@l& (0+255),b
  4301  000D44  0E00               	movlw	0
  4302  000D46  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4303  000D48  0E00               	movlw	0
  4304  000D4A  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4305  000D4C  0E00               	movlw	0
  4306  000D4E  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4307  000D50                     l3829:
  4308                           
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4310  000D50  C0AC  F001         	movff	efgtoa@g,___fladd@b
  4311  000D54  C0AD  F002         	movff	efgtoa@g+1,___fladd@b+1
  4312  000D58  C0AE  F003         	movff	efgtoa@g+2,___fladd@b+2
  4313  000D5C  C0AF  F004         	movff	efgtoa@g+3,___fladd@b+3
  4314  000D60  C0A6  F005         	movff	efgtoa@l,___fladd@a
  4315  000D64  C0A7  F006         	movff	efgtoa@l+1,___fladd@a+1
  4316  000D68  C0A8  F007         	movff	efgtoa@l+2,___fladd@a+2
  4317  000D6C  C0A9  F008         	movff	efgtoa@l+3,___fladd@a+3
  4318  000D70  ECDC  F00C         	call	___fladd	;wreg free
  4319  000D74  C001  F0A2         	movff	?___fladd,efgtoa@h
  4320  000D78  C002  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4321  000D7C  C003  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4322  000D80  C004  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4323  000D84                     
  4324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4325  000D84  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4326  000D88  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4327  000D8C  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4328  000D90  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4329  000D94                     
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4331  000D94  0E65               	movlw	101
  4332  000D96  0100               	movlb	0	; () banked
  4333  000D98  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4334  000D9A  B4D8               	btfsc	status,2,c
  4335  000D9C  EFD2  F006         	goto	u4701
  4336  000DA0  EFD4  F006         	goto	u4700
  4337  000DA4                     u4701:
  4338  000DA4  EFDA  F006         	goto	l3837
  4339  000DA8                     u4700:
  4340  000DA8                     
  4341                           ; BSR set to: 0
  4342  000DA8  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4343  000DAC  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4344  000DB0  EFDE  F006         	goto	l196
  4345  000DB4                     l3837:
  4346                           
  4347                           ; BSR set to: 0
  4348  000DB4  0E00               	movlw	0
  4349  000DB6  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4350  000DB8  0E00               	movlw	0
  4351  000DBA  6F96               	movwf	efgtoa@ne& (0+255),b
  4352  000DBC                     l196:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4356  000DBC  0E00               	movlw	0
  4357  000DBE  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4358  000DC0  0E00               	movlw	0
  4359  000DC2  6F92               	movwf	efgtoa@pp& (0+255),b
  4360                           
  4361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4362  000DC4  0E00               	movlw	0
  4363  000DC6  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4364  000DC8  0E00               	movlw	0
  4365  000DCA  6F90               	movwf	efgtoa@t& (0+255),b
  4366                           
  4367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4368  000DCC  0E00               	movlw	0
  4369  000DCE  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4370  000DD0  0E00               	movlw	0
  4371  000DD2  6FAA               	movwf	efgtoa@i& (0+255),b
  4372                           
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4374  000DD4  EFD9  F007         	goto	l3887
  4375  000DD8                     l3839:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4379  000DD8  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  4380  000DDC  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4381  000DE0  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4382  000DE4  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4383  000DE8  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  4384  000DEC  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4385  000DF0  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4386  000DF4  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4387  000DF8  EC51  F011         	call	___fldiv	;wreg free
  4388  000DFC  C028  F041         	movff	?___fldiv,floorf@x
  4389  000E00  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4390  000E04  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4391  000E08  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4392  000E0C  EC38  F014         	call	_floorf	;wreg free
  4393  000E10  C041  F0A6         	movff	?_floorf,efgtoa@l
  4394  000E14  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4395  000E18  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4396  000E1C  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4397                           
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4399  000E20  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4400  000E24  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4401  000E28  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4402  000E2C  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4403  000E30  ECF8  F018         	call	___fltol	;wreg free
  4404  000E34  C001  F098         	movff	?___fltol,efgtoa@d
  4405  000E38  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4406  000E3C                     
  4407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4408  000E3C  0100               	movlb	0	; () banked
  4409  000E3E  B9F2               	btfsc	_flags& (0+255),4,b
  4410  000E40  EF24  F007         	goto	u4711
  4411  000E44  EF26  F007         	goto	u4710
  4412  000E48                     u4711:
  4413  000E48  EF43  F007         	goto	l3851
  4414  000E4C                     u4710:
  4415  000E4C                     
  4416                           ; BSR set to: 0
  4417  000E4C  5198               	movf	efgtoa@d& (0+255),w,b
  4418  000E4E  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4419  000E50  A4D8               	btfss	status,2,c
  4420  000E52  EF2D  F007         	goto	u4721
  4421  000E56  EF2F  F007         	goto	u4720
  4422  000E5A                     u4721:
  4423  000E5A  EF43  F007         	goto	l3851
  4424  000E5E                     u4720:
  4425  000E5E                     
  4426                           ; BSR set to: 0
  4427  000E5E  0E67               	movlw	103
  4428  000E60  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4429  000E62  A4D8               	btfss	status,2,c
  4430  000E64  EF36  F007         	goto	u4731
  4431  000E68  EF38  F007         	goto	u4730
  4432  000E6C                     u4731:
  4433  000E6C  EF43  F007         	goto	l3851
  4434  000E70                     u4730:
  4435  000E70                     
  4436                           ; BSR set to: 0
  4437  000E70  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4438  000E72  EF3F  F007         	goto	u4740
  4439  000E76  EF3D  F007         	goto	u4741
  4440  000E7A                     u4741:
  4441  000E7A  EF43  F007         	goto	l3851
  4442  000E7E                     u4740:
  4443  000E7E                     
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4446  000E7E  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4447  000E80  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4448                           
  4449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4450  000E82  EF8D  F007         	goto	l3879
  4451  000E86                     l3851:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4455  000E86  5192               	movf	efgtoa@pp& (0+255),w,b
  4456  000E88  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4457  000E8A  A4D8               	btfss	status,2,c
  4458  000E8C  EF4A  F007         	goto	u4751
  4459  000E90  EF4C  F007         	goto	u4750
  4460  000E94                     u4751:
  4461  000E94  EF76  F007         	goto	l3871
  4462  000E98                     u4750:
  4463  000E98                     
  4464                           ; BSR set to: 0
  4465  000E98  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4466  000E9A  EF53  F007         	goto	u4760
  4467  000E9E  EF51  F007         	goto	u4761
  4468  000EA2                     u4761:
  4469  000EA2  EF76  F007         	goto	l3871
  4470  000EA6                     u4760:
  4471  000EA6                     
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4474  000EA6  0E00               	movlw	low _dbuf
  4475  000EA8  25B2               	addwf	efgtoa@n& (0+255),w,b
  4476  000EAA  6ED9               	movwf	fsr2l,c
  4477  000EAC  0E01               	movlw	high _dbuf
  4478  000EAE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4479  000EB0  6EDA               	movwf	fsr2h,c
  4480  000EB2  0E2E               	movlw	46
  4481  000EB4  6EDF               	movwf	indf2,c
  4482  000EB6                     
  4483                           ; BSR set to: 0
  4484  000EB6  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4485  000EB8  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4486  000EBA                     
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4489  000EBA  079F               	decf	efgtoa@w& (0+255),f,b
  4490  000EBC  A0D8               	btfss	status,0,c
  4491  000EBE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4492  000EC0                     
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4495  000EC0  0E00               	movlw	0
  4496  000EC2  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4497  000EC4  0E01               	movlw	1
  4498  000EC6  6F92               	movwf	efgtoa@pp& (0+255),b
  4499  000EC8  EF76  F007         	goto	l3871
  4500  000ECC                     l3863:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4504  000ECC  0E00               	movlw	low _dbuf
  4505  000ECE  25B2               	addwf	efgtoa@n& (0+255),w,b
  4506  000ED0  6ED9               	movwf	fsr2l,c
  4507  000ED2  0E01               	movlw	high _dbuf
  4508  000ED4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4509  000ED6  6EDA               	movwf	fsr2h,c
  4510  000ED8  0E30               	movlw	48
  4511  000EDA  6EDF               	movwf	indf2,c
  4512  000EDC                     
  4513                           ; BSR set to: 0
  4514  000EDC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4515  000EDE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4516  000EE0                     
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4519  000EE0  079F               	decf	efgtoa@w& (0+255),f,b
  4520  000EE2  A0D8               	btfss	status,0,c
  4521  000EE4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4522  000EE6                     
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4525  000EE6  0790               	decf	efgtoa@t& (0+255),f,b
  4526  000EE8  A0D8               	btfss	status,0,c
  4527  000EEA  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  4528  000EEC                     l3871:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4532  000EEC  5190               	movf	efgtoa@t& (0+255),w,b
  4533  000EEE  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4534  000EF0  A4D8               	btfss	status,2,c
  4535  000EF2  EF7D  F007         	goto	u4771
  4536  000EF6  EF7F  F007         	goto	u4770
  4537  000EFA                     u4771:
  4538  000EFA  EF66  F007         	goto	l3863
  4539  000EFE                     u4770:
  4540  000EFE                     
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4543  000EFE  0E00               	movlw	low _dbuf
  4544  000F00  25B2               	addwf	efgtoa@n& (0+255),w,b
  4545  000F02  6ED9               	movwf	fsr2l,c
  4546  000F04  0E01               	movlw	high _dbuf
  4547  000F06  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4548  000F08  6EDA               	movwf	fsr2h,c
  4549  000F0A  5198               	movf	efgtoa@d& (0+255),w,b
  4550  000F0C  0F30               	addlw	48
  4551  000F0E  6EDF               	movwf	indf2,c
  4552  000F10                     
  4553                           ; BSR set to: 0
  4554  000F10  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4555  000F12  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4556  000F14                     
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4559  000F14  079F               	decf	efgtoa@w& (0+255),f,b
  4560  000F16  A0D8               	btfss	status,0,c
  4561  000F18  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4562  000F1A                     l3879:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4566  000F1A  C0A2  F028         	movff	efgtoa@h,___flsub@b
  4567  000F1E  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  4568  000F22  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4569  000F26  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4570  000F2A  C0B4  F013         	movff	efgtoa@u,___flmul@a
  4571  000F2E  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  4572  000F32  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  4573  000F36  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  4574  000F3A  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  4575  000F3E  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  4576  000F42  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  4577  000F46  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  4578  000F4A  EC3C  F00F         	call	___flmul	;wreg free
  4579  000F4E  C00F  F02C         	movff	?___flmul,___flsub@a
  4580  000F52  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4581  000F56  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4582  000F5A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4583  000F5E  EC86  F01F         	call	___flsub	;wreg free
  4584  000F62  C028  F0A2         	movff	?___flsub,efgtoa@h
  4585  000F66  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4586  000F6A  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4587  000F6E  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4588  000F72                     
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4590  000F72  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  4591  000F76  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4592  000F7A  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4593  000F7E  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4594  000F82  0E00               	movlw	0
  4595  000F84  6E2C               	movwf	___fldiv@a^0,c
  4596  000F86  0E00               	movlw	0
  4597  000F88  6E2D               	movwf	(___fldiv@a+1)^0,c
  4598  000F8A  0E20               	movlw	32
  4599  000F8C  6E2E               	movwf	(___fldiv@a+2)^0,c
  4600  000F8E  0E41               	movlw	65
  4601  000F90  6E2F               	movwf	(___fldiv@a+3)^0,c
  4602  000F92  EC51  F011         	call	___fldiv	;wreg free
  4603  000F96  C028  F0B4         	movff	?___fldiv,efgtoa@u
  4604  000F9A  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4605  000F9E  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4606  000FA2  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4607  000FA6                     
  4608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4609  000FA6  0100               	movlb	0	; () banked
  4610  000FA8  0796               	decf	efgtoa@ne& (0+255),f,b
  4611  000FAA  A0D8               	btfss	status,0,c
  4612  000FAC  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4613  000FAE                     
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4616  000FAE  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4617  000FB0  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4618  000FB2                     l3887:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4622  000FB2  5194               	movf	efgtoa@m& (0+255),w,b
  4623  000FB4  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4624  000FB6  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4625  000FB8  0A80               	xorlw	128
  4626  000FBA  6E5C               	movwf	??_efgtoa^0,c
  4627  000FBC  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4628  000FBE  0A80               	xorlw	128
  4629  000FC0  585C               	subwfb	??_efgtoa^0,w,c
  4630  000FC2  B0D8               	btfsc	status,0,c
  4631  000FC4  EFE6  F007         	goto	u4781
  4632  000FC8  EFE8  F007         	goto	u4780
  4633  000FCC                     u4781:
  4634  000FCC  EFF6  F007         	goto	l3891
  4635  000FD0                     u4780:
  4636  000FD0                     
  4637                           ; BSR set to: 0
  4638  000FD0  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4639  000FD2  EFF4  F007         	goto	u4791
  4640  000FD6  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4641  000FD8  E109               	bnz	u4790
  4642  000FDA  0E4B               	movlw	75
  4643  000FDC  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4644  000FDE  A0D8               	btfss	status,0,c
  4645  000FE0  EFF4  F007         	goto	u4791
  4646  000FE4  EFF6  F007         	goto	u4790
  4647  000FE8                     u4791:
  4648  000FE8  EFEC  F006         	goto	l3839
  4649  000FEC                     u4790:
  4650  000FEC                     l3891:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4654  000FEC  5192               	movf	efgtoa@pp& (0+255),w,b
  4655  000FEE  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4656  000FF0  A4D8               	btfss	status,2,c
  4657  000FF2  EFFD  F007         	goto	u4801
  4658  000FF6  EFFF  F007         	goto	u4800
  4659  000FFA                     u4801:
  4660  000FFA  EF10  F008         	goto	l3899
  4661  000FFE                     u4800:
  4662  000FFE                     
  4663                           ; BSR set to: 0
  4664  000FFE  A9F2               	btfss	_flags& (0+255),4,b
  4665  001000  EF04  F008         	goto	u4811
  4666  001004  EF06  F008         	goto	u4810
  4667  001008                     u4811:
  4668  001008  EF10  F008         	goto	l3899
  4669  00100C                     u4810:
  4670  00100C                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4673  00100C  0E00               	movlw	low _dbuf
  4674  00100E  25B2               	addwf	efgtoa@n& (0+255),w,b
  4675  001010  6ED9               	movwf	fsr2l,c
  4676  001012  0E01               	movlw	high _dbuf
  4677  001014  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4678  001016  6EDA               	movwf	fsr2h,c
  4679  001018  0E2E               	movlw	46
  4680  00101A  6EDF               	movwf	indf2,c
  4681  00101C                     
  4682                           ; BSR set to: 0
  4683  00101C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4684  00101E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4685  001020                     l3899:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4689  001020  0E00               	movlw	low _dbuf
  4690  001022  25B2               	addwf	efgtoa@n& (0+255),w,b
  4691  001024  6ED9               	movwf	fsr2l,c
  4692  001026  0E01               	movlw	high _dbuf
  4693  001028  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4694  00102A  6EDA               	movwf	fsr2h,c
  4695  00102C  0E00               	movlw	0
  4696  00102E  6EDF               	movwf	indf2,c
  4697  001030                     
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4700  001030  0E65               	movlw	101
  4701  001032  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4702  001034  A4D8               	btfss	status,2,c
  4703  001036  EF1F  F008         	goto	u4821
  4704  00103A  EF21  F008         	goto	u4820
  4705  00103E                     u4821:
  4706  00103E  EFCF  F003         	goto	l3711
  4707  001042                     u4820:
  4708  001042                     
  4709                           ; BSR set to: 0
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4711  001042  0E00               	movlw	0
  4712  001044  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4713  001046  0E4F               	movlw	79
  4714  001048  6FAA               	movwf	efgtoa@i& (0+255),b
  4715  00104A                     
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4718  00104A  0E00               	movlw	low _dbuf
  4719  00104C  25AA               	addwf	efgtoa@i& (0+255),w,b
  4720  00104E  6ED9               	movwf	fsr2l,c
  4721  001050  0E01               	movlw	high _dbuf
  4722  001052  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4723  001054  6EDA               	movwf	fsr2h,c
  4724  001056  0E00               	movlw	0
  4725  001058  6EDF               	movwf	indf2,c
  4726  00105A                     
  4727                           ; BSR set to: 0
  4728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4729  00105A  0E00               	movlw	0
  4730  00105C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4731  00105E  0E00               	movlw	0
  4732  001060  6F9A               	movwf	efgtoa@sign& (0+255),b
  4733  001062                     
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4736  001062  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4737  001064  EF38  F008         	goto	u4830
  4738  001068  EF36  F008         	goto	u4831
  4739  00106C                     u4831:
  4740  00106C  EF40  F008         	goto	l3915
  4741  001070                     u4830:
  4742  001070                     
  4743                           ; BSR set to: 0
  4744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4745  001070  0E00               	movlw	0
  4746  001072  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4747  001074  0E01               	movlw	1
  4748  001076  6F9A               	movwf	efgtoa@sign& (0+255),b
  4749  001078                     
  4750                           ; BSR set to: 0
  4751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4752  001078  6DB0               	negf	efgtoa@e& (0+255),b
  4753  00107A  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4754  00107C  B0D8               	btfsc	status,0,c
  4755  00107E  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4756  001080                     l3915:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4760  001080  0E00               	movlw	0
  4761  001082  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4762  001084  0E02               	movlw	2
  4763  001086  6F9C               	movwf	efgtoa@p& (0+255),b
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4766  001088  EF71  F008         	goto	l3927
  4767  00108C                     l3917:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4771  00108C  07AA               	decf	efgtoa@i& (0+255),f,b
  4772  00108E  A0D8               	btfss	status,0,c
  4773  001090  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4774  001092                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4777  001092  0E00               	movlw	low _dbuf
  4778  001094  25AA               	addwf	efgtoa@i& (0+255),w,b
  4779  001096  6ED9               	movwf	fsr2l,c
  4780  001098  0E01               	movlw	high _dbuf
  4781  00109A  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4782  00109C  6EDA               	movwf	fsr2h,c
  4783  00109E  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  4784  0010A2  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4785  0010A6  0E00               	movlw	0
  4786  0010A8  6E04               	movwf	(___awmod@divisor+1)^0,c
  4787  0010AA  0E0A               	movlw	10
  4788  0010AC  6E03               	movwf	___awmod@divisor^0,c
  4789  0010AE  ECF8  F01C         	call	___awmod	;wreg free
  4790  0010B2  5001               	movf	?___awmod^0,w,c
  4791  0010B4  0F30               	addlw	48
  4792  0010B6  6EDF               	movwf	indf2,c
  4793  0010B8                     
  4794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4795  0010B8  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  4796  0010BC  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4797  0010C0  0E00               	movlw	0
  4798  0010C2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4799  0010C4  0E0A               	movlw	10
  4800  0010C6  6E03               	movwf	___awdiv@divisor^0,c
  4801  0010C8  EC96  F01C         	call	___awdiv	;wreg free
  4802  0010CC  C001  F0B0         	movff	?___awdiv,efgtoa@e
  4803  0010D0  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4804  0010D4                     
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4806  0010D4  0100               	movlb	0	; () banked
  4807  0010D6  079C               	decf	efgtoa@p& (0+255),f,b
  4808  0010D8  A0D8               	btfss	status,0,c
  4809  0010DA  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4810  0010DC                     
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4813  0010DC  079F               	decf	efgtoa@w& (0+255),f,b
  4814  0010DE  A0D8               	btfss	status,0,c
  4815  0010E0  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4816  0010E2                     l3927:
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4820  0010E2  51B0               	movf	efgtoa@e& (0+255),w,b
  4821  0010E4  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4822  0010E6  A4D8               	btfss	status,2,c
  4823  0010E8  EF78  F008         	goto	u4841
  4824  0010EC  EF7A  F008         	goto	u4840
  4825  0010F0                     u4841:
  4826  0010F0  EF46  F008         	goto	l3917
  4827  0010F4                     u4840:
  4828  0010F4                     
  4829                           ; BSR set to: 0
  4830  0010F4  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4831  0010F6  EF87  F008         	goto	u4850
  4832  0010FA  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4833  0010FC  E106               	bnz	u4851
  4834  0010FE  059C               	decf	efgtoa@p& (0+255),w,b
  4835  001100  B0D8               	btfsc	status,0,c
  4836  001102  EF85  F008         	goto	u4851
  4837  001106  EF87  F008         	goto	u4850
  4838  00110A                     u4851:
  4839  00110A  EF46  F008         	goto	l3917
  4840  00110E                     u4850:
  4841  00110E                     
  4842                           ; BSR set to: 0
  4843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4844  00110E  07AA               	decf	efgtoa@i& (0+255),f,b
  4845  001110  A0D8               	btfss	status,0,c
  4846  001112  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4847  001114                     
  4848                           ; BSR set to: 0
  4849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4850  001114  519A               	movf	efgtoa@sign& (0+255),w,b
  4851  001116  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4852  001118  A4D8               	btfss	status,2,c
  4853  00111A  EF91  F008         	goto	u4861
  4854  00111E  EF93  F008         	goto	u4860
  4855  001122                     u4861:
  4856  001122  EF99  F008         	goto	l3937
  4857  001126                     u4860:
  4858  001126                     
  4859                           ; BSR set to: 0
  4860  001126  0E00               	movlw	0
  4861  001128  6F8B               	movwf	(_efgtoa$390+1)& (0+255),b
  4862  00112A  0E2B               	movlw	43
  4863  00112C  6F8A               	movwf	_efgtoa$390& (0+255),b
  4864  00112E  EF9D  F008         	goto	l3939
  4865  001132                     l3937:
  4866                           
  4867                           ; BSR set to: 0
  4868  001132  0E00               	movlw	0
  4869  001134  6F8B               	movwf	(_efgtoa$390+1)& (0+255),b
  4870  001136  0E2D               	movlw	45
  4871  001138  6F8A               	movwf	_efgtoa$390& (0+255),b
  4872  00113A                     l3939:
  4873                           
  4874                           ; BSR set to: 0
  4875  00113A  0E00               	movlw	low _dbuf
  4876  00113C  25AA               	addwf	efgtoa@i& (0+255),w,b
  4877  00113E  6ED9               	movwf	fsr2l,c
  4878  001140  0E01               	movlw	high _dbuf
  4879  001142  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4880  001144  6EDA               	movwf	fsr2h,c
  4881  001146  C08A  FFDF         	movff	_efgtoa$390,indf2
  4882  00114A                     
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4885  00114A  079F               	decf	efgtoa@w& (0+255),f,b
  4886  00114C  A0D8               	btfss	status,0,c
  4887  00114E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4888  001150                     
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4891  001150  07AA               	decf	efgtoa@i& (0+255),f,b
  4892  001152  A0D8               	btfss	status,0,c
  4893  001154  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4894  001156                     
  4895                           ; BSR set to: 0
  4896  001156  0EBF               	movlw	191
  4897  001158  6E5C               	movwf	??_efgtoa^0,c
  4898  00115A  0EFF               	movlw	255
  4899  00115C  6E5D               	movwf	(??_efgtoa+1)^0,c
  4900  00115E  505B               	movf	efgtoa@c^0,w,c
  4901  001160  6E5E               	movwf	(??_efgtoa+2)^0,c
  4902  001162  6A5F               	clrf	(??_efgtoa+3)^0,c
  4903  001164  505C               	movf	??_efgtoa^0,w,c
  4904  001166  265E               	addwf	(??_efgtoa+2)^0,f,c
  4905  001168  505D               	movf	(??_efgtoa+1)^0,w,c
  4906  00116A  225F               	addwfc	(??_efgtoa+3)^0,f,c
  4907  00116C  505F               	movf	(??_efgtoa+3)^0,w,c
  4908  00116E  E10A               	bnz	u4870
  4909  001170  0E1A               	movlw	26
  4910  001172  5C5E               	subwf	(??_efgtoa+2)^0,w,c
  4911  001174  A0D8               	btfss	status,0,c
  4912  001176  EFBF  F008         	goto	u4871
  4913  00117A  EFC2  F008         	goto	u4870
  4914  00117E                     u4871:
  4915  00117E  0E01               	movlw	1
  4916  001180  EFC3  F008         	goto	u4880
  4917  001184                     u4870:
  4918  001184  0E00               	movlw	0
  4919  001186                     u4880:
  4920  001186  6F8E               	movwf	_efgtoa$392& (0+255),b
  4921  001188  6B8F               	clrf	(_efgtoa$392+1)& (0+255),b
  4922  00118A                     
  4923                           ; BSR set to: 0
  4924  00118A  518E               	movf	_efgtoa$392& (0+255),w,b
  4925  00118C  118F               	iorwf	(_efgtoa$392+1)& (0+255),w,b
  4926  00118E  A4D8               	btfss	status,2,c
  4927  001190  EFCC  F008         	goto	u4891
  4928  001194  EFCE  F008         	goto	u4890
  4929  001198                     u4891:
  4930  001198  EFD4  F008         	goto	l3953
  4931  00119C                     u4890:
  4932  00119C                     
  4933                           ; BSR set to: 0
  4934  00119C  0E00               	movlw	0
  4935  00119E  6F8D               	movwf	(_efgtoa$391+1)& (0+255),b
  4936  0011A0  0E65               	movlw	101
  4937  0011A2  6F8C               	movwf	_efgtoa$391& (0+255),b
  4938  0011A4  EFD8  F008         	goto	l3955
  4939  0011A8                     l3953:
  4940                           
  4941                           ; BSR set to: 0
  4942  0011A8  0E00               	movlw	0
  4943  0011AA  6F8D               	movwf	(_efgtoa$391+1)& (0+255),b
  4944  0011AC  0E45               	movlw	69
  4945  0011AE  6F8C               	movwf	_efgtoa$391& (0+255),b
  4946  0011B0                     l3955:
  4947                           
  4948                           ; BSR set to: 0
  4949  0011B0  0E00               	movlw	low _dbuf
  4950  0011B2  25AA               	addwf	efgtoa@i& (0+255),w,b
  4951  0011B4  6ED9               	movwf	fsr2l,c
  4952  0011B6  0E01               	movlw	high _dbuf
  4953  0011B8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4954  0011BA  6EDA               	movwf	fsr2h,c
  4955  0011BC  C08C  FFDF         	movff	_efgtoa$391,indf2
  4956  0011C0                     
  4957                           ; BSR set to: 0
  4958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4959  0011C0  079F               	decf	efgtoa@w& (0+255),f,b
  4960  0011C2  A0D8               	btfss	status,0,c
  4961  0011C4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4962  0011C6                     
  4963                           ; BSR set to: 0
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4965  0011C6  0E00               	movlw	low _dbuf
  4966  0011C8  25B2               	addwf	efgtoa@n& (0+255),w,b
  4967  0011CA  6E01               	movwf	strcpy@dest^0,c
  4968  0011CC  0E01               	movlw	high _dbuf
  4969  0011CE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4970  0011D0  6E02               	movwf	(strcpy@dest+1)^0,c
  4971  0011D2  0E00               	movlw	low _dbuf
  4972  0011D4  25AA               	addwf	efgtoa@i& (0+255),w,b
  4973  0011D6  6E03               	movwf	strcpy@src^0,c
  4974  0011D8  0E01               	movlw	high _dbuf
  4975  0011DA  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4976  0011DC  6E04               	movwf	(strcpy@src+1)^0,c
  4977  0011DE  ECD8  F01E         	call	_strcpy	;wreg free
  4978  0011E2  EFCF  F003         	goto	l3711
  4979  0011E6                     l152:
  4980  0011E6  0012               	return		;funcret
  4981  0011E8                     __end_of_efgtoa:
  4982                           	opt callstack 0
  4983                           
  4984 ;; *************** function _tolower *****************
  4985 ;; Defined at:
  4986 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  c               2    6[COMRAM] int 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2    6[COMRAM] int 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5000 ;;      Params:         2       0       0       0       0       0       0
  5001 ;;      Locals:         2       0       0       0       0       0       0
  5002 ;;      Temps:          4       0       0       0       0       0       0
  5003 ;;      Totals:         8       0       0       0       0       0       0
  5004 ;;Total ram usage:        8 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    1
  5007 ;; This function calls:
  5008 ;;		_isupper
  5009 ;; This function is called by:
  5010 ;;		_efgtoa
  5011 ;;		_vfpfcnvrt
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text9
  5016  003D50                     __ptext9:
  5017                           	opt callstack 0
  5018  003D50                     _tolower:
  5019                           	opt callstack 26
  5020  003D50  0EBF               	movlw	191
  5021  003D52  6E09               	movwf	??_tolower^0,c
  5022  003D54  0EFF               	movlw	255
  5023  003D56  6E0A               	movwf	(??_tolower+1)^0,c
  5024  003D58  C007  F00B         	movff	tolower@c,??_tolower+2
  5025  003D5C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5026  003D60  5009               	movf	??_tolower^0,w,c
  5027  003D62  260B               	addwf	(??_tolower+2)^0,f,c
  5028  003D64  500A               	movf	(??_tolower+1)^0,w,c
  5029  003D66  220C               	addwfc	(??_tolower+3)^0,f,c
  5030  003D68  500C               	movf	(??_tolower+3)^0,w,c
  5031  003D6A  E10A               	bnz	u3420
  5032  003D6C  0E1A               	movlw	26
  5033  003D6E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5034  003D70  A0D8               	btfss	status,0,c
  5035  003D72  EFBD  F01E         	goto	u3421
  5036  003D76  EFC0  F01E         	goto	u3420
  5037  003D7A                     u3421:
  5038  003D7A  0E01               	movlw	1
  5039  003D7C  EFC1  F01E         	goto	u3430
  5040  003D80                     u3420:
  5041  003D80  0E00               	movlw	0
  5042  003D82                     u3430:
  5043  003D82  6E0D               	movwf	_tolower$1012^0,c
  5044  003D84  6A0E               	clrf	(_tolower$1012+1)^0,c
  5045  003D86  500D               	movf	_tolower$1012^0,w,c
  5046  003D88  100E               	iorwf	(_tolower$1012+1)^0,w,c
  5047  003D8A  B4D8               	btfsc	status,2,c
  5048  003D8C  EFCA  F01E         	goto	u3441
  5049  003D90  EFCC  F01E         	goto	u3440
  5050  003D94                     u3441:
  5051  003D94  EFD3  F01E         	goto	l1101
  5052  003D98                     u3440:
  5053  003D98  0E20               	movlw	32
  5054  003D9A  1007               	iorwf	tolower@c^0,w,c
  5055  003D9C  6E07               	movwf	?_tolower^0,c
  5056  003D9E  5008               	movf	(tolower@c+1)^0,w,c
  5057  003DA0  6E08               	movwf	(?_tolower+1)^0,c
  5058  003DA2  EFD7  F01E         	goto	l1106
  5059  003DA6                     l1101:
  5060  003DA6  C007  F007         	movff	tolower@c,?_tolower
  5061  003DAA  C008  F008         	movff	tolower@c+1,?_tolower+1
  5062  003DAE                     l1106:
  5063  003DAE  0012               	return		;funcret
  5064  003DB0                     __end_of_tolower:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _isupper *****************
  5068 ;; Defined at:
  5069 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  c               2    0[COMRAM] int 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  2    0[COMRAM] int 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5083 ;;      Params:         2       0       0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0
  5085 ;;      Temps:          4       0       0       0       0       0       0
  5086 ;;      Totals:         6       0       0       0       0       0       0
  5087 ;;Total ram usage:        6 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_efgtoa
  5093 ;;		_vfpfcnvrt
  5094 ;;		_tolower
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text10
  5099  003F96                     __ptext10:
  5100                           	opt callstack 0
  5101  003F96                     _isupper:
  5102                           	opt callstack 26
  5103  003F96  0EBF               	movlw	191
  5104  003F98  6E03               	movwf	??_isupper^0,c
  5105  003F9A  0EFF               	movlw	255
  5106  003F9C  6E04               	movwf	(??_isupper+1)^0,c
  5107  003F9E  C001  F005         	movff	isupper@c,??_isupper+2
  5108  003FA2  C002  F006         	movff	isupper@c+1,??_isupper+3
  5109  003FA6  5003               	movf	??_isupper^0,w,c
  5110  003FA8  2605               	addwf	(??_isupper+2)^0,f,c
  5111  003FAA  5004               	movf	(??_isupper+1)^0,w,c
  5112  003FAC  2206               	addwfc	(??_isupper+3)^0,f,c
  5113  003FAE  5006               	movf	(??_isupper+3)^0,w,c
  5114  003FB0  E10A               	bnz	u2880
  5115  003FB2  0E1A               	movlw	26
  5116  003FB4  5C05               	subwf	(??_isupper+2)^0,w,c
  5117  003FB6  A0D8               	btfss	status,0,c
  5118  003FB8  EFE0  F01F         	goto	u2881
  5119  003FBC  EFE3  F01F         	goto	u2880
  5120  003FC0                     u2881:
  5121  003FC0  0E01               	movlw	1
  5122  003FC2  EFE4  F01F         	goto	u2890
  5123  003FC6                     u2880:
  5124  003FC6  0E00               	movlw	0
  5125  003FC8                     u2890:
  5126  003FC8  6E01               	movwf	?_isupper^0,c
  5127  003FCA  6A02               	clrf	(?_isupper+1)^0,c
  5128  003FCC  0012               	return		;funcret
  5129  003FCE                     __end_of_isupper:
  5130                           	opt callstack 0
  5131                           
  5132 ;; *************** function _strcpy *****************
  5133 ;; Defined at:
  5134 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5137 ;;		 -> dbuf(80), 
  5138 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5139 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  5140 ;;		 -> dbuf(80), 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  d               2    8[COMRAM] PTR unsigned char 
  5143 ;;		 -> dbuf(80), 
  5144 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5145 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  5146 ;;		 -> dbuf(80), 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  2    0[COMRAM] PTR unsigned char 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5156 ;;      Params:         4       0       0       0       0       0       0
  5157 ;;      Locals:         4       0       0       0       0       0       0
  5158 ;;      Temps:          2       0       0       0       0       0       0
  5159 ;;      Totals:        10       0       0       0       0       0       0
  5160 ;;Total ram usage:       10 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_efgtoa
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text11
  5170  003DB0                     __ptext11:
  5171                           	opt callstack 0
  5172  003DB0                     _strcpy:
  5173                           	opt callstack 26
  5174  003DB0  C003  F007         	movff	strcpy@src,strcpy@s
  5175  003DB4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5176  003DB8  C001  F009         	movff	strcpy@dest,strcpy@d
  5177  003DBC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5178  003DC0                     l3097:
  5179  003DC0  5007               	movf	strcpy@s^0,w,c
  5180  003DC2  6E05               	movwf	??_strcpy^0,c
  5181  003DC4  5008               	movf	(strcpy@s+1)^0,w,c
  5182  003DC6  6E06               	movwf	(??_strcpy+1)^0,c
  5183  003DC8  4A07               	infsnz	strcpy@s^0,f,c
  5184  003DCA  2A08               	incf	(strcpy@s+1)^0,f,c
  5185  003DCC  C005  FFF6         	movff	??_strcpy,tblptrl
  5186  003DD0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5187  003DD4  6AF8               	clrf	tblptru,c
  5188  003DD6  C009  FFD9         	movff	strcpy@d,fsr2l
  5189  003DDA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5190  003DDE  4A09               	infsnz	strcpy@d^0,f,c
  5191  003DE0  2A0A               	incf	(strcpy@d+1)^0,f,c
  5192  003DE2  0E05               	movlw	(high __ramtop+-1)
  5193  003DE4  64F7               	cpfsgt	tblptrh,c
  5194  003DE6  D003               	bra	u3407
  5195  003DE8  0008               	tblrd		*
  5196  003DEA  50F5               	movf	tablat,w,c
  5197  003DEC  D005               	bra	u3400
  5198  003DEE                     u3407:
  5199  003DEE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5200  003DF2  CFF7 FFE2          	movff	tblptrh,fsr1h
  5201  003DF6  50E7               	movf	indf1,w,c
  5202  003DF8                     u3400:
  5203  003DF8  6EDF               	movwf	indf2,c
  5204  003DFA  50DF               	movf	indf2,w,c
  5205  003DFC  A4D8               	btfss	status,2,c
  5206  003DFE  EF03  F01F         	goto	u3411
  5207  003E02  EF05  F01F         	goto	u3410
  5208  003E06                     u3411:
  5209  003E06  EFE0  F01E         	goto	l3097
  5210  003E0A                     u3410:
  5211  003E0A  0012               	return		;funcret
  5212  003E0C                     __end_of_strcpy:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _floorf *****************
  5216 ;; Defined at:
  5217 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  x               4   64[COMRAM] float 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  u               4   80[COMRAM] struct .
  5222 ;;  m               4   74[COMRAM] unsigned long 
  5223 ;;  e               2   78[COMRAM] int 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  4   64[COMRAM] float 
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5233 ;;      Params:         4       0       0       0       0       0       0
  5234 ;;      Locals:        10       0       0       0       0       0       0
  5235 ;;      Temps:          6       0       0       0       0       0       0
  5236 ;;      Totals:        20       0       0       0       0       0       0
  5237 ;;Total ram usage:       20 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_efgtoa
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text12
  5247  002870                     __ptext12:
  5248                           	opt callstack 0
  5249  002870                     _floorf:
  5250                           	opt callstack 26
  5251  002870  C0DC  F051         	movff	floorf@F524,floorf@u
  5252  002874  C0DD  F052         	movff	floorf@F524+1,floorf@u+1
  5253  002878  C0DE  F053         	movff	floorf@F524+2,floorf@u+2
  5254  00287C  C0DF  F054         	movff	floorf@F524+3,floorf@u+3
  5255  002880  C041  F051         	movff	floorf@x,floorf@u
  5256  002884  C042  F052         	movff	floorf@x+1,floorf@u+1
  5257  002888  C043  F053         	movff	floorf@x+2,floorf@u+2
  5258  00288C  C044  F054         	movff	floorf@x+3,floorf@u+3
  5259  002890  0E81               	movlw	129
  5260  002892  6E45               	movwf	??_floorf^0,c
  5261  002894  0EFF               	movlw	255
  5262  002896  6E46               	movwf	(??_floorf+1)^0,c
  5263  002898  C051  F047         	movff	floorf@u,??_floorf+2
  5264  00289C  C052  F048         	movff	floorf@u+1,??_floorf+3
  5265  0028A0  C053  F049         	movff	floorf@u+2,??_floorf+4
  5266  0028A4  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5267  0028A8  0E18               	movlw	24
  5268  0028AA  EF5C  F014         	goto	u3450
  5269  0028AE                     u3455:
  5270  0028AE  90D8               	bcf	status,0,c
  5271  0028B0  324A               	rrcf	(??_floorf+5)^0,f,c
  5272  0028B2  3249               	rrcf	(??_floorf+4)^0,f,c
  5273  0028B4  3248               	rrcf	(??_floorf+3)^0,f,c
  5274  0028B6  3247               	rrcf	(??_floorf+2)^0,f,c
  5275  0028B8                     u3450:
  5276  0028B8  2EE8               	decfsz	wreg,f,c
  5277  0028BA  EF57  F014         	goto	u3455
  5278  0028BE  5047               	movf	(??_floorf+2)^0,w,c
  5279  0028C0  2445               	addwf	??_floorf^0,w,c
  5280  0028C2  6E4F               	movwf	floorf@e^0,c
  5281  0028C4  0E00               	movlw	0
  5282  0028C6  2046               	addwfc	(??_floorf+1)^0,w,c
  5283  0028C8  6E50               	movwf	(floorf@e+1)^0,c
  5284  0028CA  BE50               	btfsc	(floorf@e+1)^0,7,c
  5285  0028CC  EF71  F014         	goto	u3461
  5286  0028D0  5050               	movf	(floorf@e+1)^0,w,c
  5287  0028D2  E109               	bnz	u3460
  5288  0028D4  0E17               	movlw	23
  5289  0028D6  5C4F               	subwf	floorf@e^0,w,c
  5290  0028D8  A0D8               	btfss	status,0,c
  5291  0028DA  EF71  F014         	goto	u3461
  5292  0028DE  EF73  F014         	goto	u3460
  5293  0028E2                     u3461:
  5294  0028E2  EF7D  F014         	goto	l3115
  5295  0028E6                     u3460:
  5296  0028E6                     l3113:
  5297  0028E6  C041  F041         	movff	floorf@x,?_floorf
  5298  0028EA  C042  F042         	movff	floorf@x+1,?_floorf+1
  5299  0028EE  C043  F043         	movff	floorf@x+2,?_floorf+2
  5300  0028F2  C044  F044         	movff	floorf@x+3,?_floorf+3
  5301  0028F6  EF40  F015         	goto	l1018
  5302  0028FA                     l3115:
  5303  0028FA  BE50               	btfsc	(floorf@e+1)^0,7,c
  5304  0028FC  EF82  F014         	goto	u3471
  5305  002900  EF84  F014         	goto	u3470
  5306  002904                     u3471:
  5307  002904  EFF4  F014         	goto	l3125
  5308  002908                     u3470:
  5309  002908  C04F  F045         	movff	floorf@e,??_floorf
  5310  00290C  0EFF               	movlw	255
  5311  00290E  6E46               	movwf	(??_floorf+1)^0,c
  5312  002910  0EFF               	movlw	255
  5313  002912  6E47               	movwf	(??_floorf+2)^0,c
  5314  002914  0E7F               	movlw	127
  5315  002916  6E48               	movwf	(??_floorf+3)^0,c
  5316  002918  0E00               	movlw	0
  5317  00291A  6E49               	movwf	(??_floorf+4)^0,c
  5318  00291C                     u3485:
  5319  00291C  6645               	tstfsz	??_floorf^0,c
  5320  00291E  EF93  F014         	goto	u3486
  5321  002922  EF9B  F014         	goto	u3487
  5322  002926                     u3486:
  5323  002926  3449               	rlcf	(??_floorf+4)^0,w,c
  5324  002928  3249               	rrcf	(??_floorf+4)^0,f,c
  5325  00292A  3248               	rrcf	(??_floorf+3)^0,f,c
  5326  00292C  3247               	rrcf	(??_floorf+2)^0,f,c
  5327  00292E  3246               	rrcf	(??_floorf+1)^0,f,c
  5328  002930  2E45               	decfsz	??_floorf^0,f,c
  5329  002932  EF8E  F014         	goto	u3485
  5330  002936                     u3487:
  5331  002936  C046  F04B         	movff	??_floorf+1,floorf@m
  5332  00293A  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5333  00293E  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5334  002942  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5335  002946  504B               	movf	floorf@m^0,w,c
  5336  002948  1451               	andwf	floorf@u^0,w,c
  5337  00294A  6E45               	movwf	??_floorf^0,c
  5338  00294C  504C               	movf	(floorf@m+1)^0,w,c
  5339  00294E  1452               	andwf	(floorf@u+1)^0,w,c
  5340  002950  6E46               	movwf	(??_floorf+1)^0,c
  5341  002952  504D               	movf	(floorf@m+2)^0,w,c
  5342  002954  1453               	andwf	(floorf@u+2)^0,w,c
  5343  002956  6E47               	movwf	(??_floorf+2)^0,c
  5344  002958  504E               	movf	(floorf@m+3)^0,w,c
  5345  00295A  1454               	andwf	(floorf@u+3)^0,w,c
  5346  00295C  6E48               	movwf	(??_floorf+3)^0,c
  5347  00295E  5045               	movf	??_floorf^0,w,c
  5348  002960  1046               	iorwf	(??_floorf+1)^0,w,c
  5349  002962  1047               	iorwf	(??_floorf+2)^0,w,c
  5350  002964  1048               	iorwf	(??_floorf+3)^0,w,c
  5351  002966  A4D8               	btfss	status,2,c
  5352  002968  EFB8  F014         	goto	u3491
  5353  00296C  EFBA  F014         	goto	u3490
  5354  002970                     u3491:
  5355  002970  EFBC  F014         	goto	l3121
  5356  002974                     u3490:
  5357  002974  EF73  F014         	goto	l3113
  5358  002978                     l3121:
  5359  002978  C051  F045         	movff	floorf@u,??_floorf
  5360  00297C  C052  F046         	movff	floorf@u+1,??_floorf+1
  5361  002980  C053  F047         	movff	floorf@u+2,??_floorf+2
  5362  002984  C054  F048         	movff	floorf@u+3,??_floorf+3
  5363  002988  0E20               	movlw	32
  5364  00298A  EFCC  F014         	goto	u3500
  5365  00298E                     u3505:
  5366  00298E  90D8               	bcf	status,0,c
  5367  002990  3248               	rrcf	(??_floorf+3)^0,f,c
  5368  002992  3247               	rrcf	(??_floorf+2)^0,f,c
  5369  002994  3246               	rrcf	(??_floorf+1)^0,f,c
  5370  002996  3245               	rrcf	??_floorf^0,f,c
  5371  002998                     u3500:
  5372  002998  2EE8               	decfsz	wreg,f,c
  5373  00299A  EFC7  F014         	goto	u3505
  5374  00299E  5045               	movf	??_floorf^0,w,c
  5375  0029A0  1046               	iorwf	(??_floorf+1)^0,w,c
  5376  0029A2  1047               	iorwf	(??_floorf+2)^0,w,c
  5377  0029A4  1048               	iorwf	(??_floorf+3)^0,w,c
  5378  0029A6  B4D8               	btfsc	status,2,c
  5379  0029A8  EFD8  F014         	goto	u3511
  5380  0029AC  EFDA  F014         	goto	u3510
  5381  0029B0                     u3511:
  5382  0029B0  EFE2  F014         	goto	l1021
  5383  0029B4                     u3510:
  5384  0029B4  504B               	movf	floorf@m^0,w,c
  5385  0029B6  2651               	addwf	floorf@u^0,f,c
  5386  0029B8  504C               	movf	(floorf@m+1)^0,w,c
  5387  0029BA  2252               	addwfc	(floorf@u+1)^0,f,c
  5388  0029BC  504D               	movf	(floorf@m+2)^0,w,c
  5389  0029BE  2253               	addwfc	(floorf@u+2)^0,f,c
  5390  0029C0  504E               	movf	(floorf@m+3)^0,w,c
  5391  0029C2  2254               	addwfc	(floorf@u+3)^0,f,c
  5392  0029C4                     l1021:
  5393  0029C4  1C4B               	comf	floorf@m^0,w,c
  5394  0029C6  6E45               	movwf	??_floorf^0,c
  5395  0029C8  1C4C               	comf	(floorf@m+1)^0,w,c
  5396  0029CA  6E46               	movwf	(??_floorf+1)^0,c
  5397  0029CC  1C4D               	comf	(floorf@m+2)^0,w,c
  5398  0029CE  6E47               	movwf	(??_floorf+2)^0,c
  5399  0029D0  1C4E               	comf	(floorf@m+3)^0,w,c
  5400  0029D2  6E48               	movwf	(??_floorf+3)^0,c
  5401  0029D4  5045               	movf	??_floorf^0,w,c
  5402  0029D6  1651               	andwf	floorf@u^0,f,c
  5403  0029D8  5046               	movf	(??_floorf+1)^0,w,c
  5404  0029DA  1652               	andwf	(floorf@u+1)^0,f,c
  5405  0029DC  5047               	movf	(??_floorf+2)^0,w,c
  5406  0029DE  1653               	andwf	(floorf@u+2)^0,f,c
  5407  0029E0  5048               	movf	(??_floorf+3)^0,w,c
  5408  0029E2  1654               	andwf	(floorf@u+3)^0,f,c
  5409  0029E4  EF38  F015         	goto	l3133
  5410  0029E8                     l3125:
  5411  0029E8  C051  F045         	movff	floorf@u,??_floorf
  5412  0029EC  C052  F046         	movff	floorf@u+1,??_floorf+1
  5413  0029F0  C053  F047         	movff	floorf@u+2,??_floorf+2
  5414  0029F4  C054  F048         	movff	floorf@u+3,??_floorf+3
  5415  0029F8  0E20               	movlw	32
  5416  0029FA  EF04  F015         	goto	u3520
  5417  0029FE                     u3525:
  5418  0029FE  90D8               	bcf	status,0,c
  5419  002A00  3248               	rrcf	(??_floorf+3)^0,f,c
  5420  002A02  3247               	rrcf	(??_floorf+2)^0,f,c
  5421  002A04  3246               	rrcf	(??_floorf+1)^0,f,c
  5422  002A06  3245               	rrcf	??_floorf^0,f,c
  5423  002A08                     u3520:
  5424  002A08  2EE8               	decfsz	wreg,f,c
  5425  002A0A  EFFF  F014         	goto	u3525
  5426  002A0E  5045               	movf	??_floorf^0,w,c
  5427  002A10  1046               	iorwf	(??_floorf+1)^0,w,c
  5428  002A12  1047               	iorwf	(??_floorf+2)^0,w,c
  5429  002A14  1048               	iorwf	(??_floorf+3)^0,w,c
  5430  002A16  A4D8               	btfss	status,2,c
  5431  002A18  EF10  F015         	goto	u3531
  5432  002A1C  EF12  F015         	goto	u3530
  5433  002A20                     u3531:
  5434  002A20  EF1C  F015         	goto	l3129
  5435  002A24                     u3530:
  5436  002A24  0E00               	movlw	0
  5437  002A26  6E51               	movwf	floorf@u^0,c
  5438  002A28  0E00               	movlw	0
  5439  002A2A  6E52               	movwf	(floorf@u+1)^0,c
  5440  002A2C  0E00               	movlw	0
  5441  002A2E  6E53               	movwf	(floorf@u+2)^0,c
  5442  002A30  0E00               	movlw	0
  5443  002A32  6E54               	movwf	(floorf@u+3)^0,c
  5444  002A34  EF38  F015         	goto	l3133
  5445  002A38                     l3129:
  5446  002A38  90D8               	bcf	status,0,c
  5447  002A3A  3451               	rlcf	floorf@u^0,w,c
  5448  002A3C  6E45               	movwf	??_floorf^0,c
  5449  002A3E  3452               	rlcf	(floorf@u+1)^0,w,c
  5450  002A40  6E46               	movwf	(??_floorf+1)^0,c
  5451  002A42  3453               	rlcf	(floorf@u+2)^0,w,c
  5452  002A44  6E47               	movwf	(??_floorf+2)^0,c
  5453  002A46  3454               	rlcf	(floorf@u+3)^0,w,c
  5454  002A48  6E48               	movwf	(??_floorf+3)^0,c
  5455  002A4A  5045               	movf	??_floorf^0,w,c
  5456  002A4C  1046               	iorwf	(??_floorf+1)^0,w,c
  5457  002A4E  1047               	iorwf	(??_floorf+2)^0,w,c
  5458  002A50  1048               	iorwf	(??_floorf+3)^0,w,c
  5459  002A52  B4D8               	btfsc	status,2,c
  5460  002A54  EF2E  F015         	goto	u3541
  5461  002A58  EF30  F015         	goto	u3540
  5462  002A5C                     u3541:
  5463  002A5C  EF38  F015         	goto	l3133
  5464  002A60                     u3540:
  5465  002A60  0E00               	movlw	0
  5466  002A62  6E51               	movwf	floorf@u^0,c
  5467  002A64  0E00               	movlw	0
  5468  002A66  6E52               	movwf	(floorf@u+1)^0,c
  5469  002A68  0E80               	movlw	128
  5470  002A6A  6E53               	movwf	(floorf@u+2)^0,c
  5471  002A6C  0EBF               	movlw	191
  5472  002A6E  6E54               	movwf	(floorf@u+3)^0,c
  5473  002A70                     l3133:
  5474  002A70  C051  F041         	movff	floorf@u,?_floorf
  5475  002A74  C052  F042         	movff	floorf@u+1,?_floorf+1
  5476  002A78  C053  F043         	movff	floorf@u+2,?_floorf+2
  5477  002A7C  C054  F044         	movff	floorf@u+3,?_floorf+3
  5478  002A80                     l1018:
  5479  002A80  0012               	return		;funcret
  5480  002A82                     __end_of_floorf:
  5481                           	opt callstack 0
  5482                           
  5483 ;; *************** function ___fpclassifyf *****************
  5484 ;; Defined at:
  5485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  x               4    0[COMRAM] float 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  u               4   10[COMRAM] struct .
  5490 ;;  e               2    8[COMRAM] int 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  2    0[COMRAM] int 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5500 ;;      Params:         4       0       0       0       0       0       0
  5501 ;;      Locals:         6       0       0       0       0       0       0
  5502 ;;      Temps:          4       0       0       0       0       0       0
  5503 ;;      Totals:        14       0       0       0       0       0       0
  5504 ;;Total ram usage:       14 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_efgtoa
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text13
  5514  0033FA                     __ptext13:
  5515                           	opt callstack 0
  5516  0033FA                     ___fpclassifyf:
  5517                           	opt callstack 26
  5518  0033FA  C0E0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5519  0033FE  C0E1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5520  003402  C0E2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5521  003406  C0E3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5522  00340A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5523  00340E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5524  003412  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5525  003416  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5526  00341A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5527  00341E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5528  003422  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5529  003426  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5530  00342A  0E18               	movlw	24
  5531  00342C  EF1D  F01A         	goto	u3330
  5532  003430                     u3335:
  5533  003430  90D8               	bcf	status,0,c
  5534  003432  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5535  003434  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5536  003436  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5537  003438  3205               	rrcf	??___fpclassifyf^0,f,c
  5538  00343A                     u3330:
  5539  00343A  2EE8               	decfsz	wreg,f,c
  5540  00343C  EF18  F01A         	goto	u3335
  5541  003440  5005               	movf	??___fpclassifyf^0,w,c
  5542  003442  6E09               	movwf	___fpclassifyf@e^0,c
  5543  003444  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5544  003446  5009               	movf	___fpclassifyf@e^0,w,c
  5545  003448  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5546  00344A  A4D8               	btfss	status,2,c
  5547  00344C  EF2A  F01A         	goto	u3341
  5548  003450  EF2C  F01A         	goto	u3340
  5549  003454                     u3341:
  5550  003454  EF4C  F01A         	goto	l3085
  5551  003458                     u3340:
  5552  003458  90D8               	bcf	status,0,c
  5553  00345A  340B               	rlcf	___fpclassifyf@u^0,w,c
  5554  00345C  6E05               	movwf	??___fpclassifyf^0,c
  5555  00345E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5556  003460  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5557  003462  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5558  003464  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5559  003466  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5560  003468  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5561  00346A  5005               	movf	??___fpclassifyf^0,w,c
  5562  00346C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5563  00346E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5564  003470  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5565  003472  A4D8               	btfss	status,2,c
  5566  003474  EF3E  F01A         	goto	u3351
  5567  003478  EF40  F01A         	goto	u3350
  5568  00347C                     u3351:
  5569  00347C  EF46  F01A         	goto	l3081
  5570  003480                     u3350:
  5571  003480  0E00               	movlw	0
  5572  003482  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5573  003484  0E02               	movlw	2
  5574  003486  6E01               	movwf	?___fpclassifyf^0,c
  5575  003488  EF7B  F01A         	goto	l980
  5576  00348C                     l3081:
  5577  00348C  0E00               	movlw	0
  5578  00348E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5579  003490  0E03               	movlw	3
  5580  003492  6E01               	movwf	?___fpclassifyf^0,c
  5581  003494  EF7B  F01A         	goto	l980
  5582  003498                     l3085:
  5583  003498  2809               	incf	___fpclassifyf@e^0,w,c
  5584  00349A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5585  00349C  A4D8               	btfss	status,2,c
  5586  00349E  EF53  F01A         	goto	u3361
  5587  0034A2  EF55  F01A         	goto	u3360
  5588  0034A6                     u3361:
  5589  0034A6  EF77  F01A         	goto	l3091
  5590  0034AA                     u3360:
  5591  0034AA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5592  0034AE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5593  0034B2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5594  0034B6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5595  0034BA  0E09               	movlw	9
  5596  0034BC                     u3375:
  5597  0034BC  90D8               	bcf	status,0,c
  5598  0034BE  3605               	rlcf	??___fpclassifyf^0,f,c
  5599  0034C0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5600  0034C2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5601  0034C4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5602  0034C6  2EE8               	decfsz	wreg,f,c
  5603  0034C8  EF5E  F01A         	goto	u3375
  5604  0034CC  5005               	movf	??___fpclassifyf^0,w,c
  5605  0034CE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5606  0034D0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5607  0034D2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5608  0034D4  B4D8               	btfsc	status,2,c
  5609  0034D6  EF6F  F01A         	goto	u3381
  5610  0034DA  EF72  F01A         	goto	u3380
  5611  0034DE                     u3381:
  5612  0034DE  0E01               	movlw	1
  5613  0034E0  EF73  F01A         	goto	u3390
  5614  0034E4                     u3380:
  5615  0034E4  0E00               	movlw	0
  5616  0034E6                     u3390:
  5617  0034E6  6E01               	movwf	?___fpclassifyf^0,c
  5618  0034E8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5619  0034EA  EF7B  F01A         	goto	l980
  5620  0034EE                     l3091:
  5621  0034EE  0E00               	movlw	0
  5622  0034F0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5623  0034F2  0E04               	movlw	4
  5624  0034F4  6E01               	movwf	?___fpclassifyf^0,c
  5625  0034F6                     l980:
  5626  0034F6  0012               	return		;funcret
  5627  0034F8                     __end_of___fpclassifyf:
  5628                           	opt callstack 0
  5629                           
  5630 ;; *************** function ___fltol *****************
  5631 ;; Defined at:
  5632 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  f1              4    0[COMRAM] int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  exp1            1    9[COMRAM] unsigned char 
  5637 ;;  sign1           1    8[COMRAM] unsigned char 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  4    0[COMRAM] long 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5647 ;;      Params:         4       0       0       0       0       0       0
  5648 ;;      Locals:         2       0       0       0       0       0       0
  5649 ;;      Temps:          4       0       0       0       0       0       0
  5650 ;;      Totals:        10       0       0       0       0       0       0
  5651 ;;Total ram usage:       10 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_efgtoa
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text14
  5661  0031F0                     __ptext14:
  5662                           	opt callstack 0
  5663  0031F0                     ___fltol:
  5664                           	opt callstack 26
  5665  0031F0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5666  0031F2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5667  0031F4  6E0A               	movwf	___fltol@exp1^0,c
  5668  0031F6  500A               	movf	___fltol@exp1^0,w,c
  5669  0031F8  A4D8               	btfss	status,2,c
  5670  0031FA  EF01  F019         	goto	u4201
  5671  0031FE  EF03  F019         	goto	u4200
  5672  003202                     u4201:
  5673  003202  EF0D  F019         	goto	l3553
  5674  003206                     u4200:
  5675  003206                     l3549:
  5676  003206  0E00               	movlw	0
  5677  003208  6E01               	movwf	?___fltol^0,c
  5678  00320A  0E00               	movlw	0
  5679  00320C  6E02               	movwf	(?___fltol+1)^0,c
  5680  00320E  0E00               	movlw	0
  5681  003210  6E03               	movwf	(?___fltol+2)^0,c
  5682  003212  0E00               	movlw	0
  5683  003214  6E04               	movwf	(?___fltol+3)^0,c
  5684  003216  EF7A  F019         	goto	l596
  5685  00321A                     l3553:
  5686  00321A  C001  F005         	movff	___fltol@f1,??___fltol
  5687  00321E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5688  003222  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5689  003226  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5690  00322A  0E20               	movlw	32
  5691  00322C  EF1D  F019         	goto	u4210
  5692  003230                     u4215:
  5693  003230  90D8               	bcf	status,0,c
  5694  003232  3208               	rrcf	(??___fltol+3)^0,f,c
  5695  003234  3207               	rrcf	(??___fltol+2)^0,f,c
  5696  003236  3206               	rrcf	(??___fltol+1)^0,f,c
  5697  003238  3205               	rrcf	??___fltol^0,f,c
  5698  00323A                     u4210:
  5699  00323A  2EE8               	decfsz	wreg,f,c
  5700  00323C  EF18  F019         	goto	u4215
  5701  003240  5005               	movf	??___fltol^0,w,c
  5702  003242  6E09               	movwf	___fltol@sign1^0,c
  5703  003244  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5704  003246  0EFF               	movlw	255
  5705  003248  1601               	andwf	___fltol@f1^0,f,c
  5706  00324A  0EFF               	movlw	255
  5707  00324C  1602               	andwf	(___fltol@f1+1)^0,f,c
  5708  00324E  0EFF               	movlw	255
  5709  003250  1603               	andwf	(___fltol@f1+2)^0,f,c
  5710  003252  0E00               	movlw	0
  5711  003254  1604               	andwf	(___fltol@f1+3)^0,f,c
  5712  003256  0E96               	movlw	150
  5713  003258  5E0A               	subwf	___fltol@exp1^0,f,c
  5714  00325A  BE0A               	btfsc	___fltol@exp1^0,7,c
  5715  00325C  EF34  F019         	goto	u4220
  5716  003260  EF32  F019         	goto	u4221
  5717  003264                     u4221:
  5718  003264  EF4A  F019         	goto	l3573
  5719  003268                     u4220:
  5720  003268  500A               	movf	___fltol@exp1^0,w,c
  5721  00326A  0A80               	xorlw	128
  5722  00326C  0F97               	addlw	151
  5723  00326E  B0D8               	btfsc	status,0,c
  5724  003270  EF3C  F019         	goto	u4231
  5725  003274  EF3E  F019         	goto	u4230
  5726  003278                     u4231:
  5727  003278  EF40  F019         	goto	l3569
  5728  00327C                     u4230:
  5729  00327C  EF03  F019         	goto	l3549
  5730  003280                     l3569:
  5731  003280  90D8               	bcf	status,0,c
  5732  003282  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5733  003284  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5734  003286  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5735  003288  3201               	rrcf	___fltol@f1^0,f,c
  5736  00328A  3E0A               	incfsz	___fltol@exp1^0,f,c
  5737  00328C  EF40  F019         	goto	l3569
  5738  003290  EF62  F019         	goto	l3583
  5739  003294                     l3573:
  5740  003294  0E1F               	movlw	31
  5741  003296  640A               	cpfsgt	___fltol@exp1^0,c
  5742  003298  EF50  F019         	goto	u4241
  5743  00329C  EF52  F019         	goto	u4240
  5744  0032A0                     u4241:
  5745  0032A0  EF5A  F019         	goto	l3581
  5746  0032A4                     u4240:
  5747  0032A4  EF03  F019         	goto	l3549
  5748  0032A8                     l3579:
  5749  0032A8  90D8               	bcf	status,0,c
  5750  0032AA  3601               	rlcf	___fltol@f1^0,f,c
  5751  0032AC  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5752  0032AE  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5753  0032B0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5754  0032B2  060A               	decf	___fltol@exp1^0,f,c
  5755  0032B4                     l3581:
  5756  0032B4  500A               	movf	___fltol@exp1^0,w,c
  5757  0032B6  A4D8               	btfss	status,2,c
  5758  0032B8  EF60  F019         	goto	u4251
  5759  0032BC  EF62  F019         	goto	u4250
  5760  0032C0                     u4251:
  5761  0032C0  EF54  F019         	goto	l3579
  5762  0032C4                     u4250:
  5763  0032C4                     l3583:
  5764  0032C4  5009               	movf	___fltol@sign1^0,w,c
  5765  0032C6  B4D8               	btfsc	status,2,c
  5766  0032C8  EF68  F019         	goto	u4261
  5767  0032CC  EF6A  F019         	goto	u4260
  5768  0032D0                     u4261:
  5769  0032D0  EF72  F019         	goto	l3587
  5770  0032D4                     u4260:
  5771  0032D4  1E04               	comf	(___fltol@f1+3)^0,f,c
  5772  0032D6  1E03               	comf	(___fltol@f1+2)^0,f,c
  5773  0032D8  1E02               	comf	(___fltol@f1+1)^0,f,c
  5774  0032DA  6C01               	negf	___fltol@f1^0,c
  5775  0032DC  0E00               	movlw	0
  5776  0032DE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5777  0032E0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5778  0032E2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5779  0032E4                     l3587:
  5780  0032E4  C001  F001         	movff	___fltol@f1,?___fltol
  5781  0032E8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5782  0032EC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5783  0032F0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5784  0032F4                     l596:
  5785  0032F4  0012               	return		;funcret
  5786  0032F6                     __end_of___fltol:
  5787                           	opt callstack 0
  5788                           
  5789 ;; *************** function ___flsub *****************
  5790 ;; Defined at:
  5791 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  b               4   39[COMRAM] long 
  5794 ;;  a               4   43[COMRAM] long 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  4   39[COMRAM] long 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5806 ;;      Params:         8       0       0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0
  5809 ;;      Totals:         8       0       0       0       0       0       0
  5810 ;;Total ram usage:        8 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    1
  5813 ;; This function calls:
  5814 ;;		___fladd
  5815 ;; This function is called by:
  5816 ;;		_efgtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text15
  5821  003F0C                     __ptext15:
  5822                           	opt callstack 0
  5823  003F0C                     ___flsub:
  5824                           	opt callstack 25
  5825  003F0C  0E00               	movlw	0
  5826  003F0E  1A2C               	xorwf	___flsub@a^0,f,c
  5827  003F10  0E00               	movlw	0
  5828  003F12  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5829  003F14  0E00               	movlw	0
  5830  003F16  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5831  003F18  0E80               	movlw	128
  5832  003F1A  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5833  003F1C  C028  F001         	movff	___flsub@b,___fladd@b
  5834  003F20  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5835  003F24  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5836  003F28  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5837  003F2C  C02C  F005         	movff	___flsub@a,___fladd@a
  5838  003F30  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5839  003F34  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5840  003F38  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5841  003F3C  ECDC  F00C         	call	___fladd	;wreg free
  5842  003F40  C001  F028         	movff	?___fladd,?___flsub
  5843  003F44  C002  F029         	movff	?___fladd+1,?___flsub+1
  5844  003F48  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5845  003F4C  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5846  003F50  0012               	return		;funcret
  5847  003F52                     __end_of___flsub:
  5848                           	opt callstack 0
  5849                           
  5850 ;; *************** function ___fladd *****************
  5851 ;; Defined at:
  5852 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  b               4    0[COMRAM] long 
  5855 ;;  a               4    4[COMRAM] long 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  grs             1   15[COMRAM] unsigned char 
  5858 ;;  bexp            1   14[COMRAM] unsigned char 
  5859 ;;  aexp            1   13[COMRAM] unsigned char 
  5860 ;;  signs           1   12[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  4    0[COMRAM] unsigned char 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5870 ;;      Params:         8       0       0       0       0       0       0
  5871 ;;      Locals:         4       0       0       0       0       0       0
  5872 ;;      Temps:          4       0       0       0       0       0       0
  5873 ;;      Totals:        16       0       0       0       0       0       0
  5874 ;;Total ram usage:       16 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_efgtoa
  5880 ;;		___flsub
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text16
  5885  0019B8                     __ptext16:
  5886                           	opt callstack 0
  5887  0019B8                     ___fladd:
  5888                           	opt callstack 25
  5889  0019B8  5004               	movf	(___fladd@b+3)^0,w,c
  5890  0019BA  0B80               	andlw	128
  5891  0019BC  6E0D               	movwf	___fladd@signs^0,c
  5892  0019BE  5004               	movf	(___fladd@b+3)^0,w,c
  5893  0019C0  2404               	addwf	(___fladd@b+3)^0,w,c
  5894  0019C2  6E0F               	movwf	___fladd@bexp^0,c
  5895  0019C4  AE03               	btfss	(___fladd@b+2)^0,7,c
  5896  0019C6  EFE7  F00C         	goto	u2901
  5897  0019CA  EFE9  F00C         	goto	u2900
  5898  0019CE                     u2901:
  5899  0019CE  EFEA  F00C         	goto	l2855
  5900  0019D2                     u2900:
  5901  0019D2  800F               	bsf	___fladd@bexp^0,0,c
  5902  0019D4                     l2855:
  5903  0019D4  500F               	movf	___fladd@bexp^0,w,c
  5904  0019D6  B4D8               	btfsc	status,2,c
  5905  0019D8  EFF0  F00C         	goto	u2911
  5906  0019DC  EFF2  F00C         	goto	u2910
  5907  0019E0                     u2911:
  5908  0019E0  EF07  F00D         	goto	l2865
  5909  0019E4                     u2910:
  5910  0019E4  280F               	incf	___fladd@bexp^0,w,c
  5911  0019E6  A4D8               	btfss	status,2,c
  5912  0019E8  EFF8  F00C         	goto	u2921
  5913  0019EC  EFFA  F00C         	goto	u2920
  5914  0019F0                     u2921:
  5915  0019F0  EF02  F00D         	goto	l2861
  5916  0019F4                     u2920:
  5917  0019F4  0E00               	movlw	0
  5918  0019F6  6E01               	movwf	___fladd@b^0,c
  5919  0019F8  0E00               	movlw	0
  5920  0019FA  6E02               	movwf	(___fladd@b+1)^0,c
  5921  0019FC  0E00               	movlw	0
  5922  0019FE  6E03               	movwf	(___fladd@b+2)^0,c
  5923  001A00  0E00               	movlw	0
  5924  001A02  6E04               	movwf	(___fladd@b+3)^0,c
  5925  001A04                     l2861:
  5926  001A04  8E03               	bsf	(___fladd@b+2)^0,7,c
  5927  001A06  0E00               	movlw	0
  5928  001A08  6E04               	movwf	(___fladd@b+3)^0,c
  5929  001A0A  EF0F  F00D         	goto	l2867
  5930  001A0E                     l2865:
  5931  001A0E  0E00               	movlw	0
  5932  001A10  6E01               	movwf	___fladd@b^0,c
  5933  001A12  0E00               	movlw	0
  5934  001A14  6E02               	movwf	(___fladd@b+1)^0,c
  5935  001A16  0E00               	movlw	0
  5936  001A18  6E03               	movwf	(___fladd@b+2)^0,c
  5937  001A1A  0E00               	movlw	0
  5938  001A1C  6E04               	movwf	(___fladd@b+3)^0,c
  5939  001A1E                     l2867:
  5940  001A1E  5008               	movf	(___fladd@a+3)^0,w,c
  5941  001A20  0B80               	andlw	128
  5942  001A22  6E0E               	movwf	___fladd@aexp^0,c
  5943  001A24  500D               	movf	___fladd@signs^0,w,c
  5944  001A26  180E               	xorwf	___fladd@aexp^0,w,c
  5945  001A28  B4D8               	btfsc	status,2,c
  5946  001A2A  EF19  F00D         	goto	u2931
  5947  001A2E  EF1B  F00D         	goto	u2930
  5948  001A32                     u2931:
  5949  001A32  EF1C  F00D         	goto	l2873
  5950  001A36                     u2930:
  5951  001A36  8C0D               	bsf	___fladd@signs^0,6,c
  5952  001A38                     l2873:
  5953  001A38  5008               	movf	(___fladd@a+3)^0,w,c
  5954  001A3A  2408               	addwf	(___fladd@a+3)^0,w,c
  5955  001A3C  6E0E               	movwf	___fladd@aexp^0,c
  5956  001A3E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5957  001A40  EF24  F00D         	goto	u2941
  5958  001A44  EF26  F00D         	goto	u2940
  5959  001A48                     u2941:
  5960  001A48  EF27  F00D         	goto	l2879
  5961  001A4C                     u2940:
  5962  001A4C  800E               	bsf	___fladd@aexp^0,0,c
  5963  001A4E                     l2879:
  5964  001A4E  500E               	movf	___fladd@aexp^0,w,c
  5965  001A50  B4D8               	btfsc	status,2,c
  5966  001A52  EF2D  F00D         	goto	u2951
  5967  001A56  EF2F  F00D         	goto	u2950
  5968  001A5A                     u2951:
  5969  001A5A  EF44  F00D         	goto	l2889
  5970  001A5E                     u2950:
  5971  001A5E  280E               	incf	___fladd@aexp^0,w,c
  5972  001A60  A4D8               	btfss	status,2,c
  5973  001A62  EF35  F00D         	goto	u2961
  5974  001A66  EF37  F00D         	goto	u2960
  5975  001A6A                     u2961:
  5976  001A6A  EF3F  F00D         	goto	l2885
  5977  001A6E                     u2960:
  5978  001A6E  0E00               	movlw	0
  5979  001A70  6E05               	movwf	___fladd@a^0,c
  5980  001A72  0E00               	movlw	0
  5981  001A74  6E06               	movwf	(___fladd@a+1)^0,c
  5982  001A76  0E00               	movlw	0
  5983  001A78  6E07               	movwf	(___fladd@a+2)^0,c
  5984  001A7A  0E00               	movlw	0
  5985  001A7C  6E08               	movwf	(___fladd@a+3)^0,c
  5986  001A7E                     l2885:
  5987  001A7E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5988  001A80  0E00               	movlw	0
  5989  001A82  6E08               	movwf	(___fladd@a+3)^0,c
  5990  001A84  EF4C  F00D         	goto	l2891
  5991  001A88                     l2889:
  5992  001A88  0E00               	movlw	0
  5993  001A8A  6E05               	movwf	___fladd@a^0,c
  5994  001A8C  0E00               	movlw	0
  5995  001A8E  6E06               	movwf	(___fladd@a+1)^0,c
  5996  001A90  0E00               	movlw	0
  5997  001A92  6E07               	movwf	(___fladd@a+2)^0,c
  5998  001A94  0E00               	movlw	0
  5999  001A96  6E08               	movwf	(___fladd@a+3)^0,c
  6000  001A98                     l2891:
  6001  001A98  500F               	movf	___fladd@bexp^0,w,c
  6002  001A9A  5C0E               	subwf	___fladd@aexp^0,w,c
  6003  001A9C  B0D8               	btfsc	status,0,c
  6004  001A9E  EF53  F00D         	goto	u2971
  6005  001AA2  EF55  F00D         	goto	u2970
  6006  001AA6                     u2971:
  6007  001AA6  EF7C  F00D         	goto	l2927
  6008  001AAA                     u2970:
  6009  001AAA  AC0D               	btfss	___fladd@signs^0,6,c
  6010  001AAC  EF5A  F00D         	goto	u2981
  6011  001AB0  EF5C  F00D         	goto	u2980
  6012  001AB4                     u2981:
  6013  001AB4  EF5E  F00D         	goto	l2897
  6014  001AB8                     u2980:
  6015  001AB8  0E80               	movlw	128
  6016  001ABA  1A0D               	xorwf	___fladd@signs^0,f,c
  6017  001ABC                     l2897:
  6018  001ABC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6019  001AC0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6020  001AC4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6021  001AC8  C001  F010         	movff	___fladd@b,___fladd@grs
  6022  001ACC  C005  F001         	movff	___fladd@a,___fladd@b
  6023  001AD0  C010  F005         	movff	___fladd@grs,___fladd@a
  6024  001AD4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6025  001AD8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6026  001ADC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6027  001AE0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6028  001AE4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6029  001AE8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6030  001AEC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6031  001AF0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6032  001AF4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6033  001AF8                     l2927:
  6034  001AF8  0E00               	movlw	0
  6035  001AFA  6E10               	movwf	___fladd@grs^0,c
  6036  001AFC  500F               	movf	___fladd@bexp^0,w,c
  6037  001AFE  C00E  F009         	movff	___fladd@aexp,??___fladd
  6038  001B02  6A0A               	clrf	(??___fladd+1)^0,c
  6039  001B04  5E09               	subwf	??___fladd^0,f,c
  6040  001B06  0E00               	movlw	0
  6041  001B08  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6042  001B0A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6043  001B0C  EF91  F00D         	goto	u2991
  6044  001B10  500A               	movf	(??___fladd+1)^0,w,c
  6045  001B12  E109               	bnz	u2990
  6046  001B14  0E1A               	movlw	26
  6047  001B16  5C09               	subwf	??___fladd^0,w,c
  6048  001B18  A0D8               	btfss	status,0,c
  6049  001B1A  EF91  F00D         	goto	u2991
  6050  001B1E  EF93  F00D         	goto	u2990
  6051  001B22                     u2991:
  6052  001B22  EFCA  F00D         	goto	l828
  6053  001B26                     u2990:
  6054  001B26  5001               	movf	___fladd@b^0,w,c
  6055  001B28  1002               	iorwf	(___fladd@b+1)^0,w,c
  6056  001B2A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6057  001B2C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6058  001B2E  A4D8               	btfss	status,2,c
  6059  001B30  EF9C  F00D         	goto	u3001
  6060  001B34  EF9F  F00D         	goto	u3000
  6061  001B38                     u3001:
  6062  001B38  0E01               	movlw	1
  6063  001B3A  EFA0  F00D         	goto	u3010
  6064  001B3E                     u3000:
  6065  001B3E  0E00               	movlw	0
  6066  001B40                     u3010:
  6067  001B40  6E10               	movwf	___fladd@grs^0,c
  6068  001B42  0E00               	movlw	0
  6069  001B44  6E01               	movwf	___fladd@b^0,c
  6070  001B46  0E00               	movlw	0
  6071  001B48  6E02               	movwf	(___fladd@b+1)^0,c
  6072  001B4A  0E00               	movlw	0
  6073  001B4C  6E03               	movwf	(___fladd@b+2)^0,c
  6074  001B4E  0E00               	movlw	0
  6075  001B50  6E04               	movwf	(___fladd@b+3)^0,c
  6076  001B52  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6077  001B56  EFD3  F00D         	goto	l827
  6078  001B5A                     l829:
  6079  001B5A  A010               	btfss	___fladd@grs^0,0,c
  6080  001B5C  EFB2  F00D         	goto	u3021
  6081  001B60  EFB4  F00D         	goto	u3020
  6082  001B64                     u3021:
  6083  001B64  EFBA  F00D         	goto	l2939
  6084  001B68                     u3020:
  6085  001B68  90D8               	bcf	status,0,c
  6086  001B6A  3010               	rrcf	___fladd@grs^0,w,c
  6087  001B6C  0901               	iorlw	1
  6088  001B6E  6E10               	movwf	___fladd@grs^0,c
  6089  001B70  EFBC  F00D         	goto	l2941
  6090  001B74                     l2939:
  6091  001B74  90D8               	bcf	status,0,c
  6092  001B76  3210               	rrcf	___fladd@grs^0,f,c
  6093  001B78                     l2941:
  6094  001B78  A001               	btfss	___fladd@b^0,0,c
  6095  001B7A  EFC1  F00D         	goto	u3031
  6096  001B7E  EFC3  F00D         	goto	u3030
  6097  001B82                     u3031:
  6098  001B82  EFC4  F00D         	goto	l2945
  6099  001B86                     u3030:
  6100  001B86  8E10               	bsf	___fladd@grs^0,7,c
  6101  001B88                     l2945:
  6102  001B88  3404               	rlcf	(___fladd@b+3)^0,w,c
  6103  001B8A  3204               	rrcf	(___fladd@b+3)^0,f,c
  6104  001B8C  3203               	rrcf	(___fladd@b+2)^0,f,c
  6105  001B8E  3202               	rrcf	(___fladd@b+1)^0,f,c
  6106  001B90  3201               	rrcf	___fladd@b^0,f,c
  6107  001B92  2A0F               	incf	___fladd@bexp^0,f,c
  6108  001B94                     l828:
  6109  001B94  500E               	movf	___fladd@aexp^0,w,c
  6110  001B96  5C0F               	subwf	___fladd@bexp^0,w,c
  6111  001B98  A0D8               	btfss	status,0,c
  6112  001B9A  EFD1  F00D         	goto	u3041
  6113  001B9E  EFD3  F00D         	goto	u3040
  6114  001BA2                     u3041:
  6115  001BA2  EFAD  F00D         	goto	l829
  6116  001BA6                     u3040:
  6117  001BA6                     l827:
  6118  001BA6  BC0D               	btfsc	___fladd@signs^0,6,c
  6119  001BA8  EFD8  F00D         	goto	u3051
  6120  001BAC  EFDA  F00D         	goto	u3050
  6121  001BB0                     u3051:
  6122  001BB0  EF1A  F00E         	goto	l2973
  6123  001BB4                     u3050:
  6124  001BB4  500F               	movf	___fladd@bexp^0,w,c
  6125  001BB6  A4D8               	btfss	status,2,c
  6126  001BB8  EFE0  F00D         	goto	u3061
  6127  001BBC  EFE2  F00D         	goto	u3060
  6128  001BC0                     u3061:
  6129  001BC0  EFEC  F00D         	goto	l2955
  6130  001BC4                     u3060:
  6131  001BC4  0E00               	movlw	0
  6132  001BC6  6E01               	movwf	?___fladd^0,c
  6133  001BC8  0E00               	movlw	0
  6134  001BCA  6E02               	movwf	(?___fladd+1)^0,c
  6135  001BCC  0E00               	movlw	0
  6136  001BCE  6E03               	movwf	(?___fladd+2)^0,c
  6137  001BD0  0E00               	movlw	0
  6138  001BD2  6E04               	movwf	(?___fladd+3)^0,c
  6139  001BD4  EF3B  F00F         	goto	l836
  6140  001BD8                     l2955:
  6141  001BD8  5005               	movf	___fladd@a^0,w,c
  6142  001BDA  2601               	addwf	___fladd@b^0,f,c
  6143  001BDC  5006               	movf	(___fladd@a+1)^0,w,c
  6144  001BDE  2202               	addwfc	(___fladd@b+1)^0,f,c
  6145  001BE0  5007               	movf	(___fladd@a+2)^0,w,c
  6146  001BE2  2203               	addwfc	(___fladd@b+2)^0,f,c
  6147  001BE4  5008               	movf	(___fladd@a+3)^0,w,c
  6148  001BE6  2204               	addwfc	(___fladd@b+3)^0,f,c
  6149  001BE8  A004               	btfss	(___fladd@b+3)^0,0,c
  6150  001BEA  EFF9  F00D         	goto	u3071
  6151  001BEE  EFFB  F00D         	goto	u3070
  6152  001BF2                     u3071:
  6153  001BF2  EFA7  F00E         	goto	l3009
  6154  001BF6                     u3070:
  6155  001BF6  A010               	btfss	___fladd@grs^0,0,c
  6156  001BF8  EF00  F00E         	goto	u3081
  6157  001BFC  EF02  F00E         	goto	u3080
  6158  001C00                     u3081:
  6159  001C00  EF08  F00E         	goto	l2963
  6160  001C04                     u3080:
  6161  001C04  90D8               	bcf	status,0,c
  6162  001C06  3010               	rrcf	___fladd@grs^0,w,c
  6163  001C08  0901               	iorlw	1
  6164  001C0A  6E10               	movwf	___fladd@grs^0,c
  6165  001C0C  EF0A  F00E         	goto	l2965
  6166  001C10                     l2963:
  6167  001C10  90D8               	bcf	status,0,c
  6168  001C12  3210               	rrcf	___fladd@grs^0,f,c
  6169  001C14                     l2965:
  6170  001C14  A001               	btfss	___fladd@b^0,0,c
  6171  001C16  EF0F  F00E         	goto	u3091
  6172  001C1A  EF11  F00E         	goto	u3090
  6173  001C1E                     u3091:
  6174  001C1E  EF12  F00E         	goto	l2969
  6175  001C22                     u3090:
  6176  001C22  8E10               	bsf	___fladd@grs^0,7,c
  6177  001C24                     l2969:
  6178  001C24  3404               	rlcf	(___fladd@b+3)^0,w,c
  6179  001C26  3204               	rrcf	(___fladd@b+3)^0,f,c
  6180  001C28  3203               	rrcf	(___fladd@b+2)^0,f,c
  6181  001C2A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6182  001C2C  3201               	rrcf	___fladd@b^0,f,c
  6183  001C2E  2A0F               	incf	___fladd@bexp^0,f,c
  6184  001C30  EFA7  F00E         	goto	l3009
  6185  001C34                     l2973:
  6186  001C34  5005               	movf	___fladd@a^0,w,c
  6187  001C36  5C01               	subwf	___fladd@b^0,w,c
  6188  001C38  5006               	movf	(___fladd@a+1)^0,w,c
  6189  001C3A  5802               	subwfb	(___fladd@b+1)^0,w,c
  6190  001C3C  5007               	movf	(___fladd@a+2)^0,w,c
  6191  001C3E  5803               	subwfb	(___fladd@b+2)^0,w,c
  6192  001C40  5004               	movf	(___fladd@b+3)^0,w,c
  6193  001C42  0A80               	xorlw	128
  6194  001C44  6E09               	movwf	??___fladd^0,c
  6195  001C46  5008               	movf	(___fladd@a+3)^0,w,c
  6196  001C48  0A80               	xorlw	128
  6197  001C4A  5809               	subwfb	??___fladd^0,w,c
  6198  001C4C  B0D8               	btfsc	status,0,c
  6199  001C4E  EF2B  F00E         	goto	u3101
  6200  001C52  EF2D  F00E         	goto	u3100
  6201  001C56                     u3101:
  6202  001C56  EF58  F00E         	goto	l2983
  6203  001C5A                     u3100:
  6204  001C5A  5001               	movf	___fladd@b^0,w,c
  6205  001C5C  5C05               	subwf	___fladd@a^0,w,c
  6206  001C5E  6E09               	movwf	??___fladd^0,c
  6207  001C60  5002               	movf	(___fladd@b+1)^0,w,c
  6208  001C62  5806               	subwfb	(___fladd@a+1)^0,w,c
  6209  001C64  6E0A               	movwf	(??___fladd+1)^0,c
  6210  001C66  5003               	movf	(___fladd@b+2)^0,w,c
  6211  001C68  5807               	subwfb	(___fladd@a+2)^0,w,c
  6212  001C6A  6E0B               	movwf	(??___fladd+2)^0,c
  6213  001C6C  5004               	movf	(___fladd@b+3)^0,w,c
  6214  001C6E  5808               	subwfb	(___fladd@a+3)^0,w,c
  6215  001C70  6E0C               	movwf	(??___fladd+3)^0,c
  6216  001C72  0EFF               	movlw	255
  6217  001C74  2409               	addwf	??___fladd^0,w,c
  6218  001C76  6E01               	movwf	___fladd@b^0,c
  6219  001C78  0EFF               	movlw	255
  6220  001C7A  200A               	addwfc	(??___fladd+1)^0,w,c
  6221  001C7C  6E02               	movwf	(___fladd@b+1)^0,c
  6222  001C7E  0EFF               	movlw	255
  6223  001C80  200B               	addwfc	(??___fladd+2)^0,w,c
  6224  001C82  6E03               	movwf	(___fladd@b+2)^0,c
  6225  001C84  0EFF               	movlw	255
  6226  001C86  200C               	addwfc	(??___fladd+3)^0,w,c
  6227  001C88  6E04               	movwf	(___fladd@b+3)^0,c
  6228  001C8A  0E80               	movlw	128
  6229  001C8C  1A0D               	xorwf	___fladd@signs^0,f,c
  6230  001C8E  6C10               	negf	___fladd@grs^0,c
  6231  001C90  5010               	movf	___fladd@grs^0,w,c
  6232  001C92  A4D8               	btfss	status,2,c
  6233  001C94  EF4E  F00E         	goto	u3111
  6234  001C98  EF50  F00E         	goto	u3110
  6235  001C9C                     u3111:
  6236  001C9C  EF60  F00E         	goto	l844
  6237  001CA0                     u3110:
  6238  001CA0  0E01               	movlw	1
  6239  001CA2  2601               	addwf	___fladd@b^0,f,c
  6240  001CA4  0E00               	movlw	0
  6241  001CA6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6242  001CA8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6243  001CAA  2204               	addwfc	(___fladd@b+3)^0,f,c
  6244  001CAC  EF60  F00E         	goto	l844
  6245  001CB0                     l2983:
  6246  001CB0  5005               	movf	___fladd@a^0,w,c
  6247  001CB2  5E01               	subwf	___fladd@b^0,f,c
  6248  001CB4  5006               	movf	(___fladd@a+1)^0,w,c
  6249  001CB6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6250  001CB8  5007               	movf	(___fladd@a+2)^0,w,c
  6251  001CBA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6252  001CBC  5008               	movf	(___fladd@a+3)^0,w,c
  6253  001CBE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6254  001CC0                     l844:
  6255  001CC0  5001               	movf	___fladd@b^0,w,c
  6256  001CC2  1002               	iorwf	(___fladd@b+1)^0,w,c
  6257  001CC4  1003               	iorwf	(___fladd@b+2)^0,w,c
  6258  001CC6  1004               	iorwf	(___fladd@b+3)^0,w,c
  6259  001CC8  A4D8               	btfss	status,2,c
  6260  001CCA  EF69  F00E         	goto	u3121
  6261  001CCE  EF6B  F00E         	goto	u3120
  6262  001CD2                     u3121:
  6263  001CD2  EFA0  F00E         	goto	l3007
  6264  001CD6                     u3120:
  6265  001CD6  5010               	movf	___fladd@grs^0,w,c
  6266  001CD8  A4D8               	btfss	status,2,c
  6267  001CDA  EF71  F00E         	goto	u3131
  6268  001CDE  EF73  F00E         	goto	u3130
  6269  001CE2                     u3131:
  6270  001CE2  EFA0  F00E         	goto	l3007
  6271  001CE6                     u3130:
  6272  001CE6  0E00               	movlw	0
  6273  001CE8  6E01               	movwf	?___fladd^0,c
  6274  001CEA  0E00               	movlw	0
  6275  001CEC  6E02               	movwf	(?___fladd+1)^0,c
  6276  001CEE  0E00               	movlw	0
  6277  001CF0  6E03               	movwf	(?___fladd+2)^0,c
  6278  001CF2  0E00               	movlw	0
  6279  001CF4  6E04               	movwf	(?___fladd+3)^0,c
  6280  001CF6  EF3B  F00F         	goto	l836
  6281  001CFA                     l2991:
  6282  001CFA  90D8               	bcf	status,0,c
  6283  001CFC  3601               	rlcf	___fladd@b^0,f,c
  6284  001CFE  3602               	rlcf	(___fladd@b+1)^0,f,c
  6285  001D00  3603               	rlcf	(___fladd@b+2)^0,f,c
  6286  001D02  3604               	rlcf	(___fladd@b+3)^0,f,c
  6287  001D04  AE10               	btfss	___fladd@grs^0,7,c
  6288  001D06  EF87  F00E         	goto	u3141
  6289  001D0A  EF89  F00E         	goto	u3140
  6290  001D0E                     u3141:
  6291  001D0E  EF8A  F00E         	goto	l2997
  6292  001D12                     u3140:
  6293  001D12  8001               	bsf	___fladd@b^0,0,c
  6294  001D14                     l2997:
  6295  001D14  A010               	btfss	___fladd@grs^0,0,c
  6296  001D16  EF8F  F00E         	goto	u3151
  6297  001D1A  EF91  F00E         	goto	u3150
  6298  001D1E                     u3151:
  6299  001D1E  EF95  F00E         	goto	l3001
  6300  001D22                     u3150:
  6301  001D22  80D8               	bsf	status,0,c
  6302  001D24  3610               	rlcf	___fladd@grs^0,f,c
  6303  001D26  EF97  F00E         	goto	l3003
  6304  001D2A                     l3001:
  6305  001D2A  90D8               	bcf	status,0,c
  6306  001D2C  3610               	rlcf	___fladd@grs^0,f,c
  6307  001D2E                     l3003:
  6308  001D2E  500F               	movf	___fladd@bexp^0,w,c
  6309  001D30  B4D8               	btfsc	status,2,c
  6310  001D32  EF9D  F00E         	goto	u3161
  6311  001D36  EF9F  F00E         	goto	u3160
  6312  001D3A                     u3161:
  6313  001D3A  EFA0  F00E         	goto	l3007
  6314  001D3E                     u3160:
  6315  001D3E  060F               	decf	___fladd@bexp^0,f,c
  6316  001D40                     l3007:
  6317  001D40  AE03               	btfss	(___fladd@b+2)^0,7,c
  6318  001D42  EFA5  F00E         	goto	u3171
  6319  001D46  EFA7  F00E         	goto	u3170
  6320  001D4A                     u3171:
  6321  001D4A  EF7D  F00E         	goto	l2991
  6322  001D4E                     u3170:
  6323  001D4E                     l3009:
  6324  001D4E  0E00               	movlw	0
  6325  001D50  6E0E               	movwf	___fladd@aexp^0,c
  6326  001D52  AE10               	btfss	___fladd@grs^0,7,c
  6327  001D54  EFAE  F00E         	goto	u3181
  6328  001D58  EFB0  F00E         	goto	u3180
  6329  001D5C                     u3181:
  6330  001D5C  EFC8  F00E         	goto	l853
  6331  001D60                     u3180:
  6332  001D60  C010  F009         	movff	___fladd@grs,??___fladd
  6333  001D64  0E7F               	movlw	127
  6334  001D66  1609               	andwf	??___fladd^0,f,c
  6335  001D68  B4D8               	btfsc	status,2,c
  6336  001D6A  EFB9  F00E         	goto	u3191
  6337  001D6E  EFBB  F00E         	goto	u3190
  6338  001D72                     u3191:
  6339  001D72  EFBF  F00E         	goto	l854
  6340  001D76                     u3190:
  6341  001D76                     l3015:
  6342  001D76  0E01               	movlw	1
  6343  001D78  6E0E               	movwf	___fladd@aexp^0,c
  6344  001D7A  EFC8  F00E         	goto	l853
  6345  001D7E                     l854:
  6346  001D7E  A001               	btfss	___fladd@b^0,0,c
  6347  001D80  EFC4  F00E         	goto	u3201
  6348  001D84  EFC6  F00E         	goto	u3200
  6349  001D88                     u3201:
  6350  001D88  EFC8  F00E         	goto	l853
  6351  001D8C                     u3200:
  6352  001D8C  EFBB  F00E         	goto	l3015
  6353  001D90                     l853:
  6354  001D90  500E               	movf	___fladd@aexp^0,w,c
  6355  001D92  B4D8               	btfsc	status,2,c
  6356  001D94  EFCE  F00E         	goto	u3211
  6357  001D98  EFD0  F00E         	goto	u3210
  6358  001D9C                     u3211:
  6359  001D9C  EFFB  F00E         	goto	l3027
  6360  001DA0                     u3210:
  6361  001DA0  0E01               	movlw	1
  6362  001DA2  2601               	addwf	___fladd@b^0,f,c
  6363  001DA4  0E00               	movlw	0
  6364  001DA6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6365  001DA8  2203               	addwfc	(___fladd@b+2)^0,f,c
  6366  001DAA  2204               	addwfc	(___fladd@b+3)^0,f,c
  6367  001DAC  A004               	btfss	(___fladd@b+3)^0,0,c
  6368  001DAE  EFDB  F00E         	goto	u3221
  6369  001DB2  EFDD  F00E         	goto	u3220
  6370  001DB6                     u3221:
  6371  001DB6  EFFB  F00E         	goto	l3027
  6372  001DBA                     u3220:
  6373  001DBA  C001  F009         	movff	___fladd@b,??___fladd
  6374  001DBE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6375  001DC2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6376  001DC6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6377  001DCA  340C               	rlcf	(??___fladd+3)^0,w,c
  6378  001DCC  320C               	rrcf	(??___fladd+3)^0,f,c
  6379  001DCE  320B               	rrcf	(??___fladd+2)^0,f,c
  6380  001DD0  320A               	rrcf	(??___fladd+1)^0,f,c
  6381  001DD2  3209               	rrcf	??___fladd^0,f,c
  6382  001DD4  C009  F001         	movff	??___fladd,___fladd@b
  6383  001DD8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6384  001DDC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6385  001DE0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6386  001DE4  280F               	incf	___fladd@bexp^0,w,c
  6387  001DE6  B4D8               	btfsc	status,2,c
  6388  001DE8  EFF8  F00E         	goto	u3231
  6389  001DEC  EFFA  F00E         	goto	u3230
  6390  001DF0                     u3231:
  6391  001DF0  EFFB  F00E         	goto	l3027
  6392  001DF4                     u3230:
  6393  001DF4  2A0F               	incf	___fladd@bexp^0,f,c
  6394  001DF6                     l3027:
  6395  001DF6  280F               	incf	___fladd@bexp^0,w,c
  6396  001DF8  B4D8               	btfsc	status,2,c
  6397  001DFA  EF01  F00F         	goto	u3241
  6398  001DFE  EF03  F00F         	goto	u3240
  6399  001E02                     u3241:
  6400  001E02  EF0B  F00F         	goto	l3031
  6401  001E06                     u3240:
  6402  001E06  500F               	movf	___fladd@bexp^0,w,c
  6403  001E08  A4D8               	btfss	status,2,c
  6404  001E0A  EF09  F00F         	goto	u3251
  6405  001E0E  EF0B  F00F         	goto	u3250
  6406  001E12                     u3251:
  6407  001E12  EF1D  F00F         	goto	l3035
  6408  001E16                     u3250:
  6409  001E16                     l3031:
  6410  001E16  0E00               	movlw	0
  6411  001E18  6E01               	movwf	___fladd@b^0,c
  6412  001E1A  0E00               	movlw	0
  6413  001E1C  6E02               	movwf	(___fladd@b+1)^0,c
  6414  001E1E  0E00               	movlw	0
  6415  001E20  6E03               	movwf	(___fladd@b+2)^0,c
  6416  001E22  0E00               	movlw	0
  6417  001E24  6E04               	movwf	(___fladd@b+3)^0,c
  6418  001E26  500F               	movf	___fladd@bexp^0,w,c
  6419  001E28  A4D8               	btfss	status,2,c
  6420  001E2A  EF19  F00F         	goto	u3261
  6421  001E2E  EF1B  F00F         	goto	u3260
  6422  001E32                     u3261:
  6423  001E32  EF1D  F00F         	goto	l3035
  6424  001E36                     u3260:
  6425  001E36  0E00               	movlw	0
  6426  001E38  6E0D               	movwf	___fladd@signs^0,c
  6427  001E3A                     l3035:
  6428  001E3A  A00F               	btfss	___fladd@bexp^0,0,c
  6429  001E3C  EF22  F00F         	goto	u3271
  6430  001E40  EF24  F00F         	goto	u3270
  6431  001E44                     u3271:
  6432  001E44  EF27  F00F         	goto	l3039
  6433  001E48                     u3270:
  6434  001E48  8E03               	bsf	(___fladd@b+2)^0,7,c
  6435  001E4A  EF28  F00F         	goto	l3041
  6436  001E4E                     l3039:
  6437  001E4E  9E03               	bcf	(___fladd@b+2)^0,7,c
  6438  001E50                     l3041:
  6439  001E50  90D8               	bcf	status,0,c
  6440  001E52  300F               	rrcf	___fladd@bexp^0,w,c
  6441  001E54  6E04               	movwf	(___fladd@b+3)^0,c
  6442  001E56  AE0D               	btfss	___fladd@signs^0,7,c
  6443  001E58  EF30  F00F         	goto	u3281
  6444  001E5C  EF32  F00F         	goto	u3280
  6445  001E60                     u3281:
  6446  001E60  EF33  F00F         	goto	l3047
  6447  001E64                     u3280:
  6448  001E64  8E04               	bsf	(___fladd@b+3)^0,7,c
  6449  001E66                     l3047:
  6450  001E66  C001  F001         	movff	___fladd@b,?___fladd
  6451  001E6A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6452  001E6E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6453  001E72  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6454  001E76                     l836:
  6455  001E76  0012               	return		;funcret
  6456  001E78                     __end_of___fladd:
  6457                           	opt callstack 0
  6458                           
  6459 ;; *************** function ___flneg *****************
  6460 ;; Defined at:
  6461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  f1              4    0[COMRAM] unsigned char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  4    0[COMRAM] unsigned char 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6475 ;;      Params:         4       0       0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0
  6478 ;;      Totals:         4       0       0       0       0       0       0
  6479 ;;Total ram usage:        4 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_efgtoa
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text17
  6489  003FCE                     __ptext17:
  6490                           	opt callstack 0
  6491  003FCE                     ___flneg:
  6492                           	opt callstack 26
  6493  003FCE  5001               	movf	___flneg@f1^0,w,c
  6494  003FD0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6495  003FD2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6496  003FD4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6497  003FD6  B4D8               	btfsc	status,2,c
  6498  003FD8  EFF0  F01F         	goto	u4191
  6499  003FDC  EFF2  F01F         	goto	u4190
  6500  003FE0                     u4191:
  6501  003FE0  EFFA  F01F         	goto	l3543
  6502  003FE4                     u4190:
  6503  003FE4  0E00               	movlw	0
  6504  003FE6  1A01               	xorwf	___flneg@f1^0,f,c
  6505  003FE8  0E00               	movlw	0
  6506  003FEA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6507  003FEC  0E00               	movlw	0
  6508  003FEE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6509  003FF0  0E80               	movlw	128
  6510  003FF2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6511  003FF4                     l3543:
  6512  003FF4  C001  F001         	movff	___flneg@f1,?___flneg
  6513  003FF8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6514  003FFC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6515  004000  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6516  004004  0012               	return		;funcret
  6517  004006                     __end_of___flneg:
  6518                           	opt callstack 0
  6519                           
  6520 ;; *************** function ___flmul *****************
  6521 ;; Defined at:
  6522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  b               4   14[COMRAM] unsigned char 
  6525 ;;  a               4   18[COMRAM] unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  prod            4   33[COMRAM] struct .
  6528 ;;  grs             4   27[COMRAM] unsigned long 
  6529 ;;  temp            2   37[COMRAM] struct .
  6530 ;;  bexp            1   32[COMRAM] unsigned char 
  6531 ;;  aexp            1   31[COMRAM] unsigned char 
  6532 ;;  sign            1   26[COMRAM] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  4   14[COMRAM] unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0, prodl, prodh
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6542 ;;      Params:         8       0       0       0       0       0       0
  6543 ;;      Locals:        13       0       0       0       0       0       0
  6544 ;;      Temps:          4       0       0       0       0       0       0
  6545 ;;      Totals:        25       0       0       0       0       0       0
  6546 ;;Total ram usage:       25 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;;		_efgtoa
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text18
  6557  001E78                     __ptext18:
  6558                           	opt callstack 0
  6559  001E78                     ___flmul:
  6560                           	opt callstack 26
  6561  001E78  5012               	movf	(___flmul@b+3)^0,w,c
  6562  001E7A  0B80               	andlw	128
  6563  001E7C  6E1B               	movwf	___flmul@sign^0,c
  6564  001E7E  5012               	movf	(___flmul@b+3)^0,w,c
  6565  001E80  2412               	addwf	(___flmul@b+3)^0,w,c
  6566  001E82  6E21               	movwf	___flmul@bexp^0,c
  6567  001E84  AE11               	btfss	(___flmul@b+2)^0,7,c
  6568  001E86  EF47  F00F         	goto	u3801
  6569  001E8A  EF49  F00F         	goto	u3800
  6570  001E8E                     u3801:
  6571  001E8E  EF4A  F00F         	goto	l3291
  6572  001E92                     u3800:
  6573  001E92  8021               	bsf	___flmul@bexp^0,0,c
  6574  001E94                     l3291:
  6575  001E94  5021               	movf	___flmul@bexp^0,w,c
  6576  001E96  B4D8               	btfsc	status,2,c
  6577  001E98  EF50  F00F         	goto	u3811
  6578  001E9C  EF52  F00F         	goto	u3810
  6579  001EA0                     u3811:
  6580  001EA0  EF65  F00F         	goto	l3299
  6581  001EA4                     u3810:
  6582  001EA4  2821               	incf	___flmul@bexp^0,w,c
  6583  001EA6  A4D8               	btfss	status,2,c
  6584  001EA8  EF58  F00F         	goto	u3821
  6585  001EAC  EF5A  F00F         	goto	u3820
  6586  001EB0                     u3821:
  6587  001EB0  EF62  F00F         	goto	l3297
  6588  001EB4                     u3820:
  6589  001EB4  0E00               	movlw	0
  6590  001EB6  6E0F               	movwf	___flmul@b^0,c
  6591  001EB8  0E00               	movlw	0
  6592  001EBA  6E10               	movwf	(___flmul@b+1)^0,c
  6593  001EBC  0E00               	movlw	0
  6594  001EBE  6E11               	movwf	(___flmul@b+2)^0,c
  6595  001EC0  0E00               	movlw	0
  6596  001EC2  6E12               	movwf	(___flmul@b+3)^0,c
  6597  001EC4                     l3297:
  6598  001EC4  8E11               	bsf	(___flmul@b+2)^0,7,c
  6599  001EC6  EF6D  F00F         	goto	l3301
  6600  001ECA                     l3299:
  6601  001ECA  0E00               	movlw	0
  6602  001ECC  6E0F               	movwf	___flmul@b^0,c
  6603  001ECE  0E00               	movlw	0
  6604  001ED0  6E10               	movwf	(___flmul@b+1)^0,c
  6605  001ED2  0E00               	movlw	0
  6606  001ED4  6E11               	movwf	(___flmul@b+2)^0,c
  6607  001ED6  0E00               	movlw	0
  6608  001ED8  6E12               	movwf	(___flmul@b+3)^0,c
  6609  001EDA                     l3301:
  6610  001EDA  5016               	movf	(___flmul@a+3)^0,w,c
  6611  001EDC  0B80               	andlw	128
  6612  001EDE  1A1B               	xorwf	___flmul@sign^0,f,c
  6613  001EE0  5016               	movf	(___flmul@a+3)^0,w,c
  6614  001EE2  2416               	addwf	(___flmul@a+3)^0,w,c
  6615  001EE4  6E20               	movwf	___flmul@aexp^0,c
  6616  001EE6  AE15               	btfss	(___flmul@a+2)^0,7,c
  6617  001EE8  EF78  F00F         	goto	u3831
  6618  001EEC  EF7A  F00F         	goto	u3830
  6619  001EF0                     u3831:
  6620  001EF0  EF7B  F00F         	goto	l3309
  6621  001EF4                     u3830:
  6622  001EF4  8020               	bsf	___flmul@aexp^0,0,c
  6623  001EF6                     l3309:
  6624  001EF6  5020               	movf	___flmul@aexp^0,w,c
  6625  001EF8  B4D8               	btfsc	status,2,c
  6626  001EFA  EF81  F00F         	goto	u3841
  6627  001EFE  EF83  F00F         	goto	u3840
  6628  001F02                     u3841:
  6629  001F02  EF96  F00F         	goto	l3317
  6630  001F06                     u3840:
  6631  001F06  2820               	incf	___flmul@aexp^0,w,c
  6632  001F08  A4D8               	btfss	status,2,c
  6633  001F0A  EF89  F00F         	goto	u3851
  6634  001F0E  EF8B  F00F         	goto	u3850
  6635  001F12                     u3851:
  6636  001F12  EF93  F00F         	goto	l3315
  6637  001F16                     u3850:
  6638  001F16  0E00               	movlw	0
  6639  001F18  6E13               	movwf	___flmul@a^0,c
  6640  001F1A  0E00               	movlw	0
  6641  001F1C  6E14               	movwf	(___flmul@a+1)^0,c
  6642  001F1E  0E00               	movlw	0
  6643  001F20  6E15               	movwf	(___flmul@a+2)^0,c
  6644  001F22  0E00               	movlw	0
  6645  001F24  6E16               	movwf	(___flmul@a+3)^0,c
  6646  001F26                     l3315:
  6647  001F26  8E15               	bsf	(___flmul@a+2)^0,7,c
  6648  001F28  EF9E  F00F         	goto	l913
  6649  001F2C                     l3317:
  6650  001F2C  0E00               	movlw	0
  6651  001F2E  6E13               	movwf	___flmul@a^0,c
  6652  001F30  0E00               	movlw	0
  6653  001F32  6E14               	movwf	(___flmul@a+1)^0,c
  6654  001F34  0E00               	movlw	0
  6655  001F36  6E15               	movwf	(___flmul@a+2)^0,c
  6656  001F38  0E00               	movlw	0
  6657  001F3A  6E16               	movwf	(___flmul@a+3)^0,c
  6658  001F3C                     l913:
  6659  001F3C  5020               	movf	___flmul@aexp^0,w,c
  6660  001F3E  B4D8               	btfsc	status,2,c
  6661  001F40  EFA4  F00F         	goto	u3861
  6662  001F44  EFA6  F00F         	goto	u3860
  6663  001F48                     u3861:
  6664  001F48  EFAE  F00F         	goto	l3321
  6665  001F4C                     u3860:
  6666  001F4C  5021               	movf	___flmul@bexp^0,w,c
  6667  001F4E  A4D8               	btfss	status,2,c
  6668  001F50  EFAC  F00F         	goto	u3871
  6669  001F54  EFAE  F00F         	goto	u3870
  6670  001F58                     u3871:
  6671  001F58  EFB8  F00F         	goto	l3325
  6672  001F5C                     u3870:
  6673  001F5C                     l3321:
  6674  001F5C  0E00               	movlw	0
  6675  001F5E  6E0F               	movwf	?___flmul^0,c
  6676  001F60  0E00               	movlw	0
  6677  001F62  6E10               	movwf	(?___flmul+1)^0,c
  6678  001F64  0E00               	movlw	0
  6679  001F66  6E11               	movwf	(?___flmul+2)^0,c
  6680  001F68  0E00               	movlw	0
  6681  001F6A  6E12               	movwf	(?___flmul+3)^0,c
  6682  001F6C  EF50  F011         	goto	l917
  6683  001F70                     l3325:
  6684  001F70  5015               	movf	(___flmul@a+2)^0,w,c
  6685  001F72  020F               	mulwf	___flmul@b^0,c
  6686  001F74  CFF3 F026          	movff	prodl,___flmul@temp
  6687  001F78  CFF4 F027          	movff	prodh,___flmul@temp+1
  6688  001F7C  5026               	movf	___flmul@temp^0,w,c
  6689  001F7E  6E1C               	movwf	___flmul@grs^0,c
  6690  001F80  6A1D               	clrf	(___flmul@grs+1)^0,c
  6691  001F82  6A1E               	clrf	(___flmul@grs+2)^0,c
  6692  001F84  6A1F               	clrf	(___flmul@grs+3)^0,c
  6693  001F86  5027               	movf	(___flmul@temp+1)^0,w,c
  6694  001F88  6E22               	movwf	___flmul@prod^0,c
  6695  001F8A  6A23               	clrf	(___flmul@prod+1)^0,c
  6696  001F8C  6A24               	clrf	(___flmul@prod+2)^0,c
  6697  001F8E  6A25               	clrf	(___flmul@prod+3)^0,c
  6698  001F90  5014               	movf	(___flmul@a+1)^0,w,c
  6699  001F92  0210               	mulwf	(___flmul@b+1)^0,c
  6700  001F94  CFF3 F026          	movff	prodl,___flmul@temp
  6701  001F98  CFF4 F027          	movff	prodh,___flmul@temp+1
  6702  001F9C  5026               	movf	___flmul@temp^0,w,c
  6703  001F9E  261C               	addwf	___flmul@grs^0,f,c
  6704  001FA0  0E00               	movlw	0
  6705  001FA2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6706  001FA4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6707  001FA6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6708  001FA8  5027               	movf	(___flmul@temp+1)^0,w,c
  6709  001FAA  2622               	addwf	___flmul@prod^0,f,c
  6710  001FAC  0E00               	movlw	0
  6711  001FAE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6712  001FB0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6713  001FB2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6714  001FB4  5013               	movf	___flmul@a^0,w,c
  6715  001FB6  0211               	mulwf	(___flmul@b+2)^0,c
  6716  001FB8  CFF3 F026          	movff	prodl,___flmul@temp
  6717  001FBC  CFF4 F027          	movff	prodh,___flmul@temp+1
  6718  001FC0  5026               	movf	___flmul@temp^0,w,c
  6719  001FC2  261C               	addwf	___flmul@grs^0,f,c
  6720  001FC4  0E00               	movlw	0
  6721  001FC6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6722  001FC8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6723  001FCA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6724  001FCC  5027               	movf	(___flmul@temp+1)^0,w,c
  6725  001FCE  2622               	addwf	___flmul@prod^0,f,c
  6726  001FD0  0E00               	movlw	0
  6727  001FD2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6728  001FD4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6729  001FD6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6730  001FD8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6731  001FDC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6732  001FE0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6733  001FE4  6A1C               	clrf	___flmul@grs^0,c
  6734  001FE6  5013               	movf	___flmul@a^0,w,c
  6735  001FE8  0210               	mulwf	(___flmul@b+1)^0,c
  6736  001FEA  CFF3 F026          	movff	prodl,___flmul@temp
  6737  001FEE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6738  001FF2  5026               	movf	___flmul@temp^0,w,c
  6739  001FF4  261C               	addwf	___flmul@grs^0,f,c
  6740  001FF6  5027               	movf	(___flmul@temp+1)^0,w,c
  6741  001FF8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6742  001FFA  0E00               	movlw	0
  6743  001FFC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6744  001FFE  0E00               	movlw	0
  6745  002000  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6746  002002  5014               	movf	(___flmul@a+1)^0,w,c
  6747  002004  020F               	mulwf	___flmul@b^0,c
  6748  002006  CFF3 F026          	movff	prodl,___flmul@temp
  6749  00200A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6750  00200E  5026               	movf	___flmul@temp^0,w,c
  6751  002010  261C               	addwf	___flmul@grs^0,f,c
  6752  002012  5027               	movf	(___flmul@temp+1)^0,w,c
  6753  002014  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6754  002016  0E00               	movlw	0
  6755  002018  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6756  00201A  0E00               	movlw	0
  6757  00201C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6758  00201E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6759  002022  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6760  002026  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6761  00202A  6A1C               	clrf	___flmul@grs^0,c
  6762  00202C  5013               	movf	___flmul@a^0,w,c
  6763  00202E  020F               	mulwf	___flmul@b^0,c
  6764  002030  CFF3 F026          	movff	prodl,___flmul@temp
  6765  002034  CFF4 F027          	movff	prodh,___flmul@temp+1
  6766  002038  5026               	movf	___flmul@temp^0,w,c
  6767  00203A  261C               	addwf	___flmul@grs^0,f,c
  6768  00203C  5027               	movf	(___flmul@temp+1)^0,w,c
  6769  00203E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6770  002040  0E00               	movlw	0
  6771  002042  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6772  002044  0E00               	movlw	0
  6773  002046  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6774  002048  5015               	movf	(___flmul@a+2)^0,w,c
  6775  00204A  0210               	mulwf	(___flmul@b+1)^0,c
  6776  00204C  CFF3 F026          	movff	prodl,___flmul@temp
  6777  002050  CFF4 F027          	movff	prodh,___flmul@temp+1
  6778  002054  5026               	movf	___flmul@temp^0,w,c
  6779  002056  2622               	addwf	___flmul@prod^0,f,c
  6780  002058  5027               	movf	(___flmul@temp+1)^0,w,c
  6781  00205A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6782  00205C  0E00               	movlw	0
  6783  00205E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6784  002060  0E00               	movlw	0
  6785  002062  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6786  002064  5014               	movf	(___flmul@a+1)^0,w,c
  6787  002066  0211               	mulwf	(___flmul@b+2)^0,c
  6788  002068  CFF3 F026          	movff	prodl,___flmul@temp
  6789  00206C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6790  002070  5026               	movf	___flmul@temp^0,w,c
  6791  002072  2622               	addwf	___flmul@prod^0,f,c
  6792  002074  5027               	movf	(___flmul@temp+1)^0,w,c
  6793  002076  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6794  002078  0E00               	movlw	0
  6795  00207A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6796  00207C  0E00               	movlw	0
  6797  00207E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6798  002080  5015               	movf	(___flmul@a+2)^0,w,c
  6799  002082  0211               	mulwf	(___flmul@b+2)^0,c
  6800  002084  CFF3 F026          	movff	prodl,___flmul@temp
  6801  002088  CFF4 F027          	movff	prodh,___flmul@temp+1
  6802  00208C  5026               	movf	___flmul@temp^0,w,c
  6803  00208E  6E17               	movwf	??___flmul^0,c
  6804  002090  5027               	movf	(___flmul@temp+1)^0,w,c
  6805  002092  6E18               	movwf	(??___flmul+1)^0,c
  6806  002094  6A19               	clrf	(??___flmul+2)^0,c
  6807  002096  6A1A               	clrf	(??___flmul+3)^0,c
  6808  002098  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6809  00209C  C018  F019         	movff	??___flmul+1,??___flmul+2
  6810  0020A0  C017  F018         	movff	??___flmul,??___flmul+1
  6811  0020A4  6A17               	clrf	??___flmul^0,c
  6812  0020A6  5017               	movf	??___flmul^0,w,c
  6813  0020A8  2622               	addwf	___flmul@prod^0,f,c
  6814  0020AA  5018               	movf	(??___flmul+1)^0,w,c
  6815  0020AC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6816  0020AE  5019               	movf	(??___flmul+2)^0,w,c
  6817  0020B0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6818  0020B2  501A               	movf	(??___flmul+3)^0,w,c
  6819  0020B4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6820  0020B6  C01C  F017         	movff	___flmul@grs,??___flmul
  6821  0020BA  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6822  0020BE  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6823  0020C2  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6824  0020C6  0E19               	movlw	25
  6825  0020C8  EF6B  F010         	goto	u3880
  6826  0020CC                     u3885:
  6827  0020CC  90D8               	bcf	status,0,c
  6828  0020CE  321A               	rrcf	(??___flmul+3)^0,f,c
  6829  0020D0  3219               	rrcf	(??___flmul+2)^0,f,c
  6830  0020D2  3218               	rrcf	(??___flmul+1)^0,f,c
  6831  0020D4  3217               	rrcf	??___flmul^0,f,c
  6832  0020D6                     u3880:
  6833  0020D6  2EE8               	decfsz	wreg,f,c
  6834  0020D8  EF66  F010         	goto	u3885
  6835  0020DC  5017               	movf	??___flmul^0,w,c
  6836  0020DE  2622               	addwf	___flmul@prod^0,f,c
  6837  0020E0  5018               	movf	(??___flmul+1)^0,w,c
  6838  0020E2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6839  0020E4  5019               	movf	(??___flmul+2)^0,w,c
  6840  0020E6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6841  0020E8  501A               	movf	(??___flmul+3)^0,w,c
  6842  0020EA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6843  0020EC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6844  0020F0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6845  0020F4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6846  0020F8  6A1C               	clrf	___flmul@grs^0,c
  6847  0020FA  5020               	movf	___flmul@aexp^0,w,c
  6848  0020FC  C021  F017         	movff	___flmul@bexp,??___flmul
  6849  002100  6A18               	clrf	(??___flmul+1)^0,c
  6850  002102  2617               	addwf	??___flmul^0,f,c
  6851  002104  0E00               	movlw	0
  6852  002106  2218               	addwfc	(??___flmul+1)^0,f,c
  6853  002108  0E82               	movlw	130
  6854  00210A  2417               	addwf	??___flmul^0,w,c
  6855  00210C  6E26               	movwf	___flmul@temp^0,c
  6856  00210E  0EFF               	movlw	255
  6857  002110  2018               	addwfc	(??___flmul+1)^0,w,c
  6858  002112  6E27               	movwf	(___flmul@temp+1)^0,c
  6859  002114  EFA1  F010         	goto	l3373
  6860  002118                     l3367:
  6861  002118  90D8               	bcf	status,0,c
  6862  00211A  3622               	rlcf	___flmul@prod^0,f,c
  6863  00211C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6864  00211E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6865  002120  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6866  002122  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6867  002124  EF96  F010         	goto	u3891
  6868  002128  EF98  F010         	goto	u3890
  6869  00212C                     u3891:
  6870  00212C  EF99  F010         	goto	l920
  6871  002130                     u3890:
  6872  002130  8022               	bsf	___flmul@prod^0,0,c
  6873  002132                     l920:
  6874  002132  90D8               	bcf	status,0,c
  6875  002134  361C               	rlcf	___flmul@grs^0,f,c
  6876  002136  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6877  002138  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6878  00213A  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6879  00213C  0626               	decf	___flmul@temp^0,f,c
  6880  00213E  A0D8               	btfss	status,0,c
  6881  002140  0627               	decf	(___flmul@temp+1)^0,f,c
  6882  002142                     l3373:
  6883  002142  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6884  002144  EFA6  F010         	goto	u3901
  6885  002148  EFA8  F010         	goto	u3900
  6886  00214C                     u3901:
  6887  00214C  EF8C  F010         	goto	l3367
  6888  002150                     u3900:
  6889  002150  0E00               	movlw	0
  6890  002152  6E20               	movwf	___flmul@aexp^0,c
  6891  002154  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6892  002156  EFAF  F010         	goto	u3911
  6893  00215A  EFB1  F010         	goto	u3910
  6894  00215E                     u3911:
  6895  00215E  EFD5  F010         	goto	l922
  6896  002162                     u3910:
  6897  002162  0EFF               	movlw	255
  6898  002164  141C               	andwf	___flmul@grs^0,w,c
  6899  002166  6E17               	movwf	??___flmul^0,c
  6900  002168  0EFF               	movlw	255
  6901  00216A  141D               	andwf	(___flmul@grs+1)^0,w,c
  6902  00216C  6E18               	movwf	(??___flmul+1)^0,c
  6903  00216E  0EFF               	movlw	255
  6904  002170  141E               	andwf	(___flmul@grs+2)^0,w,c
  6905  002172  6E19               	movwf	(??___flmul+2)^0,c
  6906  002174  0E7F               	movlw	127
  6907  002176  141F               	andwf	(___flmul@grs+3)^0,w,c
  6908  002178  6E1A               	movwf	(??___flmul+3)^0,c
  6909  00217A  5017               	movf	??___flmul^0,w,c
  6910  00217C  1018               	iorwf	(??___flmul+1)^0,w,c
  6911  00217E  1019               	iorwf	(??___flmul+2)^0,w,c
  6912  002180  101A               	iorwf	(??___flmul+3)^0,w,c
  6913  002182  B4D8               	btfsc	status,2,c
  6914  002184  EFC6  F010         	goto	u3921
  6915  002188  EFC8  F010         	goto	u3920
  6916  00218C                     u3921:
  6917  00218C  EFCC  F010         	goto	l923
  6918  002190                     u3920:
  6919  002190                     l3381:
  6920  002190  0E01               	movlw	1
  6921  002192  6E20               	movwf	___flmul@aexp^0,c
  6922  002194  EFD5  F010         	goto	l922
  6923  002198                     l923:
  6924  002198  A022               	btfss	___flmul@prod^0,0,c
  6925  00219A  EFD1  F010         	goto	u3931
  6926  00219E  EFD3  F010         	goto	u3930
  6927  0021A2                     u3931:
  6928  0021A2  EFD5  F010         	goto	l922
  6929  0021A6                     u3930:
  6930  0021A6  EFC8  F010         	goto	l3381
  6931  0021AA                     l922:
  6932  0021AA  5020               	movf	___flmul@aexp^0,w,c
  6933  0021AC  B4D8               	btfsc	status,2,c
  6934  0021AE  EFDB  F010         	goto	u3941
  6935  0021B2  EFDD  F010         	goto	u3940
  6936  0021B6                     u3941:
  6937  0021B6  EF01  F011         	goto	l3393
  6938  0021BA                     u3940:
  6939  0021BA  0E01               	movlw	1
  6940  0021BC  2622               	addwf	___flmul@prod^0,f,c
  6941  0021BE  0E00               	movlw	0
  6942  0021C0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6943  0021C2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6944  0021C4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6945  0021C6  A025               	btfss	(___flmul@prod+3)^0,0,c
  6946  0021C8  EFE8  F010         	goto	u3951
  6947  0021CC  EFEA  F010         	goto	u3950
  6948  0021D0                     u3951:
  6949  0021D0  EF01  F011         	goto	l3393
  6950  0021D4                     u3950:
  6951  0021D4  C022  F017         	movff	___flmul@prod,??___flmul
  6952  0021D8  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6953  0021DC  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6954  0021E0  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6955  0021E4  341A               	rlcf	(??___flmul+3)^0,w,c
  6956  0021E6  321A               	rrcf	(??___flmul+3)^0,f,c
  6957  0021E8  3219               	rrcf	(??___flmul+2)^0,f,c
  6958  0021EA  3218               	rrcf	(??___flmul+1)^0,f,c
  6959  0021EC  3217               	rrcf	??___flmul^0,f,c
  6960  0021EE  C017  F022         	movff	??___flmul,___flmul@prod
  6961  0021F2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6962  0021F6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6963  0021FA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6964  0021FE  4A26               	infsnz	___flmul@temp^0,f,c
  6965  002200  2A27               	incf	(___flmul@temp+1)^0,f,c
  6966  002202                     l3393:
  6967  002202  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6968  002204  EF0C  F011         	goto	u3961
  6969  002208  5027               	movf	(___flmul@temp+1)^0,w,c
  6970  00220A  E108               	bnz	u3960
  6971  00220C  2826               	incf	___flmul@temp^0,w,c
  6972  00220E  A0D8               	btfss	status,0,c
  6973  002210  EF0C  F011         	goto	u3961
  6974  002214  EF0E  F011         	goto	u3960
  6975  002218                     u3961:
  6976  002218  EF18  F011         	goto	l3397
  6977  00221C                     u3960:
  6978  00221C  0E00               	movlw	0
  6979  00221E  6E22               	movwf	___flmul@prod^0,c
  6980  002220  0E00               	movlw	0
  6981  002222  6E23               	movwf	(___flmul@prod+1)^0,c
  6982  002224  0E80               	movlw	128
  6983  002226  6E24               	movwf	(___flmul@prod+2)^0,c
  6984  002228  0E7F               	movlw	127
  6985  00222A  6E25               	movwf	(___flmul@prod+3)^0,c
  6986  00222C  EF46  F011         	goto	l3409
  6987  002230                     l3397:
  6988  002230  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6989  002232  EF25  F011         	goto	u3970
  6990  002236  5027               	movf	(___flmul@temp+1)^0,w,c
  6991  002238  E106               	bnz	u3971
  6992  00223A  0426               	decf	___flmul@temp^0,w,c
  6993  00223C  B0D8               	btfsc	status,0,c
  6994  00223E  EF23  F011         	goto	u3971
  6995  002242  EF25  F011         	goto	u3970
  6996  002246                     u3971:
  6997  002246  EF31  F011         	goto	l930
  6998  00224A                     u3970:
  6999  00224A  0E00               	movlw	0
  7000  00224C  6E22               	movwf	___flmul@prod^0,c
  7001  00224E  0E00               	movlw	0
  7002  002250  6E23               	movwf	(___flmul@prod+1)^0,c
  7003  002252  0E00               	movlw	0
  7004  002254  6E24               	movwf	(___flmul@prod+2)^0,c
  7005  002256  0E00               	movlw	0
  7006  002258  6E25               	movwf	(___flmul@prod+3)^0,c
  7007  00225A  0E00               	movlw	0
  7008  00225C  6E1B               	movwf	___flmul@sign^0,c
  7009  00225E  EF46  F011         	goto	l3409
  7010  002262                     l930:
  7011  002262  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7012  002266  0EFF               	movlw	255
  7013  002268  1622               	andwf	___flmul@prod^0,f,c
  7014  00226A  0EFF               	movlw	255
  7015  00226C  1623               	andwf	(___flmul@prod+1)^0,f,c
  7016  00226E  0E7F               	movlw	127
  7017  002270  1624               	andwf	(___flmul@prod+2)^0,f,c
  7018  002272  0E00               	movlw	0
  7019  002274  1625               	andwf	(___flmul@prod+3)^0,f,c
  7020  002276  A021               	btfss	___flmul@bexp^0,0,c
  7021  002278  EF40  F011         	goto	u3981
  7022  00227C  EF42  F011         	goto	u3980
  7023  002280                     u3981:
  7024  002280  EF43  F011         	goto	l3407
  7025  002284                     u3980:
  7026  002284  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7027  002286                     l3407:
  7028  002286  90D8               	bcf	status,0,c
  7029  002288  3021               	rrcf	___flmul@bexp^0,w,c
  7030  00228A  6E25               	movwf	(___flmul@prod+3)^0,c
  7031  00228C                     l3409:
  7032  00228C  501B               	movf	___flmul@sign^0,w,c
  7033  00228E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7034  002290  C022  F00F         	movff	___flmul@prod,?___flmul
  7035  002294  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7036  002298  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7037  00229C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7038  0022A0                     l917:
  7039  0022A0  0012               	return		;funcret
  7040  0022A2                     __end_of___flmul:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function ___flge *****************
  7044 ;; Defined at:
  7045 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  ff1             4   39[COMRAM] unsigned char 
  7048 ;;  ff2             4   43[COMRAM] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;		None               void
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7060 ;;      Params:         8       0       0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0
  7062 ;;      Temps:          4       0       0       0       0       0       0
  7063 ;;      Totals:        12       0       0       0       0       0       0
  7064 ;;Total ram usage:       12 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_efgtoa
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text19
  7074  0032F6                     __ptext19:
  7075                           	opt callstack 0
  7076  0032F6                     ___flge:
  7077                           	opt callstack 26
  7078  0032F6  0E00               	movlw	0
  7079  0032F8  1428               	andwf	___flge@ff1^0,w,c
  7080  0032FA  6E30               	movwf	??___flge^0,c
  7081  0032FC  0E00               	movlw	0
  7082  0032FE  1429               	andwf	(___flge@ff1+1)^0,w,c
  7083  003300  6E31               	movwf	(??___flge+1)^0,c
  7084  003302  0E80               	movlw	128
  7085  003304  142A               	andwf	(___flge@ff1+2)^0,w,c
  7086  003306  6E32               	movwf	(??___flge+2)^0,c
  7087  003308  0E7F               	movlw	127
  7088  00330A  142B               	andwf	(___flge@ff1+3)^0,w,c
  7089  00330C  6E33               	movwf	(??___flge+3)^0,c
  7090  00330E  5030               	movf	??___flge^0,w,c
  7091  003310  1031               	iorwf	(??___flge+1)^0,w,c
  7092  003312  1032               	iorwf	(??___flge+2)^0,w,c
  7093  003314  1033               	iorwf	(??___flge+3)^0,w,c
  7094  003316  A4D8               	btfss	status,2,c
  7095  003318  EF90  F019         	goto	u4141
  7096  00331C  EF92  F019         	goto	u4140
  7097  003320                     u4141:
  7098  003320  EF9A  F019         	goto	l3521
  7099  003324                     u4140:
  7100  003324  0E00               	movlw	0
  7101  003326  6E28               	movwf	___flge@ff1^0,c
  7102  003328  0E00               	movlw	0
  7103  00332A  6E29               	movwf	(___flge@ff1+1)^0,c
  7104  00332C  0E00               	movlw	0
  7105  00332E  6E2A               	movwf	(___flge@ff1+2)^0,c
  7106  003330  0E00               	movlw	0
  7107  003332  6E2B               	movwf	(___flge@ff1+3)^0,c
  7108  003334                     l3521:
  7109  003334  0E00               	movlw	0
  7110  003336  142C               	andwf	___flge@ff2^0,w,c
  7111  003338  6E30               	movwf	??___flge^0,c
  7112  00333A  0E00               	movlw	0
  7113  00333C  142D               	andwf	(___flge@ff2+1)^0,w,c
  7114  00333E  6E31               	movwf	(??___flge+1)^0,c
  7115  003340  0E80               	movlw	128
  7116  003342  142E               	andwf	(___flge@ff2+2)^0,w,c
  7117  003344  6E32               	movwf	(??___flge+2)^0,c
  7118  003346  0E7F               	movlw	127
  7119  003348  142F               	andwf	(___flge@ff2+3)^0,w,c
  7120  00334A  6E33               	movwf	(??___flge+3)^0,c
  7121  00334C  5030               	movf	??___flge^0,w,c
  7122  00334E  1031               	iorwf	(??___flge+1)^0,w,c
  7123  003350  1032               	iorwf	(??___flge+2)^0,w,c
  7124  003352  1033               	iorwf	(??___flge+3)^0,w,c
  7125  003354  A4D8               	btfss	status,2,c
  7126  003356  EFAF  F019         	goto	u4151
  7127  00335A  EFB1  F019         	goto	u4150
  7128  00335E                     u4151:
  7129  00335E  EFB9  F019         	goto	l3525
  7130  003362                     u4150:
  7131  003362  0E00               	movlw	0
  7132  003364  6E2C               	movwf	___flge@ff2^0,c
  7133  003366  0E00               	movlw	0
  7134  003368  6E2D               	movwf	(___flge@ff2+1)^0,c
  7135  00336A  0E00               	movlw	0
  7136  00336C  6E2E               	movwf	(___flge@ff2+2)^0,c
  7137  00336E  0E00               	movlw	0
  7138  003370  6E2F               	movwf	(___flge@ff2+3)^0,c
  7139  003372                     l3525:
  7140  003372  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  7141  003374  EFBE  F019         	goto	u4161
  7142  003378  EFC0  F019         	goto	u4160
  7143  00337C                     u4161:
  7144  00337C  EFC9  F019         	goto	l3529
  7145  003380                     u4160:
  7146  003380  6C28               	negf	___flge@ff1^0,c
  7147  003382  1E29               	comf	(___flge@ff1+1)^0,f,c
  7148  003384  B0D8               	btfsc	status,0,c
  7149  003386  2A29               	incf	(___flge@ff1+1)^0,f,c
  7150  003388  1E2A               	comf	(___flge@ff1+2)^0,f,c
  7151  00338A  B0D8               	btfsc	status,0,c
  7152  00338C  2A2A               	incf	(___flge@ff1+2)^0,f,c
  7153  00338E  0E80               	movlw	128
  7154  003390  562B               	subfwb	(___flge@ff1+3)^0,f,c
  7155  003392                     l3529:
  7156  003392  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  7157  003394  EFCE  F019         	goto	u4171
  7158  003398  EFD0  F019         	goto	u4170
  7159  00339C                     u4171:
  7160  00339C  EFD9  F019         	goto	l564
  7161  0033A0                     u4170:
  7162  0033A0  6C2C               	negf	___flge@ff2^0,c
  7163  0033A2  1E2D               	comf	(___flge@ff2+1)^0,f,c
  7164  0033A4  B0D8               	btfsc	status,0,c
  7165  0033A6  2A2D               	incf	(___flge@ff2+1)^0,f,c
  7166  0033A8  1E2E               	comf	(___flge@ff2+2)^0,f,c
  7167  0033AA  B0D8               	btfsc	status,0,c
  7168  0033AC  2A2E               	incf	(___flge@ff2+2)^0,f,c
  7169  0033AE  0E80               	movlw	128
  7170  0033B0  562F               	subfwb	(___flge@ff2+3)^0,f,c
  7171  0033B2                     l564:
  7172  0033B2  0E00               	movlw	0
  7173  0033B4  1A28               	xorwf	___flge@ff1^0,f,c
  7174  0033B6  0E00               	movlw	0
  7175  0033B8  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  7176  0033BA  0E00               	movlw	0
  7177  0033BC  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  7178  0033BE  0E80               	movlw	128
  7179  0033C0  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  7180  0033C2  0E00               	movlw	0
  7181  0033C4  1A2C               	xorwf	___flge@ff2^0,f,c
  7182  0033C6  0E00               	movlw	0
  7183  0033C8  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  7184  0033CA  0E00               	movlw	0
  7185  0033CC  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  7186  0033CE  0E80               	movlw	128
  7187  0033D0  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  7188  0033D2  502C               	movf	___flge@ff2^0,w,c
  7189  0033D4  5C28               	subwf	___flge@ff1^0,w,c
  7190  0033D6  502D               	movf	(___flge@ff2+1)^0,w,c
  7191  0033D8  5829               	subwfb	(___flge@ff1+1)^0,w,c
  7192  0033DA  502E               	movf	(___flge@ff2+2)^0,w,c
  7193  0033DC  582A               	subwfb	(___flge@ff1+2)^0,w,c
  7194  0033DE  502F               	movf	(___flge@ff2+3)^0,w,c
  7195  0033E0  582B               	subwfb	(___flge@ff1+3)^0,w,c
  7196  0033E2  B0D8               	btfsc	status,0,c
  7197  0033E4  EFF6  F019         	goto	u4181
  7198  0033E8  EFF8  F019         	goto	u4180
  7199  0033EC                     u4181:
  7200  0033EC  EFFB  F019         	goto	l3535
  7201  0033F0                     u4180:
  7202  0033F0  90D8               	bcf	status,0,c
  7203  0033F2  EFFC  F019         	goto	l569
  7204  0033F6                     l3535:
  7205  0033F6  80D8               	bsf	status,0,c
  7206  0033F8                     l569:
  7207  0033F8  0012               	return		;funcret
  7208  0033FA                     __end_of___flge:
  7209                           	opt callstack 0
  7210                           
  7211 ;; *************** function ___fleq *****************
  7212 ;; Defined at:
  7213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  ff1             4    0[COMRAM] unsigned char 
  7216 ;;  ff2             4    4[COMRAM] unsigned char 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7228 ;;      Params:         8       0       0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0
  7230 ;;      Temps:          4       0       0       0       0       0       0
  7231 ;;      Totals:        12       0       0       0       0       0       0
  7232 ;;Total ram usage:       12 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_efgtoa
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text20
  7242  003AA0                     __ptext20:
  7243                           	opt callstack 0
  7244  003AA0                     ___fleq:
  7245                           	opt callstack 26
  7246  003AA0  0E00               	movlw	0
  7247  003AA2  1401               	andwf	___fleq@ff1^0,w,c
  7248  003AA4  6E09               	movwf	??___fleq^0,c
  7249  003AA6  0E00               	movlw	0
  7250  003AA8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7251  003AAA  6E0A               	movwf	(??___fleq+1)^0,c
  7252  003AAC  0E80               	movlw	128
  7253  003AAE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7254  003AB0  6E0B               	movwf	(??___fleq+2)^0,c
  7255  003AB2  0E7F               	movlw	127
  7256  003AB4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7257  003AB6  6E0C               	movwf	(??___fleq+3)^0,c
  7258  003AB8  5009               	movf	??___fleq^0,w,c
  7259  003ABA  100A               	iorwf	(??___fleq+1)^0,w,c
  7260  003ABC  100B               	iorwf	(??___fleq+2)^0,w,c
  7261  003ABE  100C               	iorwf	(??___fleq+3)^0,w,c
  7262  003AC0  A4D8               	btfss	status,2,c
  7263  003AC2  EF65  F01D         	goto	u4111
  7264  003AC6  EF67  F01D         	goto	u4110
  7265  003ACA                     u4111:
  7266  003ACA  EF6F  F01D         	goto	l3505
  7267  003ACE                     u4110:
  7268  003ACE  0E00               	movlw	0
  7269  003AD0  6E01               	movwf	___fleq@ff1^0,c
  7270  003AD2  0E00               	movlw	0
  7271  003AD4  6E02               	movwf	(___fleq@ff1+1)^0,c
  7272  003AD6  0E00               	movlw	0
  7273  003AD8  6E03               	movwf	(___fleq@ff1+2)^0,c
  7274  003ADA  0E00               	movlw	0
  7275  003ADC  6E04               	movwf	(___fleq@ff1+3)^0,c
  7276  003ADE                     l3505:
  7277  003ADE  0E00               	movlw	0
  7278  003AE0  1405               	andwf	___fleq@ff2^0,w,c
  7279  003AE2  6E09               	movwf	??___fleq^0,c
  7280  003AE4  0E00               	movlw	0
  7281  003AE6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7282  003AE8  6E0A               	movwf	(??___fleq+1)^0,c
  7283  003AEA  0E80               	movlw	128
  7284  003AEC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7285  003AEE  6E0B               	movwf	(??___fleq+2)^0,c
  7286  003AF0  0E7F               	movlw	127
  7287  003AF2  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7288  003AF4  6E0C               	movwf	(??___fleq+3)^0,c
  7289  003AF6  5009               	movf	??___fleq^0,w,c
  7290  003AF8  100A               	iorwf	(??___fleq+1)^0,w,c
  7291  003AFA  100B               	iorwf	(??___fleq+2)^0,w,c
  7292  003AFC  100C               	iorwf	(??___fleq+3)^0,w,c
  7293  003AFE  A4D8               	btfss	status,2,c
  7294  003B00  EF84  F01D         	goto	u4121
  7295  003B04  EF86  F01D         	goto	u4120
  7296  003B08                     u4121:
  7297  003B08  EF8E  F01D         	goto	l3509
  7298  003B0C                     u4120:
  7299  003B0C  0E00               	movlw	0
  7300  003B0E  6E05               	movwf	___fleq@ff2^0,c
  7301  003B10  0E00               	movlw	0
  7302  003B12  6E06               	movwf	(___fleq@ff2+1)^0,c
  7303  003B14  0E00               	movlw	0
  7304  003B16  6E07               	movwf	(___fleq@ff2+2)^0,c
  7305  003B18  0E00               	movlw	0
  7306  003B1A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7307  003B1C                     l3509:
  7308  003B1C  5005               	movf	___fleq@ff2^0,w,c
  7309  003B1E  1801               	xorwf	___fleq@ff1^0,w,c
  7310  003B20  E10F               	bnz	u4130
  7311  003B22  5006               	movf	(___fleq@ff2+1)^0,w,c
  7312  003B24  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7313  003B26  E10C               	bnz	u4130
  7314  003B28  5007               	movf	(___fleq@ff2+2)^0,w,c
  7315  003B2A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7316  003B2C  E109               	bnz	u4130
  7317  003B2E  5008               	movf	(___fleq@ff2+3)^0,w,c
  7318  003B30  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7319  003B32  B4D8               	btfsc	status,2,c
  7320  003B34  EF9E  F01D         	goto	u4131
  7321  003B38  EFA0  F01D         	goto	u4130
  7322  003B3C                     u4131:
  7323  003B3C  EFA3  F01D         	goto	l3513
  7324  003B40                     u4130:
  7325  003B40  90D8               	bcf	status,0,c
  7326  003B42  EFA4  F01D         	goto	l558
  7327  003B46                     l3513:
  7328  003B46  80D8               	bsf	status,0,c
  7329  003B48                     l558:
  7330  003B48  0012               	return		;funcret
  7331  003B4A                     __end_of___fleq:
  7332                           	opt callstack 0
  7333                           
  7334 ;; *************** function ___fldiv *****************
  7335 ;; Defined at:
  7336 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  b               4   39[COMRAM] unsigned char 
  7339 ;;  a               4   43[COMRAM] unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  grs             4   58[COMRAM] unsigned long 
  7342 ;;  rem             4   51[COMRAM] unsigned long 
  7343 ;;  new_exp         2   56[COMRAM] short 
  7344 ;;  aexp            1   63[COMRAM] unsigned char 
  7345 ;;  bexp            1   62[COMRAM] unsigned char 
  7346 ;;  sign            1   55[COMRAM] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  4   39[COMRAM] unsigned char 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7356 ;;      Params:         8       0       0       0       0       0       0
  7357 ;;      Locals:        13       0       0       0       0       0       0
  7358 ;;      Temps:          4       0       0       0       0       0       0
  7359 ;;      Totals:        25       0       0       0       0       0       0
  7360 ;;Total ram usage:       25 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_main
  7366 ;;		_efgtoa
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text21
  7371  0022A2                     __ptext21:
  7372                           	opt callstack 0
  7373  0022A2                     ___fldiv:
  7374                           	opt callstack 26
  7375  0022A2  502B               	movf	(___fldiv@b+3)^0,w,c
  7376  0022A4  0B80               	andlw	128
  7377  0022A6  6E38               	movwf	___fldiv@sign^0,c
  7378  0022A8  502B               	movf	(___fldiv@b+3)^0,w,c
  7379  0022AA  242B               	addwf	(___fldiv@b+3)^0,w,c
  7380  0022AC  6E3F               	movwf	___fldiv@bexp^0,c
  7381  0022AE  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7382  0022B0  EF5C  F011         	goto	u3571
  7383  0022B4  EF5E  F011         	goto	u3570
  7384  0022B8                     u3571:
  7385  0022B8  EF5F  F011         	goto	l3153
  7386  0022BC                     u3570:
  7387  0022BC  803F               	bsf	___fldiv@bexp^0,0,c
  7388  0022BE                     l3153:
  7389  0022BE  503F               	movf	___fldiv@bexp^0,w,c
  7390  0022C0  B4D8               	btfsc	status,2,c
  7391  0022C2  EF65  F011         	goto	u3581
  7392  0022C6  EF67  F011         	goto	u3580
  7393  0022CA                     u3581:
  7394  0022CA  EF7C  F011         	goto	l3163
  7395  0022CE                     u3580:
  7396  0022CE  283F               	incf	___fldiv@bexp^0,w,c
  7397  0022D0  A4D8               	btfss	status,2,c
  7398  0022D2  EF6D  F011         	goto	u3591
  7399  0022D6  EF6F  F011         	goto	u3590
  7400  0022DA                     u3591:
  7401  0022DA  EF77  F011         	goto	l3159
  7402  0022DE                     u3590:
  7403  0022DE  0E00               	movlw	0
  7404  0022E0  6E28               	movwf	___fldiv@b^0,c
  7405  0022E2  0E00               	movlw	0
  7406  0022E4  6E29               	movwf	(___fldiv@b+1)^0,c
  7407  0022E6  0E00               	movlw	0
  7408  0022E8  6E2A               	movwf	(___fldiv@b+2)^0,c
  7409  0022EA  0E00               	movlw	0
  7410  0022EC  6E2B               	movwf	(___fldiv@b+3)^0,c
  7411  0022EE                     l3159:
  7412  0022EE  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7413  0022F0  0E00               	movlw	0
  7414  0022F2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7415  0022F4  EF84  F011         	goto	l3165
  7416  0022F8                     l3163:
  7417  0022F8  0E00               	movlw	0
  7418  0022FA  6E28               	movwf	___fldiv@b^0,c
  7419  0022FC  0E00               	movlw	0
  7420  0022FE  6E29               	movwf	(___fldiv@b+1)^0,c
  7421  002300  0E00               	movlw	0
  7422  002302  6E2A               	movwf	(___fldiv@b+2)^0,c
  7423  002304  0E00               	movlw	0
  7424  002306  6E2B               	movwf	(___fldiv@b+3)^0,c
  7425  002308                     l3165:
  7426  002308  502F               	movf	(___fldiv@a+3)^0,w,c
  7427  00230A  0B80               	andlw	128
  7428  00230C  1A38               	xorwf	___fldiv@sign^0,f,c
  7429  00230E  502F               	movf	(___fldiv@a+3)^0,w,c
  7430  002310  242F               	addwf	(___fldiv@a+3)^0,w,c
  7431  002312  6E40               	movwf	___fldiv@aexp^0,c
  7432  002314  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7433  002316  EF8F  F011         	goto	u3601
  7434  00231A  EF91  F011         	goto	u3600
  7435  00231E                     u3601:
  7436  00231E  EF92  F011         	goto	l3173
  7437  002322                     u3600:
  7438  002322  8040               	bsf	___fldiv@aexp^0,0,c
  7439  002324                     l3173:
  7440  002324  5040               	movf	___fldiv@aexp^0,w,c
  7441  002326  B4D8               	btfsc	status,2,c
  7442  002328  EF98  F011         	goto	u3611
  7443  00232C  EF9A  F011         	goto	u3610
  7444  002330                     u3611:
  7445  002330  EFAF  F011         	goto	l3183
  7446  002334                     u3610:
  7447  002334  2840               	incf	___fldiv@aexp^0,w,c
  7448  002336  A4D8               	btfss	status,2,c
  7449  002338  EFA0  F011         	goto	u3621
  7450  00233C  EFA2  F011         	goto	u3620
  7451  002340                     u3621:
  7452  002340  EFAA  F011         	goto	l3179
  7453  002344                     u3620:
  7454  002344  0E00               	movlw	0
  7455  002346  6E2C               	movwf	___fldiv@a^0,c
  7456  002348  0E00               	movlw	0
  7457  00234A  6E2D               	movwf	(___fldiv@a+1)^0,c
  7458  00234C  0E00               	movlw	0
  7459  00234E  6E2E               	movwf	(___fldiv@a+2)^0,c
  7460  002350  0E00               	movlw	0
  7461  002352  6E2F               	movwf	(___fldiv@a+3)^0,c
  7462  002354                     l3179:
  7463  002354  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7464  002356  0E00               	movlw	0
  7465  002358  6E2F               	movwf	(___fldiv@a+3)^0,c
  7466  00235A  EFB7  F011         	goto	l3185
  7467  00235E                     l3183:
  7468  00235E  0E00               	movlw	0
  7469  002360  6E2C               	movwf	___fldiv@a^0,c
  7470  002362  0E00               	movlw	0
  7471  002364  6E2D               	movwf	(___fldiv@a+1)^0,c
  7472  002366  0E00               	movlw	0
  7473  002368  6E2E               	movwf	(___fldiv@a+2)^0,c
  7474  00236A  0E00               	movlw	0
  7475  00236C  6E2F               	movwf	(___fldiv@a+3)^0,c
  7476  00236E                     l3185:
  7477  00236E  502C               	movf	___fldiv@a^0,w,c
  7478  002370  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7479  002372  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7480  002374  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7481  002376  A4D8               	btfss	status,2,c
  7482  002378  EFC0  F011         	goto	u3631
  7483  00237C  EFC2  F011         	goto	u3630
  7484  002380                     u3631:
  7485  002380  EFDA  F011         	goto	l3197
  7486  002384                     u3630:
  7487  002384  0E00               	movlw	0
  7488  002386  6E28               	movwf	___fldiv@b^0,c
  7489  002388  0E00               	movlw	0
  7490  00238A  6E29               	movwf	(___fldiv@b+1)^0,c
  7491  00238C  0E00               	movlw	0
  7492  00238E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7493  002390  0E00               	movlw	0
  7494  002392  6E2B               	movwf	(___fldiv@b+3)^0,c
  7495  002394  0E80               	movlw	128
  7496  002396  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7497  002398  0E7F               	movlw	127
  7498  00239A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7499  00239C                     l3191:
  7500  00239C  5038               	movf	___fldiv@sign^0,w,c
  7501  00239E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7502  0023A0  C028  F028         	movff	___fldiv@b,?___fldiv
  7503  0023A4  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7504  0023A8  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7505  0023AC  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7506  0023B0  EF1D  F013         	goto	l881
  7507  0023B4                     l3197:
  7508  0023B4  503F               	movf	___fldiv@bexp^0,w,c
  7509  0023B6  A4D8               	btfss	status,2,c
  7510  0023B8  EFE0  F011         	goto	u3641
  7511  0023BC  EFE2  F011         	goto	u3640
  7512  0023C0                     u3641:
  7513  0023C0  EFEC  F011         	goto	l3205
  7514  0023C4                     u3640:
  7515  0023C4  0E00               	movlw	0
  7516  0023C6  6E28               	movwf	?___fldiv^0,c
  7517  0023C8  0E00               	movlw	0
  7518  0023CA  6E29               	movwf	(?___fldiv+1)^0,c
  7519  0023CC  0E00               	movlw	0
  7520  0023CE  6E2A               	movwf	(?___fldiv+2)^0,c
  7521  0023D0  0E00               	movlw	0
  7522  0023D2  6E2B               	movwf	(?___fldiv+3)^0,c
  7523  0023D4  EF1D  F013         	goto	l881
  7524  0023D8                     l3205:
  7525  0023D8  5040               	movf	___fldiv@aexp^0,w,c
  7526  0023DA  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7527  0023DE  6A31               	clrf	(??___fldiv+1)^0,c
  7528  0023E0  5E30               	subwf	??___fldiv^0,f,c
  7529  0023E2  0E00               	movlw	0
  7530  0023E4  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7531  0023E6  0E7F               	movlw	127
  7532  0023E8  2430               	addwf	??___fldiv^0,w,c
  7533  0023EA  6E39               	movwf	___fldiv@new_exp^0,c
  7534  0023EC  0E00               	movlw	0
  7535  0023EE  2031               	addwfc	(??___fldiv+1)^0,w,c
  7536  0023F0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7537  0023F2  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7538  0023F6  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7539  0023FA  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7540  0023FE  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7541  002402  0E00               	movlw	0
  7542  002404  6E28               	movwf	___fldiv@b^0,c
  7543  002406  0E00               	movlw	0
  7544  002408  6E29               	movwf	(___fldiv@b+1)^0,c
  7545  00240A  0E00               	movlw	0
  7546  00240C  6E2A               	movwf	(___fldiv@b+2)^0,c
  7547  00240E  0E00               	movlw	0
  7548  002410  6E2B               	movwf	(___fldiv@b+3)^0,c
  7549  002412  0E00               	movlw	0
  7550  002414  6E3B               	movwf	___fldiv@grs^0,c
  7551  002416  0E00               	movlw	0
  7552  002418  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7553  00241A  0E00               	movlw	0
  7554  00241C  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7555  00241E  0E00               	movlw	0
  7556  002420  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7557  002422  0E00               	movlw	0
  7558  002424  6E40               	movwf	___fldiv@aexp^0,c
  7559  002426  EF4D  F012         	goto	l883
  7560  00242A                     l3215:
  7561  00242A  5040               	movf	___fldiv@aexp^0,w,c
  7562  00242C  B4D8               	btfsc	status,2,c
  7563  00242E  EF1B  F012         	goto	u3651
  7564  002432  EF1D  F012         	goto	u3650
  7565  002436                     u3651:
  7566  002436  EF34  F012         	goto	l3223
  7567  00243A                     u3650:
  7568  00243A  90D8               	bcf	status,0,c
  7569  00243C  3634               	rlcf	___fldiv@rem^0,f,c
  7570  00243E  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7571  002440  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7572  002442  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7573  002444  90D8               	bcf	status,0,c
  7574  002446  3628               	rlcf	___fldiv@b^0,f,c
  7575  002448  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7576  00244A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7577  00244C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7578  00244E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7579  002450  EF2C  F012         	goto	u3661
  7580  002454  EF2E  F012         	goto	u3660
  7581  002458                     u3661:
  7582  002458  EF2F  F012         	goto	l886
  7583  00245C                     u3660:
  7584  00245C  8028               	bsf	___fldiv@b^0,0,c
  7585  00245E                     l886:
  7586  00245E  90D8               	bcf	status,0,c
  7587  002460  363B               	rlcf	___fldiv@grs^0,f,c
  7588  002462  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7589  002464  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7590  002466  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7591  002468                     l3223:
  7592  002468  502C               	movf	___fldiv@a^0,w,c
  7593  00246A  5C34               	subwf	___fldiv@rem^0,w,c
  7594  00246C  502D               	movf	(___fldiv@a+1)^0,w,c
  7595  00246E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7596  002470  502E               	movf	(___fldiv@a+2)^0,w,c
  7597  002472  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7598  002474  502F               	movf	(___fldiv@a+3)^0,w,c
  7599  002476  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7600  002478  A0D8               	btfss	status,0,c
  7601  00247A  EF41  F012         	goto	u3671
  7602  00247E  EF43  F012         	goto	u3670
  7603  002482                     u3671:
  7604  002482  EF4C  F012         	goto	l3229
  7605  002486                     u3670:
  7606  002486  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7607  002488  502C               	movf	___fldiv@a^0,w,c
  7608  00248A  5E34               	subwf	___fldiv@rem^0,f,c
  7609  00248C  502D               	movf	(___fldiv@a+1)^0,w,c
  7610  00248E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7611  002490  502E               	movf	(___fldiv@a+2)^0,w,c
  7612  002492  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7613  002494  502F               	movf	(___fldiv@a+3)^0,w,c
  7614  002496  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7615  002498                     l3229:
  7616  002498  2A40               	incf	___fldiv@aexp^0,f,c
  7617  00249A                     l883:
  7618  00249A  0E19               	movlw	25
  7619  00249C  6440               	cpfsgt	___fldiv@aexp^0,c
  7620  00249E  EF53  F012         	goto	u3681
  7621  0024A2  EF55  F012         	goto	u3680
  7622  0024A6                     u3681:
  7623  0024A6  EF15  F012         	goto	l3215
  7624  0024AA                     u3680:
  7625  0024AA  5034               	movf	___fldiv@rem^0,w,c
  7626  0024AC  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7627  0024AE  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7628  0024B0  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7629  0024B2  B4D8               	btfsc	status,2,c
  7630  0024B4  EF5E  F012         	goto	u3691
  7631  0024B8  EF60  F012         	goto	u3690
  7632  0024BC                     u3691:
  7633  0024BC  EF78  F012         	goto	l3241
  7634  0024C0                     u3690:
  7635  0024C0  803B               	bsf	___fldiv@grs^0,0,c
  7636  0024C2  EF78  F012         	goto	l3241
  7637  0024C6                     l3235:
  7638  0024C6  90D8               	bcf	status,0,c
  7639  0024C8  3628               	rlcf	___fldiv@b^0,f,c
  7640  0024CA  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7641  0024CC  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7642  0024CE  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7643  0024D0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7644  0024D2  EF6D  F012         	goto	u3701
  7645  0024D6  EF6F  F012         	goto	u3700
  7646  0024DA                     u3701:
  7647  0024DA  EF70  F012         	goto	l892
  7648  0024DE                     u3700:
  7649  0024DE  8028               	bsf	___fldiv@b^0,0,c
  7650  0024E0                     l892:
  7651  0024E0  90D8               	bcf	status,0,c
  7652  0024E2  363B               	rlcf	___fldiv@grs^0,f,c
  7653  0024E4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7654  0024E6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7655  0024E8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7656  0024EA  0639               	decf	___fldiv@new_exp^0,f,c
  7657  0024EC  A0D8               	btfss	status,0,c
  7658  0024EE  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7659  0024F0                     l3241:
  7660  0024F0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7661  0024F2  EF7D  F012         	goto	u3711
  7662  0024F6  EF7F  F012         	goto	u3710
  7663  0024FA                     u3711:
  7664  0024FA  EF63  F012         	goto	l3235
  7665  0024FE                     u3710:
  7666  0024FE  0E00               	movlw	0
  7667  002500  6E40               	movwf	___fldiv@aexp^0,c
  7668  002502  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7669  002504  EF86  F012         	goto	u3721
  7670  002508  EF88  F012         	goto	u3720
  7671  00250C                     u3721:
  7672  00250C  EFAC  F012         	goto	l894
  7673  002510                     u3720:
  7674  002510  0EFF               	movlw	255
  7675  002512  143B               	andwf	___fldiv@grs^0,w,c
  7676  002514  6E30               	movwf	??___fldiv^0,c
  7677  002516  0EFF               	movlw	255
  7678  002518  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7679  00251A  6E31               	movwf	(??___fldiv+1)^0,c
  7680  00251C  0EFF               	movlw	255
  7681  00251E  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7682  002520  6E32               	movwf	(??___fldiv+2)^0,c
  7683  002522  0E7F               	movlw	127
  7684  002524  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7685  002526  6E33               	movwf	(??___fldiv+3)^0,c
  7686  002528  5030               	movf	??___fldiv^0,w,c
  7687  00252A  1031               	iorwf	(??___fldiv+1)^0,w,c
  7688  00252C  1032               	iorwf	(??___fldiv+2)^0,w,c
  7689  00252E  1033               	iorwf	(??___fldiv+3)^0,w,c
  7690  002530  B4D8               	btfsc	status,2,c
  7691  002532  EF9D  F012         	goto	u3731
  7692  002536  EF9F  F012         	goto	u3730
  7693  00253A                     u3731:
  7694  00253A  EFA3  F012         	goto	l895
  7695  00253E                     u3730:
  7696  00253E                     l3249:
  7697  00253E  0E01               	movlw	1
  7698  002540  6E40               	movwf	___fldiv@aexp^0,c
  7699  002542  EFAC  F012         	goto	l894
  7700  002546                     l895:
  7701  002546  A028               	btfss	___fldiv@b^0,0,c
  7702  002548  EFA8  F012         	goto	u3741
  7703  00254C  EFAA  F012         	goto	u3740
  7704  002550                     u3741:
  7705  002550  EFAC  F012         	goto	l894
  7706  002554                     u3740:
  7707  002554  EF9F  F012         	goto	l3249
  7708  002558                     l894:
  7709  002558  5040               	movf	___fldiv@aexp^0,w,c
  7710  00255A  B4D8               	btfsc	status,2,c
  7711  00255C  EFB2  F012         	goto	u3751
  7712  002560  EFB4  F012         	goto	u3750
  7713  002564                     u3751:
  7714  002564  EFD8  F012         	goto	l3261
  7715  002568                     u3750:
  7716  002568  0E01               	movlw	1
  7717  00256A  2628               	addwf	___fldiv@b^0,f,c
  7718  00256C  0E00               	movlw	0
  7719  00256E  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7720  002570  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7721  002572  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7722  002574  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7723  002576  EFBF  F012         	goto	u3761
  7724  00257A  EFC1  F012         	goto	u3760
  7725  00257E                     u3761:
  7726  00257E  EFD8  F012         	goto	l3261
  7727  002582                     u3760:
  7728  002582  C028  F030         	movff	___fldiv@b,??___fldiv
  7729  002586  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7730  00258A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7731  00258E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7732  002592  3433               	rlcf	(??___fldiv+3)^0,w,c
  7733  002594  3233               	rrcf	(??___fldiv+3)^0,f,c
  7734  002596  3232               	rrcf	(??___fldiv+2)^0,f,c
  7735  002598  3231               	rrcf	(??___fldiv+1)^0,f,c
  7736  00259A  3230               	rrcf	??___fldiv^0,f,c
  7737  00259C  C030  F028         	movff	??___fldiv,___fldiv@b
  7738  0025A0  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7739  0025A4  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7740  0025A8  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7741  0025AC  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7742  0025AE  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7743  0025B0                     l3261:
  7744  0025B0  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7745  0025B2  EFE3  F012         	goto	u3771
  7746  0025B6  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7747  0025B8  E108               	bnz	u3770
  7748  0025BA  2839               	incf	___fldiv@new_exp^0,w,c
  7749  0025BC  A0D8               	btfss	status,0,c
  7750  0025BE  EFE3  F012         	goto	u3771
  7751  0025C2  EFE5  F012         	goto	u3770
  7752  0025C6                     u3771:
  7753  0025C6  EFF0  F012         	goto	l3265
  7754  0025CA                     u3770:
  7755  0025CA  0E00               	movlw	0
  7756  0025CC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7757  0025CE  6839               	setf	___fldiv@new_exp^0,c
  7758  0025D0  0E00               	movlw	0
  7759  0025D2  6E28               	movwf	___fldiv@b^0,c
  7760  0025D4  0E00               	movlw	0
  7761  0025D6  6E29               	movwf	(___fldiv@b+1)^0,c
  7762  0025D8  0E00               	movlw	0
  7763  0025DA  6E2A               	movwf	(___fldiv@b+2)^0,c
  7764  0025DC  0E00               	movlw	0
  7765  0025DE  6E2B               	movwf	(___fldiv@b+3)^0,c
  7766  0025E0                     l3265:
  7767  0025E0  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7768  0025E2  EFFD  F012         	goto	u3780
  7769  0025E6  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7770  0025E8  E106               	bnz	u3781
  7771  0025EA  0439               	decf	___fldiv@new_exp^0,w,c
  7772  0025EC  B0D8               	btfsc	status,0,c
  7773  0025EE  EFFB  F012         	goto	u3781
  7774  0025F2  EFFD  F012         	goto	u3780
  7775  0025F6                     u3781:
  7776  0025F6  EF0B  F013         	goto	l3269
  7777  0025FA                     u3780:
  7778  0025FA  0E00               	movlw	0
  7779  0025FC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7780  0025FE  0E00               	movlw	0
  7781  002600  6E39               	movwf	___fldiv@new_exp^0,c
  7782  002602  0E00               	movlw	0
  7783  002604  6E28               	movwf	___fldiv@b^0,c
  7784  002606  0E00               	movlw	0
  7785  002608  6E29               	movwf	(___fldiv@b+1)^0,c
  7786  00260A  0E00               	movlw	0
  7787  00260C  6E2A               	movwf	(___fldiv@b+2)^0,c
  7788  00260E  0E00               	movlw	0
  7789  002610  6E2B               	movwf	(___fldiv@b+3)^0,c
  7790  002612  0E00               	movlw	0
  7791  002614  6E38               	movwf	___fldiv@sign^0,c
  7792  002616                     l3269:
  7793  002616  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7794  00261A  A03F               	btfss	___fldiv@bexp^0,0,c
  7795  00261C  EF12  F013         	goto	u3791
  7796  002620  EF14  F013         	goto	u3790
  7797  002624                     u3791:
  7798  002624  EF17  F013         	goto	l3275
  7799  002628                     u3790:
  7800  002628  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7801  00262A  EF18  F013         	goto	l3277
  7802  00262E                     l3275:
  7803  00262E  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7804  002630                     l3277:
  7805  002630  90D8               	bcf	status,0,c
  7806  002632  303F               	rrcf	___fldiv@bexp^0,w,c
  7807  002634  6E2B               	movwf	(___fldiv@b+3)^0,c
  7808  002636  EFCE  F011         	goto	l3191
  7809  00263A                     l881:
  7810  00263A  0012               	return		;funcret
  7811  00263C                     __end_of___fldiv:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function ___awmod *****************
  7815 ;; Defined at:
  7816 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  dividend        2    0[COMRAM] int 
  7819 ;;  divisor         2    2[COMRAM] int 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  sign            1    5[COMRAM] unsigned char 
  7822 ;;  counter         1    4[COMRAM] unsigned char 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2    0[COMRAM] int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7832 ;;      Params:         4       0       0       0       0       0       0
  7833 ;;      Locals:         2       0       0       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0       0       0
  7835 ;;      Totals:         6       0       0       0       0       0       0
  7836 ;;Total ram usage:        6 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_efgtoa
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text22
  7846  0039F0                     __ptext22:
  7847                           	opt callstack 0
  7848  0039F0                     ___awmod:
  7849                           	opt callstack 26
  7850  0039F0  0E00               	movlw	0
  7851  0039F2  6E06               	movwf	___awmod@sign^0,c
  7852  0039F4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7853  0039F6  EF01  F01D         	goto	u4050
  7854  0039FA  EFFF  F01C         	goto	u4051
  7855  0039FE                     u4051:
  7856  0039FE  EF07  F01D         	goto	l3473
  7857  003A02                     u4050:
  7858  003A02  6C01               	negf	___awmod@dividend^0,c
  7859  003A04  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7860  003A06  B0D8               	btfsc	status,0,c
  7861  003A08  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7862  003A0A  0E01               	movlw	1
  7863  003A0C  6E06               	movwf	___awmod@sign^0,c
  7864  003A0E                     l3473:
  7865  003A0E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7866  003A10  EF0E  F01D         	goto	u4060
  7867  003A14  EF0C  F01D         	goto	u4061
  7868  003A18                     u4061:
  7869  003A18  EF12  F01D         	goto	l3477
  7870  003A1C                     u4060:
  7871  003A1C  6C03               	negf	___awmod@divisor^0,c
  7872  003A1E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7873  003A20  B0D8               	btfsc	status,0,c
  7874  003A22  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7875  003A24                     l3477:
  7876  003A24  5003               	movf	___awmod@divisor^0,w,c
  7877  003A26  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7878  003A28  B4D8               	btfsc	status,2,c
  7879  003A2A  EF19  F01D         	goto	u4071
  7880  003A2E  EF1B  F01D         	goto	u4070
  7881  003A32                     u4071:
  7882  003A32  EF3F  F01D         	goto	l3493
  7883  003A36                     u4070:
  7884  003A36  0E01               	movlw	1
  7885  003A38  6E05               	movwf	___awmod@counter^0,c
  7886  003A3A  EF23  F01D         	goto	l3483
  7887  003A3E                     l3481:
  7888  003A3E  90D8               	bcf	status,0,c
  7889  003A40  3603               	rlcf	___awmod@divisor^0,f,c
  7890  003A42  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7891  003A44  2A05               	incf	___awmod@counter^0,f,c
  7892  003A46                     l3483:
  7893  003A46  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7894  003A48  EF28  F01D         	goto	u4081
  7895  003A4C  EF2A  F01D         	goto	u4080
  7896  003A50                     u4081:
  7897  003A50  EF1F  F01D         	goto	l3481
  7898  003A54                     u4080:
  7899  003A54                     l3485:
  7900  003A54  5003               	movf	___awmod@divisor^0,w,c
  7901  003A56  5C01               	subwf	___awmod@dividend^0,w,c
  7902  003A58  5004               	movf	(___awmod@divisor+1)^0,w,c
  7903  003A5A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7904  003A5C  A0D8               	btfss	status,0,c
  7905  003A5E  EF33  F01D         	goto	u4091
  7906  003A62  EF35  F01D         	goto	u4090
  7907  003A66                     u4091:
  7908  003A66  EF39  F01D         	goto	l3489
  7909  003A6A                     u4090:
  7910  003A6A  5003               	movf	___awmod@divisor^0,w,c
  7911  003A6C  5E01               	subwf	___awmod@dividend^0,f,c
  7912  003A6E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7913  003A70  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7914  003A72                     l3489:
  7915  003A72  90D8               	bcf	status,0,c
  7916  003A74  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7917  003A76  3203               	rrcf	___awmod@divisor^0,f,c
  7918  003A78  2E05               	decfsz	___awmod@counter^0,f,c
  7919  003A7A  EF2A  F01D         	goto	l3485
  7920  003A7E                     l3493:
  7921  003A7E  5006               	movf	___awmod@sign^0,w,c
  7922  003A80  B4D8               	btfsc	status,2,c
  7923  003A82  EF45  F01D         	goto	u4101
  7924  003A86  EF47  F01D         	goto	u4100
  7925  003A8A                     u4101:
  7926  003A8A  EF4B  F01D         	goto	l3497
  7927  003A8E                     u4100:
  7928  003A8E  6C01               	negf	___awmod@dividend^0,c
  7929  003A90  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7930  003A92  B0D8               	btfsc	status,0,c
  7931  003A94  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7932  003A96                     l3497:
  7933  003A96  C001  F001         	movff	___awmod@dividend,?___awmod
  7934  003A9A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7935  003A9E  0012               	return		;funcret
  7936  003AA0                     __end_of___awmod:
  7937                           	opt callstack 0
  7938                           
  7939 ;; *************** function ___awdiv *****************
  7940 ;; Defined at:
  7941 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  dividend        2    0[COMRAM] int 
  7944 ;;  divisor         2    2[COMRAM] int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  quotient        2    6[COMRAM] int 
  7947 ;;  sign            1    5[COMRAM] unsigned char 
  7948 ;;  counter         1    4[COMRAM] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2    0[COMRAM] int 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7958 ;;      Params:         4       0       0       0       0       0       0
  7959 ;;      Locals:         4       0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0
  7961 ;;      Totals:         8       0       0       0       0       0       0
  7962 ;;Total ram usage:        8 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		_efgtoa
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text23
  7972  00392C                     __ptext23:
  7973                           	opt callstack 0
  7974  00392C                     ___awdiv:
  7975                           	opt callstack 26
  7976  00392C  0E00               	movlw	0
  7977  00392E  6E06               	movwf	___awdiv@sign^0,c
  7978  003930  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7979  003932  EF9F  F01C         	goto	u3990
  7980  003936  EF9D  F01C         	goto	u3991
  7981  00393A                     u3991:
  7982  00393A  EFA5  F01C         	goto	l3429
  7983  00393E                     u3990:
  7984  00393E  6C03               	negf	___awdiv@divisor^0,c
  7985  003940  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7986  003942  B0D8               	btfsc	status,0,c
  7987  003944  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7988  003946  0E01               	movlw	1
  7989  003948  6E06               	movwf	___awdiv@sign^0,c
  7990  00394A                     l3429:
  7991  00394A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7992  00394C  EFAC  F01C         	goto	u4000
  7993  003950  EFAA  F01C         	goto	u4001
  7994  003954                     u4001:
  7995  003954  EFB2  F01C         	goto	l3435
  7996  003958                     u4000:
  7997  003958  6C01               	negf	___awdiv@dividend^0,c
  7998  00395A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7999  00395C  B0D8               	btfsc	status,0,c
  8000  00395E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8001  003960  0E01               	movlw	1
  8002  003962  1A06               	xorwf	___awdiv@sign^0,f,c
  8003  003964                     l3435:
  8004  003964  0E00               	movlw	0
  8005  003966  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8006  003968  0E00               	movlw	0
  8007  00396A  6E07               	movwf	___awdiv@quotient^0,c
  8008  00396C  5003               	movf	___awdiv@divisor^0,w,c
  8009  00396E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8010  003970  B4D8               	btfsc	status,2,c
  8011  003972  EFBD  F01C         	goto	u4011
  8012  003976  EFBF  F01C         	goto	u4010
  8013  00397A                     u4011:
  8014  00397A  EFE7  F01C         	goto	l3457
  8015  00397E                     u4010:
  8016  00397E  0E01               	movlw	1
  8017  003980  6E05               	movwf	___awdiv@counter^0,c
  8018  003982  EFC7  F01C         	goto	l3443
  8019  003986                     l3441:
  8020  003986  90D8               	bcf	status,0,c
  8021  003988  3603               	rlcf	___awdiv@divisor^0,f,c
  8022  00398A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8023  00398C  2A05               	incf	___awdiv@counter^0,f,c
  8024  00398E                     l3443:
  8025  00398E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8026  003990  EFCC  F01C         	goto	u4021
  8027  003994  EFCE  F01C         	goto	u4020
  8028  003998                     u4021:
  8029  003998  EFC3  F01C         	goto	l3441
  8030  00399C                     u4020:
  8031  00399C                     l3445:
  8032  00399C  90D8               	bcf	status,0,c
  8033  00399E  3607               	rlcf	___awdiv@quotient^0,f,c
  8034  0039A0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8035  0039A2  5003               	movf	___awdiv@divisor^0,w,c
  8036  0039A4  5C01               	subwf	___awdiv@dividend^0,w,c
  8037  0039A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8038  0039A8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8039  0039AA  A0D8               	btfss	status,0,c
  8040  0039AC  EFDA  F01C         	goto	u4031
  8041  0039B0  EFDC  F01C         	goto	u4030
  8042  0039B4                     u4031:
  8043  0039B4  EFE1  F01C         	goto	l3453
  8044  0039B8                     u4030:
  8045  0039B8  5003               	movf	___awdiv@divisor^0,w,c
  8046  0039BA  5E01               	subwf	___awdiv@dividend^0,f,c
  8047  0039BC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8048  0039BE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8049  0039C0  8007               	bsf	___awdiv@quotient^0,0,c
  8050  0039C2                     l3453:
  8051  0039C2  90D8               	bcf	status,0,c
  8052  0039C4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8053  0039C6  3203               	rrcf	___awdiv@divisor^0,f,c
  8054  0039C8  2E05               	decfsz	___awdiv@counter^0,f,c
  8055  0039CA  EFCE  F01C         	goto	l3445
  8056  0039CE                     l3457:
  8057  0039CE  5006               	movf	___awdiv@sign^0,w,c
  8058  0039D0  B4D8               	btfsc	status,2,c
  8059  0039D2  EFED  F01C         	goto	u4041
  8060  0039D6  EFEF  F01C         	goto	u4040
  8061  0039DA                     u4041:
  8062  0039DA  EFF3  F01C         	goto	l3461
  8063  0039DE                     u4040:
  8064  0039DE  6C07               	negf	___awdiv@quotient^0,c
  8065  0039E0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8066  0039E2  B0D8               	btfsc	status,0,c
  8067  0039E4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8068  0039E6                     l3461:
  8069  0039E6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8070  0039EA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8071  0039EE  0012               	return		;funcret
  8072  0039F0                     __end_of___awdiv:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _ctoa *****************
  8076 ;; Defined at:
  8077 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8080 ;;		 -> sprintf@f(6), 
  8081 ;;  c               1   29[COMRAM] unsigned char 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  w               2   30[COMRAM] int 
  8084 ;;  l               2    0        int 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  2   27[COMRAM] int 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8094 ;;      Params:         3       0       0       0       0       0       0
  8095 ;;      Locals:         2       0       0       0       0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0
  8097 ;;      Totals:         5       0       0       0       0       0       0
  8098 ;;Total ram usage:        5 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    4
  8101 ;; This function calls:
  8102 ;;		_pad
  8103 ;; This function is called by:
  8104 ;;		_vfpfcnvrt
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text24
  8109  003E0C                     __ptext24:
  8110                           	opt callstack 0
  8111  003E0C                     _ctoa:
  8112                           	opt callstack 23
  8113  003E0C                     
  8114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8115  003E0C  0100               	movlb	0	; () banked
  8116  003E0E  51EE               	movf	_width& (0+255),w,b
  8117  003E10  11EF               	iorwf	(_width+1)& (0+255),w,b
  8118  003E12  A4D8               	btfss	status,2,c
  8119  003E14  EF0E  F01F         	goto	u4371
  8120  003E18  EF10  F01F         	goto	u4370
  8121  003E1C                     u4371:
  8122  003E1C  EF16  F01F         	goto	l3657
  8123  003E20                     u4370:
  8124  003E20                     
  8125                           ; BSR set to: 0
  8126  003E20  C0EE  F01F         	movff	_width,ctoa@w
  8127  003E24  C0EF  F020         	movff	_width+1,ctoa@w+1
  8128  003E28  EF1C  F01F         	goto	l3659
  8129  003E2C                     l3657:
  8130                           
  8131                           ; BSR set to: 0
  8132  003E2C  0EFF               	movlw	255
  8133  003E2E  25EE               	addwf	_width& (0+255),w,b
  8134  003E30  6E1F               	movwf	ctoa@w^0,c
  8135  003E32  0EFF               	movlw	255
  8136  003E34  21EF               	addwfc	(_width+1)& (0+255),w,b
  8137  003E36  6E20               	movwf	(ctoa@w+1)^0,c
  8138  003E38                     l3659:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8142  003E38  C01E  F100         	movff	ctoa@c,_dbuf
  8143  003E3C                     
  8144                           ; BSR set to: 0
  8145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8146  003E3C  0E00               	movlw	0
  8147  003E3E  0101               	movlb	1	; () banked
  8148  003E40  6F01               	movwf	(_dbuf+1)& (0+255),b
  8149  003E42                     
  8150                           ; BSR set to: 1
  8151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8152  003E42  C01C  F011         	movff	ctoa@fp,pad@fp
  8153  003E46  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8154  003E4A  0E00               	movlw	low _dbuf
  8155  003E4C  6E13               	movwf	pad@buf^0,c
  8156  003E4E  0E01               	movlw	high _dbuf
  8157  003E50  6E14               	movwf	(pad@buf+1)^0,c
  8158  003E52  C01F  F015         	movff	ctoa@w,pad@p
  8159  003E56  C020  F016         	movff	ctoa@w+1,pad@p+1
  8160  003E5A  EC33  F01C         	call	_pad	;wreg free
  8161  003E5E  C011  F01C         	movff	?_pad,?_ctoa
  8162  003E62  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8163  003E66  0012               	return		;funcret
  8164  003E68                     __end_of_ctoa:
  8165                           	opt callstack 0
  8166                           
  8167 ;; *************** function _pad *****************
  8168 ;; Defined at:
  8169 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8172 ;;		 -> sprintf@f(6), 
  8173 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8174 ;;		 -> dbuf(80), 
  8175 ;;  p               2   20[COMRAM] int 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  w               2   25[COMRAM] int 
  8178 ;;  i               2   23[COMRAM] int 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  2   16[COMRAM] int 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8188 ;;      Params:         6       0       0       0       0       0       0
  8189 ;;      Locals:         4       0       0       0       0       0       0
  8190 ;;      Temps:          1       0       0       0       0       0       0
  8191 ;;      Totals:        11       0       0       0       0       0       0
  8192 ;;Total ram usage:       11 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    3
  8195 ;; This function calls:
  8196 ;;		_fputc
  8197 ;;		_fputs
  8198 ;;		_strlen
  8199 ;; This function is called by:
  8200 ;;		_ctoa
  8201 ;;		_efgtoa
  8202 ;;		_utoa
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text25
  8207  003866                     __ptext25:
  8208                           	opt callstack 0
  8209  003866                     _pad:
  8210                           	opt callstack 23
  8211  003866                     
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8213  003866  0100               	movlb	0	; () banked
  8214  003868  A1F2               	btfss	_flags& (0+255),0,b
  8215  00386A  EF39  F01C         	goto	u3291
  8216  00386E  EF3B  F01C         	goto	u3290
  8217  003872                     u3291:
  8218  003872  EF45  F01C         	goto	l3055
  8219  003876                     u3290:
  8220  003876                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8223  003876  C013  F00A         	movff	pad@buf,fputs@s
  8224  00387A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8225  00387E  C011  F00C         	movff	pad@fp,fputs@fp
  8226  003882  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8227  003886  ECA9  F01F         	call	_fputs	;wreg free
  8228  00388A                     l3055:
  8229                           
  8230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8231  00388A  BE16               	btfsc	(pad@p+1)^0,7,c
  8232  00388C  EF4A  F01C         	goto	u3301
  8233  003890  EF4C  F01C         	goto	u3300
  8234  003894                     u3301:
  8235  003894  EF52  F01C         	goto	l3059
  8236  003898                     u3300:
  8237  003898  C015  F01A         	movff	pad@p,pad@w
  8238  00389C  C016  F01B         	movff	pad@p+1,pad@w+1
  8239  0038A0  EF56  F01C         	goto	l122
  8240  0038A4                     l3059:
  8241  0038A4  0E00               	movlw	0
  8242  0038A6  6E1B               	movwf	(pad@w+1)^0,c
  8243  0038A8  0E00               	movlw	0
  8244  0038AA  6E1A               	movwf	pad@w^0,c
  8245  0038AC                     l122:
  8246                           
  8247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8248  0038AC  0E00               	movlw	0
  8249  0038AE  6E19               	movwf	(pad@i+1)^0,c
  8250  0038B0  0E00               	movlw	0
  8251  0038B2  6E18               	movwf	pad@i^0,c
  8252                           
  8253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8254  0038B4  EF68  F01C         	goto	l3065
  8255  0038B8                     l3061:
  8256                           
  8257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8258  0038B8  0E00               	movlw	0
  8259  0038BA  6E02               	movwf	(fputc@c+1)^0,c
  8260  0038BC  0E20               	movlw	32
  8261  0038BE  6E01               	movwf	fputc@c^0,c
  8262  0038C0  C011  F003         	movff	pad@fp,fputc@fp
  8263  0038C4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8264  0038C8  ECCE  F01B         	call	_fputc	;wreg free
  8265  0038CC                     
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8267  0038CC  4A18               	infsnz	pad@i^0,f,c
  8268  0038CE  2A19               	incf	(pad@i+1)^0,f,c
  8269  0038D0                     l3065:
  8270                           
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8272  0038D0  501A               	movf	pad@w^0,w,c
  8273  0038D2  5C18               	subwf	pad@i^0,w,c
  8274  0038D4  5019               	movf	(pad@i+1)^0,w,c
  8275  0038D6  0A80               	xorlw	128
  8276  0038D8  6E17               	movwf	??_pad^0,c
  8277  0038DA  501B               	movf	(pad@w+1)^0,w,c
  8278  0038DC  0A80               	xorlw	128
  8279  0038DE  5817               	subwfb	??_pad^0,w,c
  8280  0038E0  A0D8               	btfss	status,0,c
  8281  0038E2  EF75  F01C         	goto	u3311
  8282  0038E6  EF77  F01C         	goto	u3310
  8283  0038EA                     u3311:
  8284  0038EA  EF5C  F01C         	goto	l3061
  8285  0038EE                     u3310:
  8286  0038EE                     
  8287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8288  0038EE  0100               	movlb	0	; () banked
  8289  0038F0  B1F2               	btfsc	_flags& (0+255),0,b
  8290  0038F2  EF7D  F01C         	goto	u3321
  8291  0038F6  EF7F  F01C         	goto	u3320
  8292  0038FA                     u3321:
  8293  0038FA  EF89  F01C         	goto	l3069
  8294  0038FE                     u3320:
  8295  0038FE                     
  8296                           ; BSR set to: 0
  8297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8298  0038FE  C013  F00A         	movff	pad@buf,fputs@s
  8299  003902  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8300  003906  C011  F00C         	movff	pad@fp,fputs@fp
  8301  00390A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8302  00390E  ECA9  F01F         	call	_fputs	;wreg free
  8303  003912                     l3069:
  8304                           
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8306  003912  C013  F001         	movff	pad@buf,strlen@s
  8307  003916  C014  F002         	movff	pad@buf+1,strlen@s+1
  8308  00391A  EC1F  F020         	call	_strlen	;wreg free
  8309  00391E  501A               	movf	pad@w^0,w,c
  8310  003920  2401               	addwf	?_strlen^0,w,c
  8311  003922  6E11               	movwf	?_pad^0,c
  8312  003924  501B               	movf	(pad@w+1)^0,w,c
  8313  003926  2002               	addwfc	(?_strlen+1)^0,w,c
  8314  003928  6E12               	movwf	(?_pad+1)^0,c
  8315  00392A  0012               	return		;funcret
  8316  00392C                     __end_of_pad:
  8317                           	opt callstack 0
  8318                           
  8319 ;; *************** function _strlen *****************
  8320 ;; Defined at:
  8321 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8324 ;;		 -> dbuf(80), 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8327 ;;		 -> dbuf(80), 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  2    0[COMRAM] unsigned int 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8337 ;;      Params:         2       0       0       0       0       0       0
  8338 ;;      Locals:         2       0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0
  8340 ;;      Totals:         4       0       0       0       0       0       0
  8341 ;;Total ram usage:        4 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; This function calls:
  8344 ;;		Nothing
  8345 ;; This function is called by:
  8346 ;;		_pad
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text26
  8351  00403E                     __ptext26:
  8352                           	opt callstack 0
  8353  00403E                     _strlen:
  8354                           	opt callstack 25
  8355  00403E  C001  F003         	movff	strlen@s,strlen@a
  8356  004042  C002  F004         	movff	strlen@s+1,strlen@a+1
  8357  004046  EF27  F020         	goto	l2839
  8358  00404A                     l2837:
  8359  00404A  4A01               	infsnz	strlen@s^0,f,c
  8360  00404C  2A02               	incf	(strlen@s+1)^0,f,c
  8361  00404E                     l2839:
  8362  00404E  C001  FFD9         	movff	strlen@s,fsr2l
  8363  004052  C002  FFDA         	movff	strlen@s+1,fsr2h
  8364  004056  50DF               	movf	indf2,w,c
  8365  004058  A4D8               	btfss	status,2,c
  8366  00405A  EF31  F020         	goto	u2871
  8367  00405E  EF33  F020         	goto	u2870
  8368  004062                     u2871:
  8369  004062  EF25  F020         	goto	l2837
  8370  004066                     u2870:
  8371  004066  5003               	movf	strlen@a^0,w,c
  8372  004068  5C01               	subwf	strlen@s^0,w,c
  8373  00406A  6E01               	movwf	?_strlen^0,c
  8374  00406C  5004               	movf	(strlen@a+1)^0,w,c
  8375  00406E  5802               	subwfb	(strlen@s+1)^0,w,c
  8376  004070  6E02               	movwf	(?_strlen+1)^0,c
  8377  004072  0012               	return		;funcret
  8378  004074                     __end_of_strlen:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function _fputs *****************
  8382 ;; Defined at:
  8383 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8386 ;;		 -> dbuf(80), 
  8387 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8388 ;;		 -> sprintf@f(6), 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  i               2   14[COMRAM] int 
  8391 ;;  c               1   13[COMRAM] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2    9[COMRAM] int 
  8394 ;; Registers used:
  8395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8401 ;;      Params:         4       0       0       0       0       0       0
  8402 ;;      Locals:         3       0       0       0       0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0       0
  8404 ;;      Totals:         7       0       0       0       0       0       0
  8405 ;;Total ram usage:        7 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    2
  8408 ;; This function calls:
  8409 ;;		_fputc
  8410 ;; This function is called by:
  8411 ;;		_pad
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text27
  8416  003F52                     __ptext27:
  8417                           	opt callstack 0
  8418  003F52                     _fputs:
  8419                           	opt callstack 23
  8420  003F52  0E00               	movlw	0
  8421  003F54  6E10               	movwf	(fputs@i+1)^0,c
  8422  003F56  0E00               	movlw	0
  8423  003F58  6E0F               	movwf	fputs@i^0,c
  8424  003F5A  EFBA  F01F         	goto	l2833
  8425  003F5E                     l2829:
  8426  003F5E  C00E  F001         	movff	fputs@c,fputc@c
  8427  003F62  6A02               	clrf	(fputc@c+1)^0,c
  8428  003F64  C00C  F003         	movff	fputs@fp,fputc@fp
  8429  003F68  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8430  003F6C  ECCE  F01B         	call	_fputc	;wreg free
  8431  003F70  4A0F               	infsnz	fputs@i^0,f,c
  8432  003F72  2A10               	incf	(fputs@i+1)^0,f,c
  8433  003F74                     l2833:
  8434  003F74  500F               	movf	fputs@i^0,w,c
  8435  003F76  240A               	addwf	fputs@s^0,w,c
  8436  003F78  6ED9               	movwf	fsr2l,c
  8437  003F7A  5010               	movf	(fputs@i+1)^0,w,c
  8438  003F7C  200B               	addwfc	(fputs@s+1)^0,w,c
  8439  003F7E  6EDA               	movwf	fsr2h,c
  8440  003F80  50DF               	movf	indf2,w,c
  8441  003F82  6E0E               	movwf	fputs@c^0,c
  8442  003F84  500E               	movf	fputs@c^0,w,c
  8443  003F86  A4D8               	btfss	status,2,c
  8444  003F88  EFC8  F01F         	goto	u2861
  8445  003F8C  EFCA  F01F         	goto	u2860
  8446  003F90                     u2861:
  8447  003F90  EFAF  F01F         	goto	l2829
  8448  003F94                     u2860:
  8449  003F94  0012               	return		;funcret
  8450  003F96                     __end_of_fputs:
  8451                           	opt callstack 0
  8452                           
  8453 ;; *************** function _fputc *****************
  8454 ;; Defined at:
  8455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  c               2    0[COMRAM] int 
  8458 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8459 ;;		 -> sprintf@f(6), 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  2    0[COMRAM] int 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8471 ;;      Params:         4       0       0       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0
  8473 ;;      Temps:          5       0       0       0       0       0       0
  8474 ;;      Totals:         9       0       0       0       0       0       0
  8475 ;;Total ram usage:        9 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    1
  8478 ;; This function calls:
  8479 ;;		_putch
  8480 ;; This function is called by:
  8481 ;;		_pad
  8482 ;;		_vfpfcnvrt
  8483 ;;		_fputs
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text28
  8488  00379C                     __ptext28:
  8489                           	opt callstack 0
  8490  00379C                     _fputc:
  8491                           	opt callstack 23
  8492  00379C  5003               	movf	fputc@fp^0,w,c
  8493  00379E  1004               	iorwf	(fputc@fp+1)^0,w,c
  8494  0037A0  B4D8               	btfsc	status,2,c
  8495  0037A2  EFD5  F01B         	goto	u2821
  8496  0037A6  EFD7  F01B         	goto	u2820
  8497  0037AA                     u2821:
  8498  0037AA  EFE0  F01B         	goto	l2817
  8499  0037AE                     u2820:
  8500  0037AE  5003               	movf	fputc@fp^0,w,c
  8501  0037B0  1004               	iorwf	(fputc@fp+1)^0,w,c
  8502  0037B2  A4D8               	btfss	status,2,c
  8503  0037B4  EFDE  F01B         	goto	u2831
  8504  0037B8  EFE0  F01B         	goto	u2830
  8505  0037BC                     u2831:
  8506  0037BC  EFE5  F01B         	goto	l2819
  8507  0037C0                     u2830:
  8508  0037C0                     l2817:
  8509  0037C0  5001               	movf	fputc@c^0,w,c
  8510  0037C2  EC7D  F020         	call	_putch
  8511  0037C6  EF32  F01C         	goto	l1057
  8512  0037CA                     l2819:
  8513  0037CA  EE20 F004          	lfsr	2,4
  8514  0037CE  5003               	movf	fputc@fp^0,w,c
  8515  0037D0  26D9               	addwf	fsr2l,f,c
  8516  0037D2  5004               	movf	(fputc@fp+1)^0,w,c
  8517  0037D4  22DA               	addwfc	fsr2h,f,c
  8518  0037D6  50DE               	movf	postinc2,w,c
  8519  0037D8  10DE               	iorwf	postinc2,w,c
  8520  0037DA  B4D8               	btfsc	status,2,c
  8521  0037DC  EFF2  F01B         	goto	u2841
  8522  0037E0  EFF4  F01B         	goto	u2840
  8523  0037E4                     u2841:
  8524  0037E4  EF0F  F01C         	goto	l2823
  8525  0037E8                     u2840:
  8526  0037E8  EE20 F004          	lfsr	2,4
  8527  0037EC  5003               	movf	fputc@fp^0,w,c
  8528  0037EE  26D9               	addwf	fsr2l,f,c
  8529  0037F0  5004               	movf	(fputc@fp+1)^0,w,c
  8530  0037F2  22DA               	addwfc	fsr2h,f,c
  8531  0037F4  EE10 F002          	lfsr	1,2
  8532  0037F8  5003               	movf	fputc@fp^0,w,c
  8533  0037FA  26E1               	addwf	fsr1l,f,c
  8534  0037FC  5004               	movf	(fputc@fp+1)^0,w,c
  8535  0037FE  22E2               	addwfc	fsr1h,f,c
  8536  003800  50DE               	movf	postinc2,w,c
  8537  003802  5CE6               	subwf	postinc1,w,c
  8538  003804  50E6               	movf	postinc1,w,c
  8539  003806  0A80               	xorlw	128
  8540  003808  6E09               	movwf	(??_fputc+4)^0,c
  8541  00380A  50DE               	movf	postinc2,w,c
  8542  00380C  0A80               	xorlw	128
  8543  00380E  5809               	subwfb	(??_fputc+4)^0,w,c
  8544  003810  B0D8               	btfsc	status,0,c
  8545  003812  EF0D  F01C         	goto	u2851
  8546  003816  EF0F  F01C         	goto	u2850
  8547  00381A                     u2851:
  8548  00381A  EF32  F01C         	goto	l1057
  8549  00381E                     u2850:
  8550  00381E                     l2823:
  8551  00381E  EE20 F002          	lfsr	2,2
  8552  003822  5003               	movf	fputc@fp^0,w,c
  8553  003824  26D9               	addwf	fsr2l,f,c
  8554  003826  5004               	movf	(fputc@fp+1)^0,w,c
  8555  003828  22DA               	addwfc	fsr2h,f,c
  8556  00382A  CFDE F005          	movff	postinc2,??_fputc
  8557  00382E  CFDD F006          	movff	postdec2,??_fputc+1
  8558  003832  C003  FFD9         	movff	fputc@fp,fsr2l
  8559  003836  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8560  00383A  CFDE F007          	movff	postinc2,??_fputc+2
  8561  00383E  CFDD F008          	movff	postdec2,??_fputc+3
  8562  003842  5005               	movf	??_fputc^0,w,c
  8563  003844  2407               	addwf	(??_fputc+2)^0,w,c
  8564  003846  6ED9               	movwf	fsr2l,c
  8565  003848  5006               	movf	(??_fputc+1)^0,w,c
  8566  00384A  2008               	addwfc	(??_fputc+3)^0,w,c
  8567  00384C  6EDA               	movwf	fsr2h,c
  8568  00384E  C001  FFDF         	movff	fputc@c,indf2
  8569  003852  EE20 F002          	lfsr	2,2
  8570  003856  5003               	movf	fputc@fp^0,w,c
  8571  003858  26D9               	addwf	fsr2l,f,c
  8572  00385A  5004               	movf	(fputc@fp+1)^0,w,c
  8573  00385C  22DA               	addwfc	fsr2h,f,c
  8574  00385E  2ADE               	incf	postinc2,f,c
  8575  003860  0E00               	movlw	0
  8576  003862  22DD               	addwfc	postdec2,f,c
  8577  003864                     l1057:
  8578  003864  0012               	return		;funcret
  8579  003866                     __end_of_fputc:
  8580                           	opt callstack 0
  8581                           
  8582 ;; *************** function _putch *****************
  8583 ;; Defined at:
  8584 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  c               1    wreg     unsigned char 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  c               1    0[COMRAM] unsigned char 
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8598 ;;      Params:         0       0       0       0       0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_fputc
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text29
  8612  0040FA                     __ptext29:
  8613                           	opt callstack 0
  8614  0040FA                     _putch:
  8615                           	opt callstack 23
  8616  0040FA  0012               	return		;funcret
  8617  0040FC                     __end_of_putch:
  8618                           	opt callstack 0
  8619                           
  8620 ;; *************** function _atoi *****************
  8621 ;; Defined at:
  8622 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8625 ;;		 -> STR_4(9), STR_3(10), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  n               2   20[COMRAM] int 
  8628 ;;  neg             2   13[COMRAM] int 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  2    7[COMRAM] int 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8638 ;;      Params:         2       0       0       0       0       0       0
  8639 ;;      Locals:         9       0       0       0       0       0       0
  8640 ;;      Temps:          4       0       0       0       0       0       0
  8641 ;;      Totals:        15       0       0       0       0       0       0
  8642 ;;Total ram usage:       15 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    1
  8645 ;; This function calls:
  8646 ;;		___wmul
  8647 ;;		_isdigit
  8648 ;;		_isspace
  8649 ;; This function is called by:
  8650 ;;		_vfpfcnvrt
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text30
  8655  002E3A                     __ptext30:
  8656                           	opt callstack 0
  8657  002E3A                     _atoi:
  8658                           	opt callstack 26
  8659  002E3A  0E00               	movlw	0
  8660  002E3C  6E16               	movwf	(atoi@n+1)^0,c
  8661  002E3E  0E00               	movlw	0
  8662  002E40  6E15               	movwf	atoi@n^0,c
  8663  002E42  0E00               	movlw	0
  8664  002E44  6E0F               	movwf	(atoi@neg+1)^0,c
  8665  002E46  0E00               	movlw	0
  8666  002E48  6E0E               	movwf	atoi@neg^0,c
  8667  002E4A  EF29  F017         	goto	l4005
  8668  002E4E                     l4003:
  8669  002E4E  4A08               	infsnz	atoi@s^0,f,c
  8670  002E50  2A09               	incf	(atoi@s+1)^0,f,c
  8671  002E52                     l4005:
  8672  002E52  0E01               	movlw	1
  8673  002E54  6E14               	movwf	_atoi$897^0,c
  8674  002E56  C008  FFF6         	movff	atoi@s,tblptrl
  8675  002E5A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8676  002E5E                     	if	0	;tblptru may be non-zero
  8677  002E5E                     	endif
  8678  002E5E                     	if	0	;tblptru may be non-zero
  8679  002E5E                     	endif
  8680  002E5E  0008               	tblrd		*
  8681  002E60  50F5               	movf	tablat,w,c
  8682  002E62  0A20               	xorlw	32
  8683  002E64  B4D8               	btfsc	status,2,c
  8684  002E66  EF37  F017         	goto	u4971
  8685  002E6A  EF39  F017         	goto	u4970
  8686  002E6E                     u4971:
  8687  002E6E  EF56  F017         	goto	l4013
  8688  002E72                     u4970:
  8689  002E72  0EF7               	movlw	247
  8690  002E74  6E0A               	movwf	??_atoi^0,c
  8691  002E76  0EFF               	movlw	255
  8692  002E78  6E0B               	movwf	(??_atoi+1)^0,c
  8693  002E7A  C008  FFF6         	movff	atoi@s,tblptrl
  8694  002E7E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8695  002E82                     	if	0	;tblptru may be non-zero
  8696  002E82                     	endif
  8697  002E82                     	if	0	;tblptru may be non-zero
  8698  002E82                     	endif
  8699  002E82  0008               	tblrd		*
  8700  002E84  50F5               	movf	tablat,w,c
  8701  002E86  6E0C               	movwf	(??_atoi+2)^0,c
  8702  002E88  6A0D               	clrf	(??_atoi+3)^0,c
  8703  002E8A  500A               	movf	??_atoi^0,w,c
  8704  002E8C  260C               	addwf	(??_atoi+2)^0,f,c
  8705  002E8E  500B               	movf	(??_atoi+1)^0,w,c
  8706  002E90  220D               	addwfc	(??_atoi+3)^0,f,c
  8707  002E92  500D               	movf	(??_atoi+3)^0,w,c
  8708  002E94  E109               	bnz	u4980
  8709  002E96  0E05               	movlw	5
  8710  002E98  5C0C               	subwf	(??_atoi+2)^0,w,c
  8711  002E9A  A0D8               	btfss	status,0,c
  8712  002E9C  EF52  F017         	goto	u4981
  8713  002EA0  EF54  F017         	goto	u4980
  8714  002EA4                     u4981:
  8715  002EA4  EF56  F017         	goto	l4013
  8716  002EA8                     u4980:
  8717  002EA8  0E00               	movlw	0
  8718  002EAA  6E14               	movwf	_atoi$897^0,c
  8719  002EAC                     l4013:
  8720  002EAC  C014  F010         	movff	_atoi$897,_atoi$896
  8721  002EB0  6A11               	clrf	(_atoi$896+1)^0,c
  8722  002EB2  5010               	movf	_atoi$896^0,w,c
  8723  002EB4  1011               	iorwf	(_atoi$896+1)^0,w,c
  8724  002EB6  A4D8               	btfss	status,2,c
  8725  002EB8  EF60  F017         	goto	u4991
  8726  002EBC  EF62  F017         	goto	u4990
  8727  002EC0                     u4991:
  8728  002EC0  EF27  F017         	goto	l4003
  8729  002EC4                     u4990:
  8730  002EC4  EF6C  F017         	goto	l4023
  8731  002EC8                     l4019:
  8732  002EC8  0E00               	movlw	0
  8733  002ECA  6E0F               	movwf	(atoi@neg+1)^0,c
  8734  002ECC  0E01               	movlw	1
  8735  002ECE  6E0E               	movwf	atoi@neg^0,c
  8736  002ED0                     l4021:
  8737  002ED0  4A08               	infsnz	atoi@s^0,f,c
  8738  002ED2  2A09               	incf	(atoi@s+1)^0,f,c
  8739  002ED4  EFA1  F017         	goto	l4029
  8740  002ED8                     l4023:
  8741  002ED8  C008  FFF6         	movff	atoi@s,tblptrl
  8742  002EDC  C009  FFF7         	movff	atoi@s+1,tblptrh
  8743  002EE0                     	if	0	;tblptru may be non-zero
  8744  002EE0                     	endif
  8745  002EE0                     	if	0	;tblptru may be non-zero
  8746  002EE0                     	endif
  8747  002EE0  0008               	tblrd		*
  8748  002EE2  50F5               	movf	tablat,w,c
  8749  002EE4  6E0A               	movwf	??_atoi^0,c
  8750  002EE6  6A0B               	clrf	(??_atoi+1)^0,c
  8751                           
  8752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8753                           ; Switch size 1, requested type "simple"
  8754                           ; Number of cases is 1, Range of values is 0 to 0
  8755                           ; switch strategies available:
  8756                           ; Name         Instructions Cycles
  8757                           ; simple_byte            4     3 (average)
  8758                           ;	Chosen strategy is simple_byte
  8759  002EE8  500B               	movf	(??_atoi+1)^0,w,c
  8760  002EEA  0A00               	xorlw	0	; case 0
  8761  002EEC  B4D8               	btfsc	status,2,c
  8762  002EEE  EF7B  F017         	goto	l4529
  8763  002EF2  EFA1  F017         	goto	l4029
  8764  002EF6                     l4529:
  8765                           
  8766                           ; Switch size 1, requested type "simple"
  8767                           ; Number of cases is 2, Range of values is 43 to 45
  8768                           ; switch strategies available:
  8769                           ; Name         Instructions Cycles
  8770                           ; simple_byte            7     4 (average)
  8771                           ;	Chosen strategy is simple_byte
  8772  002EF6  500A               	movf	??_atoi^0,w,c
  8773  002EF8  0A2B               	xorlw	43	; case 43
  8774  002EFA  B4D8               	btfsc	status,2,c
  8775  002EFC  EF68  F017         	goto	l4021
  8776  002F00  0A06               	xorlw	6	; case 45
  8777  002F02  B4D8               	btfsc	status,2,c
  8778  002F04  EF64  F017         	goto	l4019
  8779  002F08  EFA1  F017         	goto	l4029
  8780  002F0C                     l4025:
  8781  002F0C  C015  F001         	movff	atoi@n,___wmul@multiplier
  8782  002F10  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8783  002F14  0E00               	movlw	0
  8784  002F16  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8785  002F18  0E0A               	movlw	10
  8786  002F1A  6E03               	movwf	___wmul@multiplicand^0,c
  8787  002F1C  EC3A  F020         	call	___wmul	;wreg free
  8788  002F20  C008  FFF6         	movff	atoi@s,tblptrl
  8789  002F24  C009  FFF7         	movff	atoi@s+1,tblptrh
  8790  002F28                     	if	0	;tblptru may be non-zero
  8791  002F28                     	endif
  8792  002F28                     	if	0	;tblptru may be non-zero
  8793  002F28                     	endif
  8794  002F28  0008               	tblrd		*
  8795  002F2A  50F5               	movf	tablat,w,c
  8796  002F2C  5E01               	subwf	?___wmul^0,f,c
  8797  002F2E  0E00               	movlw	0
  8798  002F30  5A02               	subwfb	(?___wmul+1)^0,f,c
  8799  002F32  0E30               	movlw	48
  8800  002F34  2401               	addwf	?___wmul^0,w,c
  8801  002F36  6E15               	movwf	atoi@n^0,c
  8802  002F38  0E00               	movlw	0
  8803  002F3A  2002               	addwfc	(?___wmul+1)^0,w,c
  8804  002F3C  6E16               	movwf	(atoi@n+1)^0,c
  8805  002F3E  EF68  F017         	goto	l4021
  8806  002F42                     l4029:
  8807  002F42  0ED0               	movlw	208
  8808  002F44  6E0A               	movwf	??_atoi^0,c
  8809  002F46  0EFF               	movlw	255
  8810  002F48  6E0B               	movwf	(??_atoi+1)^0,c
  8811  002F4A  C008  FFF6         	movff	atoi@s,tblptrl
  8812  002F4E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8813  002F52                     	if	0	;tblptru may be non-zero
  8814  002F52                     	endif
  8815  002F52                     	if	0	;tblptru may be non-zero
  8816  002F52                     	endif
  8817  002F52  0008               	tblrd		*
  8818  002F54  50F5               	movf	tablat,w,c
  8819  002F56  6E0C               	movwf	(??_atoi+2)^0,c
  8820  002F58  6A0D               	clrf	(??_atoi+3)^0,c
  8821  002F5A  500A               	movf	??_atoi^0,w,c
  8822  002F5C  260C               	addwf	(??_atoi+2)^0,f,c
  8823  002F5E  500B               	movf	(??_atoi+1)^0,w,c
  8824  002F60  220D               	addwfc	(??_atoi+3)^0,f,c
  8825  002F62  500D               	movf	(??_atoi+3)^0,w,c
  8826  002F64  E10A               	bnz	u5000
  8827  002F66  0E0A               	movlw	10
  8828  002F68  5C0C               	subwf	(??_atoi+2)^0,w,c
  8829  002F6A  A0D8               	btfss	status,0,c
  8830  002F6C  EFBA  F017         	goto	u5001
  8831  002F70  EFBD  F017         	goto	u5000
  8832  002F74                     u5001:
  8833  002F74  0E01               	movlw	1
  8834  002F76  EFBE  F017         	goto	u5010
  8835  002F7A                     u5000:
  8836  002F7A  0E00               	movlw	0
  8837  002F7C                     u5010:
  8838  002F7C  6E12               	movwf	_atoi$898^0,c
  8839  002F7E  6A13               	clrf	(_atoi$898+1)^0,c
  8840  002F80  5012               	movf	_atoi$898^0,w,c
  8841  002F82  1013               	iorwf	(_atoi$898+1)^0,w,c
  8842  002F84  A4D8               	btfss	status,2,c
  8843  002F86  EFC7  F017         	goto	u5021
  8844  002F8A  EFC9  F017         	goto	u5020
  8845  002F8E                     u5021:
  8846  002F8E  EF86  F017         	goto	l4025
  8847  002F92                     u5020:
  8848  002F92  500E               	movf	atoi@neg^0,w,c
  8849  002F94  100F               	iorwf	(atoi@neg+1)^0,w,c
  8850  002F96  A4D8               	btfss	status,2,c
  8851  002F98  EFD0  F017         	goto	u5031
  8852  002F9C  EFD2  F017         	goto	u5030
  8853  002FA0                     u5031:
  8854  002FA0  EFE0  F017         	goto	l1009
  8855  002FA4                     u5030:
  8856  002FA4  C015  F00A         	movff	atoi@n,??_atoi
  8857  002FA8  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8858  002FAC  1E0A               	comf	??_atoi^0,f,c
  8859  002FAE  1E0B               	comf	(??_atoi+1)^0,f,c
  8860  002FB0  4A0A               	infsnz	??_atoi^0,f,c
  8861  002FB2  2A0B               	incf	(??_atoi+1)^0,f,c
  8862  002FB4  C00A  F008         	movff	??_atoi,?_atoi
  8863  002FB8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8864  002FBC  EFE4  F017         	goto	l1012
  8865  002FC0                     l1009:
  8866  002FC0  C015  F008         	movff	atoi@n,?_atoi
  8867  002FC4  C016  F009         	movff	atoi@n+1,?_atoi+1
  8868  002FC8                     l1012:
  8869  002FC8  0012               	return		;funcret
  8870  002FCA                     __end_of_atoi:
  8871                           	opt callstack 0
  8872                           
  8873 ;; *************** function _isspace *****************
  8874 ;; Defined at:
  8875 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  c               2    0[COMRAM] int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  2    0[COMRAM] int 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8889 ;;      Params:         2       0       0       0       0       0       0
  8890 ;;      Locals:         1       0       0       0       0       0       0
  8891 ;;      Temps:          4       0       0       0       0       0       0
  8892 ;;      Totals:         7       0       0       0       0       0       0
  8893 ;;Total ram usage:        7 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_atoi
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text31
  8903  003EBA                     __ptext31:
  8904                           	opt callstack 0
  8905  003EBA                     _isspace:
  8906                           	opt callstack 26
  8907  003EBA  0E01               	movlw	1
  8908  003EBC  6E07               	movwf	_isspace$927^0,c
  8909  003EBE  0E20               	movlw	32
  8910  003EC0  1801               	xorwf	isspace@c^0,w,c
  8911  003EC2  1002               	iorwf	(isspace@c+1)^0,w,c
  8912  003EC4  B4D8               	btfsc	status,2,c
  8913  003EC6  EF67  F01F         	goto	u4341
  8914  003ECA  EF69  F01F         	goto	u4340
  8915  003ECE                     u4341:
  8916  003ECE  EF82  F01F         	goto	l3637
  8917  003ED2                     u4340:
  8918  003ED2  0EF7               	movlw	247
  8919  003ED4  6E03               	movwf	??_isspace^0,c
  8920  003ED6  0EFF               	movlw	255
  8921  003ED8  6E04               	movwf	(??_isspace+1)^0,c
  8922  003EDA  C001  F005         	movff	isspace@c,??_isspace+2
  8923  003EDE  C002  F006         	movff	isspace@c+1,??_isspace+3
  8924  003EE2  5003               	movf	??_isspace^0,w,c
  8925  003EE4  2605               	addwf	(??_isspace+2)^0,f,c
  8926  003EE6  5004               	movf	(??_isspace+1)^0,w,c
  8927  003EE8  2206               	addwfc	(??_isspace+3)^0,f,c
  8928  003EEA  5006               	movf	(??_isspace+3)^0,w,c
  8929  003EEC  E109               	bnz	u4350
  8930  003EEE  0E05               	movlw	5
  8931  003EF0  5C05               	subwf	(??_isspace+2)^0,w,c
  8932  003EF2  A0D8               	btfss	status,0,c
  8933  003EF4  EF7E  F01F         	goto	u4351
  8934  003EF8  EF80  F01F         	goto	u4350
  8935  003EFC                     u4351:
  8936  003EFC  EF82  F01F         	goto	l3637
  8937  003F00                     u4350:
  8938  003F00  0E00               	movlw	0
  8939  003F02  6E07               	movwf	_isspace$927^0,c
  8940  003F04                     l3637:
  8941  003F04  C007  F001         	movff	_isspace$927,?_isspace
  8942  003F08  6A02               	clrf	(?_isspace+1)^0,c
  8943  003F0A  0012               	return		;funcret
  8944  003F0C                     __end_of_isspace:
  8945                           	opt callstack 0
  8946                           
  8947 ;; *************** function _isdigit *****************
  8948 ;; Defined at:
  8949 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  c               2    0[COMRAM] int 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  2    0[COMRAM] int 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8963 ;;      Params:         2       0       0       0       0       0       0
  8964 ;;      Locals:         0       0       0       0       0       0       0
  8965 ;;      Temps:          4       0       0       0       0       0       0
  8966 ;;      Totals:         6       0       0       0       0       0       0
  8967 ;;Total ram usage:        6 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_vfpfcnvrt
  8973 ;;		_atoi
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text32
  8978  004006                     __ptext32:
  8979                           	opt callstack 0
  8980  004006                     _isdigit:
  8981                           	opt callstack 27
  8982  004006  0ED0               	movlw	208
  8983  004008  6E03               	movwf	??_isdigit^0,c
  8984  00400A  0EFF               	movlw	255
  8985  00400C  6E04               	movwf	(??_isdigit+1)^0,c
  8986  00400E  C001  F005         	movff	isdigit@c,??_isdigit+2
  8987  004012  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8988  004016  5003               	movf	??_isdigit^0,w,c
  8989  004018  2605               	addwf	(??_isdigit+2)^0,f,c
  8990  00401A  5004               	movf	(??_isdigit+1)^0,w,c
  8991  00401C  2206               	addwfc	(??_isdigit+3)^0,f,c
  8992  00401E  5006               	movf	(??_isdigit+3)^0,w,c
  8993  004020  E10A               	bnz	u3550
  8994  004022  0E0A               	movlw	10
  8995  004024  5C05               	subwf	(??_isdigit+2)^0,w,c
  8996  004026  A0D8               	btfss	status,0,c
  8997  004028  EF18  F020         	goto	u3551
  8998  00402C  EF1B  F020         	goto	u3550
  8999  004030                     u3551:
  9000  004030  0E01               	movlw	1
  9001  004032  EF1C  F020         	goto	u3560
  9002  004036                     u3550:
  9003  004036  0E00               	movlw	0
  9004  004038                     u3560:
  9005  004038  6E01               	movwf	?_isdigit^0,c
  9006  00403A  6A02               	clrf	(?_isdigit+1)^0,c
  9007  00403C  0012               	return		;funcret
  9008  00403E                     __end_of_isdigit:
  9009                           	opt callstack 0
  9010                           
  9011 ;; *************** function ___wmul *****************
  9012 ;; Defined at:
  9013 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  multiplier      2    0[COMRAM] unsigned int 
  9016 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  product         2    4[COMRAM] unsigned int 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  2    0[COMRAM] unsigned int 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0, prodl, prodh
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9028 ;;      Params:         4       0       0       0       0       0       0
  9029 ;;      Locals:         2       0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0
  9031 ;;      Totals:         6       0       0       0       0       0       0
  9032 ;;Total ram usage:        6 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_atoi
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text33
  9042  004074                     __ptext33:
  9043                           	opt callstack 0
  9044  004074                     ___wmul:
  9045                           	opt callstack 26
  9046  004074  5001               	movf	___wmul@multiplier^0,w,c
  9047  004076  0203               	mulwf	___wmul@multiplicand^0,c
  9048  004078  CFF3 F005          	movff	prodl,___wmul@product
  9049  00407C  CFF4 F006          	movff	prodh,___wmul@product+1
  9050  004080  5001               	movf	___wmul@multiplier^0,w,c
  9051  004082  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9052  004084  50F3               	movf	243,w,c
  9053  004086  2606               	addwf	(___wmul@product+1)^0,f,c
  9054  004088  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9055  00408A  0203               	mulwf	___wmul@multiplicand^0,c
  9056  00408C  50F3               	movf	243,w,c
  9057  00408E  2606               	addwf	(___wmul@product+1)^0,f,c
  9058  004090  C005  F001         	movff	___wmul@product,?___wmul
  9059  004094  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9060  004098  0012               	return		;funcret
  9061  00409A                     __end_of___wmul:
  9062                           	opt callstack 0
  9063                           
  9064 ;; *************** function _lcd_ini *****************
  9065 ;; Defined at:
  9066 ;;		line 3 in file "../Bibliotecas/LCD4bits.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  i               1    5[COMRAM] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9080 ;;      Params:         0       0       0       0       0       0       0
  9081 ;;      Locals:         1       0       0       0       0       0       0
  9082 ;;      Temps:          1       0       0       0       0       0       0
  9083 ;;      Totals:         2       0       0       0       0       0       0
  9084 ;;Total ram usage:        2 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    2
  9087 ;; This function calls:
  9088 ;;		_lcd_cmd
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text34
  9095  003BEA                     __ptext34:
  9096                           	opt callstack 0
  9097  003BEA                     _lcd_ini:
  9098                           	opt callstack 28
  9099  003BEA                     
  9100                           ;../Bibliotecas/LCD4bits.c: 5:     char i;;../Bibliotecas/LCD4bits.c: 7:    TRISD = 0b00
      +                          000000;
  9101  003BEA  0E00               	movlw	0
  9102  003BEC  6E95               	movwf	149,c	;volatile
  9103  003BEE                     
  9104                           ;../Bibliotecas/LCD4bits.c: 8:    TRISEbits.TRISE0 = 0;
  9105  003BEE  9096               	bcf	150,0,c	;volatile
  9106  003BF0                     
  9107                           ;../Bibliotecas/LCD4bits.c: 9:    TRISEbits.TRISE1 = 0;
  9108  003BF0  9296               	bcf	150,1,c	;volatile
  9109                           
  9110                           ;../Bibliotecas/LCD4bits.c: 11:    LATD = 0b00000000;
  9111  003BF2  0E00               	movlw	0
  9112  003BF4  6E8C               	movwf	140,c	;volatile
  9113  003BF6                     
  9114                           ;../Bibliotecas/LCD4bits.c: 12:    LATEbits.LATE0 = 0;
  9115  003BF6  908D               	bcf	141,0,c	;volatile
  9116  003BF8                     
  9117                           ;../Bibliotecas/LCD4bits.c: 13:    LATEbits.LATE1 = 0;
  9118  003BF8  928D               	bcf	141,1,c	;volatile
  9119  003BFA                     
  9120                           ;../Bibliotecas/LCD4bits.c: 15:    _delay((unsigned long)((15)*(8000000/4000.0)));
  9121  003BFA  0E27               	movlw	39
  9122  003BFC  6E05               	movwf	??_lcd_ini^0,c
  9123  003BFE  0EF5               	movlw	245
  9124  003C00                     u5667:
  9125  003C00  2EE8               	decfsz	wreg,f,c
  9126  003C02  D7FE               	bra	u5667
  9127  003C04  2E05               	decfsz	??_lcd_ini^0,f,c
  9128  003C06  D7FC               	bra	u5667
  9129  003C08  F000               	nop	
  9130  003C0A                     
  9131                           ;../Bibliotecas/LCD4bits.c: 17:    for(i = 0; i < 3; i++)
  9132  003C0A  0E00               	movlw	0
  9133  003C0C  6E06               	movwf	lcd_ini@i^0,c
  9134  003C0E                     l4287:
  9135                           
  9136                           ;../Bibliotecas/LCD4bits.c: 18:    {;../Bibliotecas/LCD4bits.c: 19:        lcd_cmd(0x30)
      +                          ;
  9137  003C0E  0E30               	movlw	48
  9138  003C10  ECF4  F01A         	call	_lcd_cmd
  9139  003C14                     
  9140                           ;../Bibliotecas/LCD4bits.c: 20:        _delay((unsigned long)((5)*(8000000/4000.0)));
  9141  003C14  0E0D               	movlw	13
  9142  003C16  6E05               	movwf	??_lcd_ini^0,c
  9143  003C18  0EFC               	movlw	252
  9144  003C1A                     u5677:
  9145  003C1A  2EE8               	decfsz	wreg,f,c
  9146  003C1C  D7FE               	bra	u5677
  9147  003C1E  2E05               	decfsz	??_lcd_ini^0,f,c
  9148  003C20  D7FC               	bra	u5677
  9149  003C22                     
  9150                           ;../Bibliotecas/LCD4bits.c: 21:    }
  9151  003C22  2A06               	incf	lcd_ini@i^0,f,c
  9152  003C24  0E02               	movlw	2
  9153  003C26  6406               	cpfsgt	lcd_ini@i^0,c
  9154  003C28  EF18  F01E         	goto	u5371
  9155  003C2C  EF1A  F01E         	goto	u5370
  9156  003C30                     u5371:
  9157  003C30  EF07  F01E         	goto	l4287
  9158  003C34                     u5370:
  9159  003C34                     
  9160                           ;../Bibliotecas/LCD4bits.c: 22:    lcd_cmd(0x02);
  9161  003C34  0E02               	movlw	2
  9162  003C36  ECF4  F01A         	call	_lcd_cmd
  9163  003C3A                     
  9164                           ;../Bibliotecas/LCD4bits.c: 23:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9165  003C3A  0E1A               	movlw	26
  9166  003C3C                     u5687:
  9167  003C3C  2EE8               	decfsz	wreg,f,c
  9168  003C3E  D7FE               	bra	u5687
  9169  003C40  D000               	nop2	
  9170  003C42                     
  9171                           ;../Bibliotecas/LCD4bits.c: 24:    lcd_cmd(0x28);
  9172  003C42  0E28               	movlw	40
  9173  003C44  ECF4  F01A         	call	_lcd_cmd
  9174                           
  9175                           ;../Bibliotecas/LCD4bits.c: 25:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9176  003C48  0E1A               	movlw	26
  9177  003C4A                     u5697:
  9178  003C4A  2EE8               	decfsz	wreg,f,c
  9179  003C4C  D7FE               	bra	u5697
  9180  003C4E  D000               	nop2	
  9181  003C50                     
  9182                           ;../Bibliotecas/LCD4bits.c: 26:    lcd_cmd(0x01);
  9183  003C50  0E01               	movlw	1
  9184  003C52  ECF4  F01A         	call	_lcd_cmd
  9185  003C56                     
  9186                           ;../Bibliotecas/LCD4bits.c: 27:    _delay((unsigned long)((2)*(8000000/4000.0)));
  9187  003C56  0E06               	movlw	6
  9188  003C58  6E05               	movwf	??_lcd_ini^0,c
  9189  003C5A  0E30               	movlw	48
  9190  003C5C                     u5707:
  9191  003C5C  2EE8               	decfsz	wreg,f,c
  9192  003C5E  D7FE               	bra	u5707
  9193  003C60  2E05               	decfsz	??_lcd_ini^0,f,c
  9194  003C62  D7FC               	bra	u5707
  9195  003C64  D000               	nop2	
  9196                           
  9197                           ;../Bibliotecas/LCD4bits.c: 28:    lcd_cmd(0x0C);
  9198  003C66  0E0C               	movlw	12
  9199  003C68  ECF4  F01A         	call	_lcd_cmd
  9200  003C6C                     
  9201                           ;../Bibliotecas/LCD4bits.c: 29:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9202  003C6C  0E1A               	movlw	26
  9203  003C6E                     u5717:
  9204  003C6E  2EE8               	decfsz	wreg,f,c
  9205  003C70  D7FE               	bra	u5717
  9206  003C72  D000               	nop2	
  9207  003C74                     
  9208                           ;../Bibliotecas/LCD4bits.c: 30:    lcd_cmd(0x06);
  9209  003C74  0E06               	movlw	6
  9210  003C76  ECF4  F01A         	call	_lcd_cmd
  9211                           
  9212                           ;../Bibliotecas/LCD4bits.c: 31:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9213  003C7A  0E1A               	movlw	26
  9214  003C7C                     u5727:
  9215  003C7C  2EE8               	decfsz	wreg,f,c
  9216  003C7E  D7FE               	bra	u5727
  9217  003C80  D000               	nop2	
  9218  003C82  0012               	return		;funcret
  9219  003C84                     __end_of_lcd_ini:
  9220                           	opt callstack 0
  9221                           
  9222 ;; *************** function _lcd_escreve_bf *****************
  9223 ;; Defined at:
  9224 ;;		line 74 in file "../Bibliotecas/LCD4bits.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  lin             1    wreg     unsigned char 
  9227 ;;  col             1    6[COMRAM] unsigned char 
  9228 ;;  str             2    7[COMRAM] PTR unsigned char 
  9229 ;;		 -> bufferLCD(16), STR_2(6), STR_1(6), 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  lin             1   10[COMRAM] unsigned char 
  9232 ;;  end             1    9[COMRAM] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9242 ;;      Params:         3       0       0       0       0       0       0
  9243 ;;      Locals:         2       0       0       0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0
  9245 ;;      Totals:         5       0       0       0       0       0       0
  9246 ;;Total ram usage:        5 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    3
  9249 ;; This function calls:
  9250 ;;		_lcd_envia_byte
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text35
  9257  003B4A                     __ptext35:
  9258                           	opt callstack 0
  9259  003B4A                     _lcd_escreve_bf:
  9260                           	opt callstack 27
  9261                           
  9262                           ;incstack = 0
  9263                           ;lcd_escreve_bf@lin stored from wreg
  9264  003B4A  6E0B               	movwf	lcd_escreve_bf@lin^0,c
  9265  003B4C                     
  9266                           ;../Bibliotecas/LCD4bits.c: 74: void lcd_escreve_bf(char lin, char col, char *str);../Bi
      +                          bliotecas/LCD4bits.c: 75: {;../Bibliotecas/LCD4bits.c: 76:     char end;;../Bibliotecas/
      +                          LCD4bits.c: 79:     if (lin == 1)
  9267  003B4C  040B               	decf	lcd_escreve_bf@lin^0,w,c
  9268  003B4E  A4D8               	btfss	status,2,c
  9269  003B50  EFAC  F01D         	goto	u5381
  9270  003B54  EFAE  F01D         	goto	u5380
  9271  003B58                     u5381:
  9272  003B58  EFB3  F01D         	goto	l4313
  9273  003B5C                     u5380:
  9274  003B5C                     
  9275                           ;../Bibliotecas/LCD4bits.c: 80:         end = col + 0x80 - 1;
  9276  003B5C  5007               	movf	lcd_escreve_bf@col^0,w,c
  9277  003B5E  0F7F               	addlw	127
  9278  003B60  6E0A               	movwf	lcd_escreve_bf@end^0,c
  9279  003B62  EFBF  F01D         	goto	l4317
  9280  003B66                     l4313:
  9281  003B66  0E02               	movlw	2
  9282  003B68  180B               	xorwf	lcd_escreve_bf@lin^0,w,c
  9283  003B6A  A4D8               	btfss	status,2,c
  9284  003B6C  EFBA  F01D         	goto	u5391
  9285  003B70  EFBC  F01D         	goto	u5390
  9286  003B74                     u5391:
  9287  003B74  EFBF  F01D         	goto	l4317
  9288  003B78                     u5390:
  9289  003B78                     
  9290                           ;../Bibliotecas/LCD4bits.c: 82:         end = col + 0xC0 - 1;
  9291  003B78  5007               	movf	lcd_escreve_bf@col^0,w,c
  9292  003B7A  0FBF               	addlw	191
  9293  003B7C  6E0A               	movwf	lcd_escreve_bf@end^0,c
  9294  003B7E                     l4317:
  9295                           
  9296                           ;../Bibliotecas/LCD4bits.c: 84:     lcd_envia_byte(0, end);
  9297  003B7E  C00A  F005         	movff	lcd_escreve_bf@end,lcd_envia_byte@dado
  9298  003B82  0E00               	movlw	0
  9299  003B84  EC6E  F020         	call	_lcd_envia_byte
  9300                           
  9301                           ;../Bibliotecas/LCD4bits.c: 86:     while(*str)
  9302  003B88  EFDC  F01D         	goto	l4323
  9303  003B8C                     l4319:
  9304                           
  9305                           ;../Bibliotecas/LCD4bits.c: 87:     {;../Bibliotecas/LCD4bits.c: 88:        lcd_envia_by
      +                          te(1,*str);
  9306  003B8C  C008  FFF6         	movff	lcd_escreve_bf@str,tblptrl
  9307  003B90  C009  FFF7         	movff	lcd_escreve_bf@str+1,tblptrh
  9308  003B94  6AF8               	clrf	tblptru,c
  9309  003B96  0E05               	movlw	(high __ramtop+-1)
  9310  003B98  64F7               	cpfsgt	tblptrh,c
  9311  003B9A  D003               	bra	u5407
  9312  003B9C  0008               	tblrd		*
  9313  003B9E  50F5               	movf	tablat,w,c
  9314  003BA0  D005               	bra	u5400
  9315  003BA2                     u5407:
  9316  003BA2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9317  003BA6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9318  003BAA  50E7               	movf	indf1,w,c
  9319  003BAC                     u5400:
  9320  003BAC  6E05               	movwf	lcd_envia_byte@dado^0,c
  9321  003BAE  0E01               	movlw	1
  9322  003BB0  EC6E  F020         	call	_lcd_envia_byte
  9323  003BB4                     
  9324                           ;../Bibliotecas/LCD4bits.c: 89:        str++;
  9325  003BB4  4A08               	infsnz	lcd_escreve_bf@str^0,f,c
  9326  003BB6  2A09               	incf	(lcd_escreve_bf@str+1)^0,f,c
  9327  003BB8                     l4323:
  9328                           
  9329                           ;../Bibliotecas/LCD4bits.c: 86:     while(*str)
  9330  003BB8  C008  FFF6         	movff	lcd_escreve_bf@str,tblptrl
  9331  003BBC  C009  FFF7         	movff	lcd_escreve_bf@str+1,tblptrh
  9332  003BC0  6AF8               	clrf	tblptru,c
  9333  003BC2  0E05               	movlw	(high __ramtop+-1)
  9334  003BC4  64F7               	cpfsgt	tblptrh,c
  9335  003BC6  D003               	bra	u5417
  9336  003BC8  0008               	tblrd		*
  9337  003BCA  50F5               	movf	tablat,w,c
  9338  003BCC  D005               	bra	u5410
  9339  003BCE                     u5417:
  9340  003BCE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9341  003BD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9342  003BD6  50E7               	movf	indf1,w,c
  9343  003BD8                     u5410:
  9344  003BD8  0900               	iorlw	0
  9345  003BDA  A4D8               	btfss	status,2,c
  9346  003BDC  EFF2  F01D         	goto	u5421
  9347  003BE0  EFF4  F01D         	goto	u5420
  9348  003BE4                     u5421:
  9349  003BE4  EFC6  F01D         	goto	l4319
  9350  003BE8                     u5420:
  9351  003BE8  0012               	return		;funcret
  9352  003BEA                     __end_of_lcd_escreve_bf:
  9353                           	opt callstack 0
  9354                           
  9355 ;; *************** function _lcd_envia_byte *****************
  9356 ;; Defined at:
  9357 ;;		line 66 in file "../Bibliotecas/LCD4bits.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  nivel           1    wreg     unsigned char 
  9360 ;;  dado            1    4[COMRAM] unsigned char 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  nivel           1    5[COMRAM] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9372 ;;      Params:         1       0       0       0       0       0       0
  9373 ;;      Locals:         1       0       0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0
  9375 ;;      Totals:         2       0       0       0       0       0       0
  9376 ;;Total ram usage:        2 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    2
  9379 ;; This function calls:
  9380 ;;		_lcd_cmd
  9381 ;; This function is called by:
  9382 ;;		_lcd_escreve_bf
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text36
  9387  0040DC                     __ptext36:
  9388                           	opt callstack 0
  9389  0040DC                     _lcd_envia_byte:
  9390                           	opt callstack 27
  9391                           
  9392                           ;incstack = 0
  9393                           ;lcd_envia_byte@nivel stored from wreg
  9394  0040DC  6E06               	movwf	lcd_envia_byte@nivel^0,c
  9395  0040DE                     
  9396                           ;../Bibliotecas/LCD4bits.c: 66: void lcd_envia_byte(char nivel, char dado);../Biblioteca
      +                          s/LCD4bits.c: 67: {;../Bibliotecas/LCD4bits.c: 68:     LATEbits.LATE0 = nivel;
  9397  0040DE  B006               	btfsc	lcd_envia_byte@nivel^0,0,c
  9398  0040E0  D002               	bra	u5355
  9399  0040E2  908D               	bcf	141,0,c	;volatile
  9400  0040E4  D001               	bra	u5356
  9401  0040E6                     u5355:
  9402  0040E6  808D               	bsf	141,0,c	;volatile
  9403  0040E8                     u5356:
  9404  0040E8                     
  9405                           ;../Bibliotecas/LCD4bits.c: 69:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9406  0040E8  0E42               	movlw	66
  9407  0040EA                     u5737:
  9408  0040EA  2EE8               	decfsz	wreg,f,c
  9409  0040EC  D7FE               	bra	u5737
  9410  0040EE  D000               	nop2	
  9411  0040F0                     
  9412                           ;../Bibliotecas/LCD4bits.c: 70:     LATEbits.LATE1 = 0;
  9413  0040F0  928D               	bcf	141,1,c	;volatile
  9414  0040F2                     
  9415                           ;../Bibliotecas/LCD4bits.c: 71:     lcd_cmd(dado);
  9416  0040F2  5005               	movf	lcd_envia_byte@dado^0,w,c
  9417  0040F4  ECF4  F01A         	call	_lcd_cmd
  9418  0040F8  0012               	return		;funcret
  9419  0040FA                     __end_of_lcd_envia_byte:
  9420                           	opt callstack 0
  9421                           
  9422 ;; *************** function _lcd_cmd *****************
  9423 ;; Defined at:
  9424 ;;		line 45 in file "../Bibliotecas/LCD4bits.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  cmd             1    wreg     unsigned char 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  cmd             1    3[COMRAM] unsigned char 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2, status,0, cstack
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9438 ;;      Params:         0       0       0       0       0       0       0
  9439 ;;      Locals:         1       0       0       0       0       0       0
  9440 ;;      Temps:          1       0       0       0       0       0       0
  9441 ;;      Totals:         2       0       0       0       0       0       0
  9442 ;;Total ram usage:        2 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:    1
  9445 ;; This function calls:
  9446 ;;		_set_bit
  9447 ;; This function is called by:
  9448 ;;		_lcd_ini
  9449 ;;		_lcd_envia_byte
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text37
  9454  0035E8                     __ptext37:
  9455                           	opt callstack 0
  9456  0035E8                     _lcd_cmd:
  9457                           	opt callstack 28
  9458                           
  9459                           ;incstack = 0
  9460                           ;lcd_cmd@cmd stored from wreg
  9461  0035E8  6E04               	movwf	lcd_cmd@cmd^0,c
  9462  0035EA                     
  9463                           ;../Bibliotecas/LCD4bits.c: 45: void lcd_cmd(char cmd);../Bibliotecas/LCD4bits.c: 46: {;
      +                          ../Bibliotecas/LCD4bits.c: 47:     LATDbits.LATD4 = set_bit(cmd, 0b00010000);
  9464  0035EA  0E10               	movlw	16
  9465  0035EC  6E01               	movwf	set_bit@comp^0,c
  9466  0035EE  5004               	movf	lcd_cmd@cmd^0,w,c
  9467  0035F0  EC5E  F020         	call	_set_bit
  9468  0035F4  6E03               	movwf	??_lcd_cmd^0,c
  9469  0035F6  3A03               	swapf	??_lcd_cmd^0,f,c
  9470  0035F8  508C               	movf	140,w,c	;volatile
  9471  0035FA  1803               	xorwf	??_lcd_cmd^0,w,c
  9472  0035FC  0BEF               	andlw	-17
  9473  0035FE  1803               	xorwf	??_lcd_cmd^0,w,c
  9474  003600  6E8C               	movwf	140,c	;volatile
  9475                           
  9476                           ;../Bibliotecas/LCD4bits.c: 48:     LATDbits.LATD5 = set_bit(cmd, 0b00100000);
  9477  003602  0E20               	movlw	32
  9478  003604  6E01               	movwf	set_bit@comp^0,c
  9479  003606  5004               	movf	lcd_cmd@cmd^0,w,c
  9480  003608  EC5E  F020         	call	_set_bit
  9481  00360C  6E03               	movwf	??_lcd_cmd^0,c
  9482  00360E  3A03               	swapf	??_lcd_cmd^0,f,c
  9483  003610  4603               	rlncf	??_lcd_cmd^0,f,c
  9484  003612  508C               	movf	140,w,c	;volatile
  9485  003614  1803               	xorwf	??_lcd_cmd^0,w,c
  9486  003616  0BDF               	andlw	-33
  9487  003618  1803               	xorwf	??_lcd_cmd^0,w,c
  9488  00361A  6E8C               	movwf	140,c	;volatile
  9489                           
  9490                           ;../Bibliotecas/LCD4bits.c: 49:     LATDbits.LATD6 = set_bit(cmd, 0b01000000);
  9491  00361C  0E40               	movlw	64
  9492  00361E  6E01               	movwf	set_bit@comp^0,c
  9493  003620  5004               	movf	lcd_cmd@cmd^0,w,c
  9494  003622  EC5E  F020         	call	_set_bit
  9495  003626  6E03               	movwf	??_lcd_cmd^0,c
  9496  003628  3A03               	swapf	??_lcd_cmd^0,f,c
  9497  00362A  4603               	rlncf	??_lcd_cmd^0,f,c
  9498  00362C  4603               	rlncf	??_lcd_cmd^0,f,c
  9499  00362E  508C               	movf	140,w,c	;volatile
  9500  003630  1803               	xorwf	??_lcd_cmd^0,w,c
  9501  003632  0BBF               	andlw	-65
  9502  003634  1803               	xorwf	??_lcd_cmd^0,w,c
  9503  003636  6E8C               	movwf	140,c	;volatile
  9504                           
  9505                           ;../Bibliotecas/LCD4bits.c: 50:     LATDbits.LATD7 = set_bit(cmd, 0b10000000);
  9506  003638  0E80               	movlw	128
  9507  00363A  6E01               	movwf	set_bit@comp^0,c
  9508  00363C  5004               	movf	lcd_cmd@cmd^0,w,c
  9509  00363E  EC5E  F020         	call	_set_bit
  9510  003642  6E03               	movwf	??_lcd_cmd^0,c
  9511  003644  3203               	rrcf	??_lcd_cmd^0,f,c
  9512  003646  3203               	rrcf	??_lcd_cmd^0,f,c
  9513  003648  508C               	movf	140,w,c	;volatile
  9514  00364A  1803               	xorwf	??_lcd_cmd^0,w,c
  9515  00364C  0B7F               	andlw	-129
  9516  00364E  1803               	xorwf	??_lcd_cmd^0,w,c
  9517  003650  6E8C               	movwf	140,c	;volatile
  9518  003652                     
  9519                           ;../Bibliotecas/LCD4bits.c: 52:     LATEbits.LATE1 = 1;
  9520  003652  828D               	bsf	141,1,c	;volatile
  9521  003654                     
  9522                           ;../Bibliotecas/LCD4bits.c: 53:     LATEbits.LATE1 = 0;
  9523  003654  928D               	bcf	141,1,c	;volatile
  9524  003656                     
  9525                           ;../Bibliotecas/LCD4bits.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9526  003656  0E42               	movlw	66
  9527  003658                     u5747:
  9528  003658  2EE8               	decfsz	wreg,f,c
  9529  00365A  D7FE               	bra	u5747
  9530  00365C  D000               	nop2	
  9531  00365E                     
  9532                           ;../Bibliotecas/LCD4bits.c: 57:     LATDbits.LATD4 = set_bit(cmd, 0b00000001);
  9533  00365E  0E01               	movlw	1
  9534  003660  6E01               	movwf	set_bit@comp^0,c
  9535  003662  5004               	movf	lcd_cmd@cmd^0,w,c
  9536  003664  EC5E  F020         	call	_set_bit
  9537  003668  6E03               	movwf	??_lcd_cmd^0,c
  9538  00366A  3A03               	swapf	??_lcd_cmd^0,f,c
  9539  00366C  508C               	movf	140,w,c	;volatile
  9540  00366E  1803               	xorwf	??_lcd_cmd^0,w,c
  9541  003670  0BEF               	andlw	-17
  9542  003672  1803               	xorwf	??_lcd_cmd^0,w,c
  9543  003674  6E8C               	movwf	140,c	;volatile
  9544  003676                     
  9545                           ;../Bibliotecas/LCD4bits.c: 58:     LATDbits.LATD5 = set_bit(cmd, 0b00000010);
  9546  003676  0E02               	movlw	2
  9547  003678  6E01               	movwf	set_bit@comp^0,c
  9548  00367A  5004               	movf	lcd_cmd@cmd^0,w,c
  9549  00367C  EC5E  F020         	call	_set_bit
  9550  003680  6E03               	movwf	??_lcd_cmd^0,c
  9551  003682  3A03               	swapf	??_lcd_cmd^0,f,c
  9552  003684  4603               	rlncf	??_lcd_cmd^0,f,c
  9553  003686  508C               	movf	140,w,c	;volatile
  9554  003688  1803               	xorwf	??_lcd_cmd^0,w,c
  9555  00368A  0BDF               	andlw	-33
  9556  00368C  1803               	xorwf	??_lcd_cmd^0,w,c
  9557  00368E  6E8C               	movwf	140,c	;volatile
  9558  003690                     
  9559                           ;../Bibliotecas/LCD4bits.c: 59:     LATDbits.LATD6 = set_bit(cmd, 0b00000100);
  9560  003690  0E04               	movlw	4
  9561  003692  6E01               	movwf	set_bit@comp^0,c
  9562  003694  5004               	movf	lcd_cmd@cmd^0,w,c
  9563  003696  EC5E  F020         	call	_set_bit
  9564  00369A  6E03               	movwf	??_lcd_cmd^0,c
  9565  00369C  3A03               	swapf	??_lcd_cmd^0,f,c
  9566  00369E  4603               	rlncf	??_lcd_cmd^0,f,c
  9567  0036A0  4603               	rlncf	??_lcd_cmd^0,f,c
  9568  0036A2  508C               	movf	140,w,c	;volatile
  9569  0036A4  1803               	xorwf	??_lcd_cmd^0,w,c
  9570  0036A6  0BBF               	andlw	-65
  9571  0036A8  1803               	xorwf	??_lcd_cmd^0,w,c
  9572  0036AA  6E8C               	movwf	140,c	;volatile
  9573  0036AC                     
  9574                           ;../Bibliotecas/LCD4bits.c: 60:     LATDbits.LATD7 = set_bit(cmd, 0b00001000);
  9575  0036AC  0E08               	movlw	8
  9576  0036AE  6E01               	movwf	set_bit@comp^0,c
  9577  0036B0  5004               	movf	lcd_cmd@cmd^0,w,c
  9578  0036B2  EC5E  F020         	call	_set_bit
  9579  0036B6  6E03               	movwf	??_lcd_cmd^0,c
  9580  0036B8  3203               	rrcf	??_lcd_cmd^0,f,c
  9581  0036BA  3203               	rrcf	??_lcd_cmd^0,f,c
  9582  0036BC  508C               	movf	140,w,c	;volatile
  9583  0036BE  1803               	xorwf	??_lcd_cmd^0,w,c
  9584  0036C0  0B7F               	andlw	-129
  9585  0036C2  1803               	xorwf	??_lcd_cmd^0,w,c
  9586  0036C4  6E8C               	movwf	140,c	;volatile
  9587  0036C6                     
  9588                           ;../Bibliotecas/LCD4bits.c: 62:     LATEbits.LATE1 = 1;
  9589  0036C6  828D               	bsf	141,1,c	;volatile
  9590  0036C8                     
  9591                           ;../Bibliotecas/LCD4bits.c: 63:     LATEbits.LATE1 = 0;
  9592  0036C8  928D               	bcf	141,1,c	;volatile
  9593  0036CA  0012               	return		;funcret
  9594  0036CC                     __end_of_lcd_cmd:
  9595                           	opt callstack 0
  9596                           
  9597 ;; *************** function _set_bit *****************
  9598 ;; Defined at:
  9599 ;;		line 34 in file "../Bibliotecas/LCD4bits.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  cmd             1    wreg     unsigned char 
  9602 ;;  comp            1    0[COMRAM] unsigned char 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  cmd             1    1[COMRAM] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      unsigned char 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9614 ;;      Params:         1       0       0       0       0       0       0
  9615 ;;      Locals:         1       0       0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0
  9617 ;;      Totals:         2       0       0       0       0       0       0
  9618 ;;Total ram usage:        2 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_lcd_cmd
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text38
  9628  0040BC                     __ptext38:
  9629                           	opt callstack 0
  9630  0040BC                     _set_bit:
  9631                           	opt callstack 28
  9632                           
  9633                           ;incstack = 0
  9634                           ;set_bit@cmd stored from wreg
  9635  0040BC  6E02               	movwf	set_bit@cmd^0,c
  9636  0040BE                     
  9637                           ;../Bibliotecas/LCD4bits.c: 34: char set_bit(char cmd, char comp);../Bibliotecas/LCD4bit
      +                          s.c: 35: {;../Bibliotecas/LCD4bits.c: 36:     if ((cmd & comp) >= 1)
  9638  0040BE  5002               	movf	set_bit@cmd^0,w,c
  9639  0040C0  1401               	andwf	set_bit@comp^0,w,c
  9640  0040C2  0900               	iorlw	0
  9641  0040C4  B4D8               	btfsc	status,2,c
  9642  0040C6  EF67  F020         	goto	u4361
  9643  0040CA  EF69  F020         	goto	u4360
  9644  0040CE                     u4361:
  9645  0040CE  EF6C  F020         	goto	l3649
  9646  0040D2                     u4360:
  9647  0040D2                     
  9648                           ;../Bibliotecas/LCD4bits.c: 37:         return 1;
  9649  0040D2  0E01               	movlw	1
  9650  0040D4  EF6D  F020         	goto	l65
  9651  0040D8                     l3649:
  9652                           
  9653                           ;../Bibliotecas/LCD4bits.c: 39:         return 0;
  9654  0040D8  0E00               	movlw	0
  9655  0040DA                     l65:
  9656  0040DA  0012               	return		;funcret
  9657  0040DC                     __end_of_set_bit:
  9658                           	opt callstack 0
  9659                           
  9660 ;; *************** function ___xxtofl *****************
  9661 ;; Defined at:
  9662 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  sign            1    wreg     unsigned char 
  9665 ;;  val             4    0[COMRAM] long 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  sign            1    8[COMRAM] unsigned char 
  9668 ;;  arg             4   10[COMRAM] unsigned long 
  9669 ;;  exp             1    9[COMRAM] unsigned char 
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  4    0[COMRAM] unsigned char 
  9672 ;; Registers used:
  9673 ;;		wreg, status,2, status,0
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 0/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9679 ;;      Params:         4       0       0       0       0       0       0
  9680 ;;      Locals:         6       0       0       0       0       0       0
  9681 ;;      Temps:          4       0       0       0       0       0       0
  9682 ;;      Totals:        14       0       0       0       0       0       0
  9683 ;;Total ram usage:       14 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; This function calls:
  9686 ;;		Nothing
  9687 ;; This function is called by:
  9688 ;;		_main
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text39
  9693  002C86                     __ptext39:
  9694                           	opt callstack 0
  9695  002C86                     ___xxtofl:
  9696                           	opt callstack 30
  9697                           
  9698                           ;incstack = 0
  9699                           ;___xxtofl@sign stored from wreg
  9700  002C86  6E09               	movwf	___xxtofl@sign^0,c
  9701  002C88  5009               	movf	___xxtofl@sign^0,w,c
  9702  002C8A  B4D8               	btfsc	status,2,c
  9703  002C8C  EF4A  F016         	goto	u5511
  9704  002C90  EF4C  F016         	goto	u5510
  9705  002C94                     u5511:
  9706  002C94  EF6E  F016         	goto	l954
  9707  002C98                     u5510:
  9708  002C98  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9709  002C9A  EF53  F016         	goto	u5520
  9710  002C9E  EF51  F016         	goto	u5521
  9711  002CA2                     u5521:
  9712  002CA2  EF6E  F016         	goto	l954
  9713  002CA6                     u5520:
  9714  002CA6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9715  002CAA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9716  002CAE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9717  002CB2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9718  002CB6  1E05               	comf	??___xxtofl^0,f,c
  9719  002CB8  1E06               	comf	(??___xxtofl+1)^0,f,c
  9720  002CBA  1E07               	comf	(??___xxtofl+2)^0,f,c
  9721  002CBC  1E08               	comf	(??___xxtofl+3)^0,f,c
  9722  002CBE  2A05               	incf	??___xxtofl^0,f,c
  9723  002CC0  0E00               	movlw	0
  9724  002CC2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9725  002CC4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9726  002CC6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9727  002CC8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9728  002CCC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9729  002CD0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9730  002CD4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9731  002CD8  EF76  F016         	goto	l4397
  9732  002CDC                     l954:
  9733  002CDC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9734  002CE0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9735  002CE4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9736  002CE8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9737  002CEC                     l4397:
  9738  002CEC  5001               	movf	___xxtofl@val^0,w,c
  9739  002CEE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9740  002CF0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9741  002CF2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9742  002CF4  A4D8               	btfss	status,2,c
  9743  002CF6  EF7F  F016         	goto	u5531
  9744  002CFA  EF81  F016         	goto	u5530
  9745  002CFE                     u5531:
  9746  002CFE  EF8B  F016         	goto	l4403
  9747  002D02                     u5530:
  9748  002D02  0E00               	movlw	0
  9749  002D04  6E01               	movwf	?___xxtofl^0,c
  9750  002D06  0E00               	movlw	0
  9751  002D08  6E02               	movwf	(?___xxtofl+1)^0,c
  9752  002D0A  0E00               	movlw	0
  9753  002D0C  6E03               	movwf	(?___xxtofl+2)^0,c
  9754  002D0E  0E00               	movlw	0
  9755  002D10  6E04               	movwf	(?___xxtofl+3)^0,c
  9756  002D12  EF1C  F017         	goto	l957
  9757  002D16                     l4403:
  9758  002D16  0E96               	movlw	150
  9759  002D18  6E0A               	movwf	___xxtofl@exp^0,c
  9760  002D1A  EF95  F016         	goto	l4407
  9761  002D1E                     l4405:
  9762  002D1E  2A0A               	incf	___xxtofl@exp^0,f,c
  9763  002D20  90D8               	bcf	status,0,c
  9764  002D22  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9765  002D24  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9766  002D26  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9767  002D28  320B               	rrcf	___xxtofl@arg^0,f,c
  9768  002D2A                     l4407:
  9769  002D2A  0E00               	movlw	0
  9770  002D2C  140B               	andwf	___xxtofl@arg^0,w,c
  9771  002D2E  6E05               	movwf	??___xxtofl^0,c
  9772  002D30  0E00               	movlw	0
  9773  002D32  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9774  002D34  6E06               	movwf	(??___xxtofl+1)^0,c
  9775  002D36  0E00               	movlw	0
  9776  002D38  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9777  002D3A  6E07               	movwf	(??___xxtofl+2)^0,c
  9778  002D3C  0EFE               	movlw	254
  9779  002D3E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9780  002D40  6E08               	movwf	(??___xxtofl+3)^0,c
  9781  002D42  5005               	movf	??___xxtofl^0,w,c
  9782  002D44  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9783  002D46  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9784  002D48  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9785  002D4A  A4D8               	btfss	status,2,c
  9786  002D4C  EFAA  F016         	goto	u5541
  9787  002D50  EFAC  F016         	goto	u5540
  9788  002D54                     u5541:
  9789  002D54  EF8F  F016         	goto	l4405
  9790  002D58                     u5540:
  9791  002D58  EFBA  F016         	goto	l961
  9792  002D5C                     l4409:
  9793  002D5C  2A0A               	incf	___xxtofl@exp^0,f,c
  9794  002D5E  0E01               	movlw	1
  9795  002D60  260B               	addwf	___xxtofl@arg^0,f,c
  9796  002D62  0E00               	movlw	0
  9797  002D64  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9798  002D66  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9799  002D68  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9800  002D6A  90D8               	bcf	status,0,c
  9801  002D6C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9802  002D6E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9803  002D70  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9804  002D72  320B               	rrcf	___xxtofl@arg^0,f,c
  9805  002D74                     l961:
  9806  002D74  0E00               	movlw	0
  9807  002D76  140B               	andwf	___xxtofl@arg^0,w,c
  9808  002D78  6E05               	movwf	??___xxtofl^0,c
  9809  002D7A  0E00               	movlw	0
  9810  002D7C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9811  002D7E  6E06               	movwf	(??___xxtofl+1)^0,c
  9812  002D80  0E00               	movlw	0
  9813  002D82  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9814  002D84  6E07               	movwf	(??___xxtofl+2)^0,c
  9815  002D86  0EFF               	movlw	255
  9816  002D88  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9817  002D8A  6E08               	movwf	(??___xxtofl+3)^0,c
  9818  002D8C  5005               	movf	??___xxtofl^0,w,c
  9819  002D8E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9820  002D90  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9821  002D92  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9822  002D94  A4D8               	btfss	status,2,c
  9823  002D96  EFCF  F016         	goto	u5551
  9824  002D9A  EFD1  F016         	goto	u5550
  9825  002D9E                     u5551:
  9826  002D9E  EFAE  F016         	goto	l4409
  9827  002DA2                     u5550:
  9828  002DA2  EFD9  F016         	goto	l4417
  9829  002DA6                     l4415:
  9830  002DA6  060A               	decf	___xxtofl@exp^0,f,c
  9831  002DA8  90D8               	bcf	status,0,c
  9832  002DAA  360B               	rlcf	___xxtofl@arg^0,f,c
  9833  002DAC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9834  002DAE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9835  002DB0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9836  002DB2                     l4417:
  9837  002DB2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9838  002DB4  EFDE  F016         	goto	u5561
  9839  002DB8  EFE0  F016         	goto	u5560
  9840  002DBC                     u5561:
  9841  002DBC  EFE8  F016         	goto	l968
  9842  002DC0                     u5560:
  9843  002DC0  0E02               	movlw	2
  9844  002DC2  600A               	cpfslt	___xxtofl@exp^0,c
  9845  002DC4  EFE6  F016         	goto	u5571
  9846  002DC8  EFE8  F016         	goto	u5570
  9847  002DCC                     u5571:
  9848  002DCC  EFD3  F016         	goto	l4415
  9849  002DD0                     u5570:
  9850  002DD0                     l968:
  9851  002DD0  B00A               	btfsc	___xxtofl@exp^0,0,c
  9852  002DD2  EFED  F016         	goto	u5581
  9853  002DD6  EFEF  F016         	goto	u5580
  9854  002DDA                     u5581:
  9855  002DDA  EFF0  F016         	goto	l4423
  9856  002DDE                     u5580:
  9857  002DDE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9858  002DE0                     l4423:
  9859  002DE0  90D8               	bcf	status,0,c
  9860  002DE2  320A               	rrcf	___xxtofl@exp^0,f,c
  9861  002DE4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9862  002DE8  6A06               	clrf	(??___xxtofl+1)^0,c
  9863  002DEA  6A07               	clrf	(??___xxtofl+2)^0,c
  9864  002DEC  6A08               	clrf	(??___xxtofl+3)^0,c
  9865  002DEE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9866  002DF2  6A07               	clrf	(??___xxtofl+2)^0,c
  9867  002DF4  6A06               	clrf	(??___xxtofl+1)^0,c
  9868  002DF6  6A05               	clrf	??___xxtofl^0,c
  9869  002DF8  5005               	movf	??___xxtofl^0,w,c
  9870  002DFA  120B               	iorwf	___xxtofl@arg^0,f,c
  9871  002DFC  5006               	movf	(??___xxtofl+1)^0,w,c
  9872  002DFE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9873  002E00  5007               	movf	(??___xxtofl+2)^0,w,c
  9874  002E02  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9875  002E04  5008               	movf	(??___xxtofl+3)^0,w,c
  9876  002E06  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9877  002E08  5009               	movf	___xxtofl@sign^0,w,c
  9878  002E0A  B4D8               	btfsc	status,2,c
  9879  002E0C  EF0A  F017         	goto	u5591
  9880  002E10  EF0C  F017         	goto	u5590
  9881  002E14                     u5591:
  9882  002E14  EF14  F017         	goto	l4433
  9883  002E18                     u5590:
  9884  002E18  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9885  002E1A  EF13  F017         	goto	u5600
  9886  002E1E  EF11  F017         	goto	u5601
  9887  002E22                     u5601:
  9888  002E22  EF14  F017         	goto	l4433
  9889  002E26                     u5600:
  9890  002E26  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9891  002E28                     l4433:
  9892  002E28  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9893  002E2C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9894  002E30  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9895  002E34  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9896  002E38                     l957:
  9897  002E38  0012               	return		;funcret
  9898  002E3A                     __end_of___xxtofl:
  9899                           	opt callstack 0
  9900                           
  9901 ;; *************** function ___lmul *****************
  9902 ;; Defined at:
  9903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  multiplier      4    0[COMRAM] unsigned long 
  9906 ;;  multiplicand    4    4[COMRAM] unsigned long 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  product         4    8[COMRAM] unsigned long 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  4    0[COMRAM] unsigned long 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9918 ;;      Params:         8       0       0       0       0       0       0
  9919 ;;      Locals:         4       0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0
  9921 ;;      Totals:        12       0       0       0       0       0       0
  9922 ;;Total ram usage:       12 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_main
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text40
  9932  003C84                     __ptext40:
  9933                           	opt callstack 0
  9934  003C84                     ___lmul:
  9935                           	opt callstack 30
  9936  003C84  0E00               	movlw	0
  9937  003C86  6E09               	movwf	___lmul@product^0,c
  9938  003C88  0E00               	movlw	0
  9939  003C8A  6E0A               	movwf	(___lmul@product+1)^0,c
  9940  003C8C  0E00               	movlw	0
  9941  003C8E  6E0B               	movwf	(___lmul@product+2)^0,c
  9942  003C90  0E00               	movlw	0
  9943  003C92  6E0C               	movwf	(___lmul@product+3)^0,c
  9944  003C94                     l4339:
  9945  003C94  A001               	btfss	___lmul@multiplier^0,0,c
  9946  003C96  EF4F  F01E         	goto	u5431
  9947  003C9A  EF51  F01E         	goto	u5430
  9948  003C9E                     u5431:
  9949  003C9E  EF59  F01E         	goto	l4343
  9950  003CA2                     u5430:
  9951  003CA2  5005               	movf	___lmul@multiplicand^0,w,c
  9952  003CA4  2609               	addwf	___lmul@product^0,f,c
  9953  003CA6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  9954  003CA8  220A               	addwfc	(___lmul@product+1)^0,f,c
  9955  003CAA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  9956  003CAC  220B               	addwfc	(___lmul@product+2)^0,f,c
  9957  003CAE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  9958  003CB0  220C               	addwfc	(___lmul@product+3)^0,f,c
  9959  003CB2                     l4343:
  9960  003CB2  90D8               	bcf	status,0,c
  9961  003CB4  3605               	rlcf	___lmul@multiplicand^0,f,c
  9962  003CB6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9963  003CB8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9964  003CBA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9965  003CBC  90D8               	bcf	status,0,c
  9966  003CBE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  9967  003CC0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  9968  003CC2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  9969  003CC4  3201               	rrcf	___lmul@multiplier^0,f,c
  9970  003CC6  5001               	movf	___lmul@multiplier^0,w,c
  9971  003CC8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  9972  003CCA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  9973  003CCC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  9974  003CCE  A4D8               	btfss	status,2,c
  9975  003CD0  EF6C  F01E         	goto	u5441
  9976  003CD4  EF6E  F01E         	goto	u5440
  9977  003CD8                     u5441:
  9978  003CD8  EF4A  F01E         	goto	l4339
  9979  003CDC                     u5440:
  9980  003CDC  C009  F001         	movff	___lmul@product,?___lmul
  9981  003CE0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  9982  003CE4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  9983  003CE8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  9984  003CEC  0012               	return		;funcret
  9985  003CEE                     __end_of___lmul:
  9986                           	opt callstack 0
  9987                           
  9988 ;; *************** function ___aldiv *****************
  9989 ;; Defined at:
  9990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  dividend        4   12[COMRAM] long 
  9993 ;;  divisor         4   16[COMRAM] long 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  quotient        4   22[COMRAM] long 
  9996 ;;  sign            1   21[COMRAM] unsigned char 
  9997 ;;  counter         1   20[COMRAM] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  4   12[COMRAM] long 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2, status,0
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10007 ;;      Params:         8       0       0       0       0       0       0
 10008 ;;      Locals:         6       0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0
 10010 ;;      Totals:        14       0       0       0       0       0       0
 10011 ;;Total ram usage:       14 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_main
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text41
 10021  0030E4                     __ptext41:
 10022                           	opt callstack 0
 10023  0030E4                     ___aldiv:
 10024                           	opt callstack 30
 10025  0030E4  0E00               	movlw	0
 10026  0030E6  6E16               	movwf	___aldiv@sign^0,c
 10027  0030E8  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
 10028  0030EA  EF7B  F018         	goto	u5450
 10029  0030EE  EF79  F018         	goto	u5451
 10030  0030F2                     u5451:
 10031  0030F2  EF85  F018         	goto	l4355
 10032  0030F6                     u5450:
 10033  0030F6  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 10034  0030F8  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 10035  0030FA  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 10036  0030FC  6C11               	negf	___aldiv@divisor^0,c
 10037  0030FE  0E00               	movlw	0
 10038  003100  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 10039  003102  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 10040  003104  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 10041  003106  0E01               	movlw	1
 10042  003108  6E16               	movwf	___aldiv@sign^0,c
 10043  00310A                     l4355:
 10044  00310A  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
 10045  00310C  EF8C  F018         	goto	u5460
 10046  003110  EF8A  F018         	goto	u5461
 10047  003114                     u5461:
 10048  003114  EF96  F018         	goto	l4361
 10049  003118                     u5460:
 10050  003118  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 10051  00311A  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 10052  00311C  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 10053  00311E  6C0D               	negf	___aldiv@dividend^0,c
 10054  003120  0E00               	movlw	0
 10055  003122  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 10056  003124  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 10057  003126  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 10058  003128  0E01               	movlw	1
 10059  00312A  1A16               	xorwf	___aldiv@sign^0,f,c
 10060  00312C                     l4361:
 10061  00312C  0E00               	movlw	0
 10062  00312E  6E17               	movwf	___aldiv@quotient^0,c
 10063  003130  0E00               	movlw	0
 10064  003132  6E18               	movwf	(___aldiv@quotient+1)^0,c
 10065  003134  0E00               	movlw	0
 10066  003136  6E19               	movwf	(___aldiv@quotient+2)^0,c
 10067  003138  0E00               	movlw	0
 10068  00313A  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 10069  00313C  5011               	movf	___aldiv@divisor^0,w,c
 10070  00313E  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 10071  003140  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 10072  003142  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 10073  003144  B4D8               	btfsc	status,2,c
 10074  003146  EFA7  F018         	goto	u5471
 10075  00314A  EFA9  F018         	goto	u5470
 10076  00314E                     u5471:
 10077  00314E  EFDF  F018         	goto	l4383
 10078  003152                     u5470:
 10079  003152  0E01               	movlw	1
 10080  003154  6E15               	movwf	___aldiv@counter^0,c
 10081  003156  EFB3  F018         	goto	l4369
 10082  00315A                     l4367:
 10083  00315A  90D8               	bcf	status,0,c
 10084  00315C  3611               	rlcf	___aldiv@divisor^0,f,c
 10085  00315E  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 10086  003160  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 10087  003162  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 10088  003164  2A15               	incf	___aldiv@counter^0,f,c
 10089  003166                     l4369:
 10090  003166  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 10091  003168  EFB8  F018         	goto	u5481
 10092  00316C  EFBA  F018         	goto	u5480
 10093  003170                     u5481:
 10094  003170  EFAD  F018         	goto	l4367
 10095  003174                     u5480:
 10096  003174                     l4371:
 10097  003174  90D8               	bcf	status,0,c
 10098  003176  3617               	rlcf	___aldiv@quotient^0,f,c
 10099  003178  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 10100  00317A  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 10101  00317C  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 10102  00317E  5011               	movf	___aldiv@divisor^0,w,c
 10103  003180  5C0D               	subwf	___aldiv@dividend^0,w,c
 10104  003182  5012               	movf	(___aldiv@divisor+1)^0,w,c
 10105  003184  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 10106  003186  5013               	movf	(___aldiv@divisor+2)^0,w,c
 10107  003188  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 10108  00318A  5014               	movf	(___aldiv@divisor+3)^0,w,c
 10109  00318C  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 10110  00318E  A0D8               	btfss	status,0,c
 10111  003190  EFCC  F018         	goto	u5491
 10112  003194  EFCE  F018         	goto	u5490
 10113  003198                     u5491:
 10114  003198  EFD7  F018         	goto	l4379
 10115  00319C                     u5490:
 10116  00319C  5011               	movf	___aldiv@divisor^0,w,c
 10117  00319E  5E0D               	subwf	___aldiv@dividend^0,f,c
 10118  0031A0  5012               	movf	(___aldiv@divisor+1)^0,w,c
 10119  0031A2  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 10120  0031A4  5013               	movf	(___aldiv@divisor+2)^0,w,c
 10121  0031A6  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 10122  0031A8  5014               	movf	(___aldiv@divisor+3)^0,w,c
 10123  0031AA  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 10124  0031AC  8017               	bsf	___aldiv@quotient^0,0,c
 10125  0031AE                     l4379:
 10126  0031AE  90D8               	bcf	status,0,c
 10127  0031B0  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 10128  0031B2  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 10129  0031B4  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 10130  0031B6  3211               	rrcf	___aldiv@divisor^0,f,c
 10131  0031B8  2E15               	decfsz	___aldiv@counter^0,f,c
 10132  0031BA  EFBA  F018         	goto	l4371
 10133  0031BE                     l4383:
 10134  0031BE  5016               	movf	___aldiv@sign^0,w,c
 10135  0031C0  B4D8               	btfsc	status,2,c
 10136  0031C2  EFE5  F018         	goto	u5501
 10137  0031C6  EFE7  F018         	goto	u5500
 10138  0031CA                     u5501:
 10139  0031CA  EFEF  F018         	goto	l4387
 10140  0031CE                     u5500:
 10141  0031CE  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 10142  0031D0  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 10143  0031D2  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 10144  0031D4  6C17               	negf	___aldiv@quotient^0,c
 10145  0031D6  0E00               	movlw	0
 10146  0031D8  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 10147  0031DA  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 10148  0031DC  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 10149  0031DE                     l4387:
 10150  0031DE  C017  F00D         	movff	___aldiv@quotient,?___aldiv
 10151  0031E2  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
 10152  0031E6  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
 10153  0031EA  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
 10154  0031EE  0012               	return		;funcret
 10155  0031F0                     __end_of___aldiv:
 10156                           	opt callstack 0
 10157                           
 10158                           	psect	rparam
 10159  0000                     tosu	equ	0xFFF
 10160                           tosh	equ	0xFFE
 10161                           tosl	equ	0xFFD
 10162                           stkptr	equ	0xFFC
 10163                           pclatu	equ	0xFFB
 10164                           pclath	equ	0xFFA
 10165                           pcl	equ	0xFF9
 10166                           tblptru	equ	0xFF8
 10167                           tblptrh	equ	0xFF7
 10168                           tblptrl	equ	0xFF6
 10169                           tablat	equ	0xFF5
 10170                           prodh	equ	0xFF4
 10171                           prodl	equ	0xFF3
 10172                           indf0	equ	0xFEF
 10173                           postinc0	equ	0xFEE
 10174                           postdec0	equ	0xFED
 10175                           preinc0	equ	0xFEC
 10176                           plusw0	equ	0xFEB
 10177                           fsr0h	equ	0xFEA
 10178                           fsr0l	equ	0xFE9
 10179                           wreg	equ	0xFE8
 10180                           indf1	equ	0xFE7
 10181                           postinc1	equ	0xFE6
 10182                           postdec1	equ	0xFE5
 10183                           preinc1	equ	0xFE4
 10184                           plusw1	equ	0xFE3
 10185                           fsr1h	equ	0xFE2
 10186                           fsr1l	equ	0xFE1
 10187                           bsr	equ	0xFE0
 10188                           indf2	equ	0xFDF
 10189                           postinc2	equ	0xFDE
 10190                           postdec2	equ	0xFDD
 10191                           preinc2	equ	0xFDC
 10192                           plusw2	equ	0xFDB
 10193                           fsr2h	equ	0xFDA
 10194                           fsr2l	equ	0xFD9
 10195                           status	equ	0xFD8


Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128     92     118
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[9]), STR_3(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[9]), STR_3(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S940_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_escreve_bf@str	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_ini->_lcd_cmd
    _lcd_escreve_bf->_lcd_envia_byte
    _lcd_envia_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47246
                                             90 BANK0      2     2      0
                            ___aldiv
                            ___fldiv
                            ___flmul
                             ___lmul
                           ___xxtofl
                     _lcd_escreve_bf
                            _lcd_ini
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   38548
                                            116 COMRAM    10     0     10
                                             80 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38031
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           52    46      6   37631
                                             96 COMRAM    12     6      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4823
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22453
                                             84 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3841
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve_bf                                       5     2      3    1789
                                              6 COMRAM     5     2      3
                     _lcd_envia_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_envia_byte                                       2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _lcd_escreve_bf
     _lcd_envia_byte
       _lcd_cmd
         _set_bit
   _lcd_ini
     _lcd_cmd
       _set_bit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5C      76       5       92.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     154      15        0.0%
DATA                 0      0     154       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Oct 05 14:58:00 2019

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l34 2698                       l36 26A6                       l61 3C82  
                     l37 2772                       l39 2780                       l72 40F8  
                     l65 40DA                       l81 3BE8                       l69 36CA  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l122 38AC  
                    l125 38EE                      l310 3CDC                      l134 3E66  
                    l230 2ABA                      l311 3CEC                      l127 392A  
                    l152 11E6                      l240 2C84                      l232 2AC2  
                    l170 0A24                      l254 12DA                      l530 39EE  
                    l196 0DBC                      l543 3A9E                      l287 17C4  
                    l279 19B6                      l295 3D46                      l296 3D4E  
                    l378 31EE                      l299 4098                      l564 33B2  
                    l573 4004                      l558 3B48                      l920 2132  
                    l744 35E6                      l569 33F8                      l913 1F3C  
                    l737 35C6                      l930 2262                      l922 21AA  
                    l754 379A                      l923 2198                      l827 1BA6  
                    l747 377A                      l844 1CC0                      l836 1E76  
                    l828 1B94                      l596 32F4                      l917 22A0  
                    l853 1D90                      l829 1B5A                      l854 1D7E  
                    l961 2D74                      l881 263A                      l954 2CDC  
                    l883 249A                      l892 24E0                      l980 34F6  
                    l957 2E38                      l869 3F50                      l894 2558  
                    l886 245E                      l895 2546                      l968 2DD0  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _adc 00F4  
                    _pad 3866             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022             __CFG_LVP$OFF 000000  
           ___fltol@exp1 000A             __CFG_WDT$OFF 000000                     l1012 2FC8  
                   l1021 29C4                     l1101 3DA6                     l1009 2FC0  
                   l1018 2A80                     l1042 3FCC                     l1106 3DAE  
                   l1028 403C                     l1036 3F0A                     l1072 3EB8  
                   l1057 3864                     l1065 3F94                     l3001 1D2A  
                   l1081 3E0A                     l1075 40FA                     l3011 1D52  
                   l3003 1D2E                     l1091 30E2                     l3021 1DAC  
                   l3013 1D60                     l3005 1D3E                     l1087 4072  
                   l3031 1E16                     l3023 1DBA                     l3015 1D76  
                   l3007 1D40                     l3111 2890                     l3103 3D86  
                   l4001 2E3A                     l3201 23C4                     l3041 1E50  
                   l3033 1E36                     l3025 1DF4                     l3009 1D4E  
                   l3121 2978                     l3113 28E6                     l3105 3D98  
                   l4011 2EA8                     l4003 2E4E                     l3051 3866  
                   l3211 2412                     l3043 1E56                     l3035 1E3A  
                   l3019 1DA0                     l3027 1DF6                     l3131 2A60  
                   l3123 29B4                     l3115 28FA                     l3141 4074  
                   l4021 2ED0                     l4013 2EAC                     l4005 2E52  
                   l3061 38B8                     l3053 3876                     l3221 245C  
                   l3213 2422                     l3205 23D8                     l3301 1EDA  
                   l3045 1E64                     l3037 1E48                     l3029 1E06  
                   l3133 2A70                     l3117 2908                     l3125 29E8  
                   l3109 2870                     l4101 1256                     l3143 4090  
                   l4023 2ED8                     l4007 2E56                     l3063 38CC  
                   l3055 388A                     l3231 24AA                     l3223 2468  
                   l3215 242A                     l3207 23F2                     l3151 22BC  
                   l3311 1F06                     l3303 1EE0                     l3047 1E66  
                   l3039 1E4E                     l3127 2A24                     l3137 4006  
                   l4033 2F80                     l4025 2F0C                     l4017 2EB2  
                   l4009 2E72                     l3065 38D0                     l3057 3898  
                   l3233 24C0                     l3241 24F0                     l3225 2486  
                   l3217 243A                     l3209 2402                     l3161 22F0  
                   l3153 22BE                     l3401 2266                     l3321 1F5C  
                   l3313 1F16                     l3305 1EE6                     l3081 348C  
                   l3073 33FA                     l3129 2A38                     l4201 1794  
                   l4121 12E8                     l4113 1268                     l4105 125C  
                   l4035 2F92                     l4019 2EC8                     l3067 38FE  
                   l3059 38A4                     l3243 24FE                     l3235 24C6  
                   l3227 2488                     l3219 244E                     l3171 2322  
                   l3155 22CE                     l3163 22F8                     l3147 22A2  
                   l3411 2290                     l3403 2276                     l3331 1F9C  
                   l3315 1F26                     l3307 1EF4                     l3091 34EE  
                   l3075 341A                     l4051 300E                     l4043 2FCA  
                   l4211 1848                     l4131 1360                     l4123 12EA  
                   l4301 3C50                     l4037 2FA4                     l4029 2F42  
                   l3069 3912                     l3421 392C                     l3253 2568  
                   l3261 25B0                     l3245 2502                     l3237 24D0  
                   l3229 2498                     l3181 2356                     l3173 2324  
                   l3165 2308                     l3157 22DE                     l3149 22AE  
                   l3501 3AA0                     l3405 2284                     l3341 1FE6  
                   l3333 1FA8                     l3325 1F70                     l3317 1F2C  
                   l3309 1EF6                     l3077 3458                     l3085 3498  
                   l4053 303E                     l4045 2FF4                     l4133 1380  
                   l4141 13E8                     l4125 130E                     l4117 1274  
                   l4109 1262                     l4071 365E                     l4063 35EA  
                   l4311 3B5C                     l4303 3C56                     l3431 3958  
                   l3423 3930                     l3271 261A                     l3263 25CA  
                   l3255 2574                     l3247 2510                     l3239 24DE  
                   l3191 239C                     l3175 2334                     l3183 235E  
                   l3167 230E                     l3159 22EE                     l3511 3B40  
                   l3503 3ACE                     l3407 2286                     l3351 2038  
                   l3343 1FF2                     l3335 1FC0                     l3327 1F7C  
                   l3319 1F4C                     l3415 3F0C                     l3087 34AA  
                   l3079 3480                     l3095 3DB0                     l4055 305A  
                   l4223 1914                     l4215 1880                     l4207 17D8  
                   l4151 1480                     l4143 140C                     l4135 138E  
                   l4127 1344                     l4119 12C8                     l4081 36C8  
                   l4073 3676                     l4065 3652                     l4321 3BB4  
                   l4313 3B66                     l4305 3C6C                     l3441 3986  
                   l3433 3960                     l3425 393E                     l3273 2628  
                   l3265 25E0                     l3257 2582                     l3249 253E  
                   l3193 23A0                     l3185 236E                     l3177 2344  
                   l3169 2314                     l3513 3B46                     l3505 3ADE  
                   l3521 3334                     l3409 228C                     l3361 20B6  
                   l3353 2048                     l3345 2002                     l3337 1FCC  
                   l3329 1F86                     l3417 3F1C                     l3097 3DC0  
                   l4057 306C                     l4049 3000                     l3601 354C  
                   l4241 19A4                     l4225 1938                     l4233 1966  
                   l4217 18B6                     l4209 17FC                     l4153 14A0  
                   l4145 1414                     l4161 1508                     l4129 1352  
                   l4411 2D5E                     l4403 2D16                     l4075 3690  
                   l4067 3654                     l4323 3BB8                     l4315 3B78  
                   l4307 3C74                     l3451 39C0                     l3443 398E  
                   l3435 3964                     l3427 3946                     l3275 262E  
                   l3267 25FA                     l3259 25AC                     l3187 2384  
                   l3179 2354                     l3507 3B0C                     l3531 33A0  
                   l3523 3362                     l3371 2130                     l3363 20EC  
                   l3355 2064                     l3347 200E                     l3339 1FD8  
                   l3291 1E94                     l3099 3D50                     l4059 30AA  
                   l3611 35C0                     l3603 355E                     l4235 1974  
                   l4227 1946                     l4171 15AE                     l4163 152A  
                   l4155 14AE                     l4147 1422                     l4139 13D6  
                   l4091 1230                     l4083 11E8                     l4331 3E8A  
                   l4341 3CA2                     l4421 2DDE                     l4413 2D6A  
                   l4405 2D1E                     l4077 36AC                     l4069 3656  
                   l4253 40DE                     l4317 3B7E                     l4309 3B4C  
                   l2821 37E8                     l2813 379C                     l3461 39E6  
                   l3453 39C2                     l3445 399C                     l3437 396C  
                   l3429 394A                     l3277 2630                     l3269 2616  
                   l3189 2394                     l3197 23B4                     l3509 3B1C  
                   l3533 33F0                     l3525 3372                     l3517 32F6  
                   l3381 2190                     l3373 2142                     l3365 20FA  
                   l3357 2070                     l3349 201E                     l3293 1EA4  
                   l3285 1E78                     l3541 3FE4                     l2901 1AC4  
                   l3605 358C                     l3621 3714                     l3613 36CC  
                   l4229 195A                     l4181 1632                     l4173 15D2  
                   l4165 153A                     l4149 1446                     l4093 123C  
                   l4085 120C                     l4261 3CEE                     l4333 3EA6  
                   l4325 3E68                     l4351 30F6                     l4343 3CB2  
                   l4431 2E26                     l4423 2DE0                     l4415 2DA6  
                   l4407 2D2A                     l4079 36C6                     l4255 40E8  
                   l4319 3B8C                     l4271 3BEE                     l3631 3EBE  
                   l2823 381E                     l2815 37AE                     l2831 3F70  
                   l3455 39C8                     l3447 39A2                     l3439 397E  
                   l3471 3A0A                     l3199 23C4                     l3535 33F6  
                   l3527 3380                     l3519 3324                     l3391 21FE  
                   l3375 2150                     l3367 2118                     l3359 208C  
                   l3295 1EB4                     l3287 1E84                     l3543 3FF4  
                   l2911 1AD8                     l2903 1AC8                     l3711 079E  
                   l3703 074E                     l3607 35AC                     l3623 3742  
                   l3615 36EA                     l4183 1648                     l4191 16B2  
                   l4175 1604                     l4167 156C                     l4159 14F6  
                   l4095 123E                     l4087 121A                     l4239 1980  
                   l4263 3CF6                     l4327 3E7A                     l4361 312C  
                   l4353 3106                     l4345 3CBC                     l4337 3C84  
                   l4433 2E28                     l4425 2DE4                     l4417 2DB2  
                   l4409 2D5C                     l3641 40BE                     l4257 40F0  
                   l4281 3C0A                     l4273 3BF0                     l3633 3ED2  
                   l2817 37C0                     l2833 3F74                     l2841 4066  
                   l3449 39B8                     l3457 39CE                     l3481 3A3E  
                   l3473 3A0E                     l3465 39F0                     l3529 3392  
                   l3385 21BA                     l3393 2202                     l3377 2154  
                   l3369 2122                     l3297 1EC4                     l3289 1E92  
                   l2921 1AEC                     l2913 1ADC                     l2905 1ACC  
                   l3561 325A                     l3553 321A                     l3801 0B42  
                   l3721 0822                     l3705 0760                     l3609 35AE  
                   l3625 3762                     l3617 36F2                     l4193 16E0  
                   l4185 1656                     l4169 157C                     l4097 1250  
                   l4089 122C                     l4265 3D04                     l4329 3E82  
                   l4441 264C                     l4371 3174                     l4363 313C  
                   l4355 310A                     l4347 30E4                     l4339 3C94  
                   l4427 2E08                     l4419 2DC0                     l3643 40D2  
                   l4259 40F2                     l4291 3C22                     l4275 3BF6  
                   l3635 3F00                     l2819 37CA                     l2827 3F52  
                   l2835 403E                     l3459 39DE                     l3491 3A78  
                   l3483 3A46                     l3475 3A1C                     l3467 39F4  
                   l3395 221C                     l3387 21C6                     l3379 2162  
                   l3299 1ECA                     l3539 3FCE                     l2931 1B26  
                   l2923 1AF0                     l2915 1AE0                     l2907 1AD0  
                   l2851 19C4                     l3571 328A                     l3563 3268  
                   l3555 3244                     l3547 31F0                     l3811 0C2A  
                   l3803 0B4A                     l3723 0834                     l3707 077C  
                   l3715 07C6                     l3627 3774                     l3619 3706  
                   l4187 1686                     l4179 1620                     l4267 3D2A  
                   l4451 2696                     l4443 265E                     l4381 31B8  
                   l4373 317E                     l4365 3152                     l4357 3118  
                   l4349 30E8                     l4429 2E18                     l4293 3C24  
                   l4277 3BF8                     l4269 3BEA                     l3637 3F04  
                   l3629 3EBA                     l2829 3F5E                     l2837 404A  
                   l3661 3E3C                     l3653 3E0C                     l3485 3A54  
                   l3493 3A7E                     l3477 3A24                     l3469 3A02  
                   l3397 2230                     l3389 21D4                     l2941 1B78  
                   l2933 1B42                     l2925 1AF4                     l2917 1AE4  
                   l2909 1AD4                     l2861 1A04                     l2853 19D2  
                   l3581 32B4                     l3573 3294                     l3557 3246  
                   l3549 3206                     l2845 3F96                     l3901 1030  
                   l3821 0CE8                     l3813 0C5E                     l3805 0B5A  
                   l3741 08F0                     l3725 0850                     l3717 07EC  
                   l3733 086C                     l3709 0794                     l4197 174E  
                   l4461 2768                     l4453 26AE                     l4445 2670  
                   l4437 263C                     ?_pad 0011                     l4375 319C  
                   l4367 315A                     l4383 31BE                     l4359 3128  
                   l4391 2C88                     l4295 3C34                     l4287 3C0E  
                   l4279 3BFA                     l2839 404E                     l3663 3E42  
                   l3655 3E20                     l3495 3A8E                     l3487 3A6A  
                   l3479 3A36                     l3399 224A                     l2951 1BC4  
                   l2943 1B86                     l2935 1B52                     l2919 1AE8  
                   l2927 1AF8                     l2871 1A36                     l2863 1A06  
                   l2855 19D4                     l3583 32C4                     l3559 3256  
                   l3911 1070                     l3903 1042                     l3831 0D84  
                   l3823 0CFE                     l3807 0B6E                     l3815 0C64  
                   l3743 08F6                     l3751 09BE                     l3735 0886  
                   l3671 0652                     l3591 34F8                     l4199 1760  
                   l4527 129A                     l4471 2820                     l4463 2770  
                   l4455 26C0                     l4447 268A                     l4439 2648  
                   l4385 31CE                     l4377 31AC                     l4369 3166  
                   l4393 2C98                     l3649 40D8                     l4297 3C3A  
                   l4289 3C14                     l4529 2EF6                     l3657 3E2C  
                   l3497 3A96                     l3489 3A72                     l2961 1C04  
                   l2945 1B88                     l2937 1B68                     l2929 1AFC  
                   l2881 1A5E                     l2873 1A38                     l2857 19E4  
                   l2865 1A0E                     l2849 19B8                     l3585 32D4  
                   l3569 3280                     l3921 10B8                     l3913 1078  
                   l3905 104A                     l3841 0E3C                     l3833 0D94  
                   l3825 0D30                     l3817 0C82                     l3809 0BD2  
                   l3761 09FE                     l3753 09CE                     l3745 0950  
                   l3681 069E                     l3673 0660                     l3593 3504  
                   l4473 2832                     l4465 2788                     l4457 2730  
                   l4449 268E                     l4387 31DE                     l4379 31AE  
                   l4395 2CA6                     l4299 3C42                     l3659 3E38  
                   l2971 1C2E                     l2963 1C10                     l2955 1BD8  
                   l2947 1B92                     l2939 1B74                     l2891 1A98  
                   l2883 1A6E                     l2875 1A3E                     l2867 1A1E  
                   l2859 19F4                     l3587 32E4                     l3579 32A8  
                   l3931 110E                     l3923 10D4                     l3915 1080  
                   l3907 105A                     l3843 0E4C                     l3851 0E86  
                   l3835 0DA8                     l3827 0D40                     l3819 0CB6  
                   l3771 0A42                     l3763 0A18                     l3755 09D2  
                   l3747 0984                     l3739 08BC                     l3691 06E4  
                   l3683 06B0                     l3675 0668                     l3667 0638  
                   l3595 3522                     l4475 2856                     l4467 279A  
                   l4459 2764                     l4397 2CEC                     l2981 1CA0  
                   l2965 1C14                     l2957 1BE8                     l2949 1BB4  
                   l2973 1C34                     l2893 1AAA                     l2885 1A7E  
                   l2877 1A4C                     l2869 1A24                     l3941 114A  
                   l3933 1114                     l3925 10DC                     l3917 108C  
                   l3909 1062                     l3861 0EC0                     l3853 0E98  
                   l3845 0E5E                     l3837 0DB4                     l3829 0D50  
                   l3773 0A54                     l3781 0AB2                     l3757 09E4  
                   l3765 0A30                     l3749 098C                     l3693 06E8  
                   l3685 06BE                     l3677 068C                     l3669 0642  
                   l3597 352A                     l4469 27F4                     l4399 2D02  
                   l2991 1CFA                     l2975 1C5A                     l2983 1CB0  
                   l2967 1C22                     l2959 1BF6                     l2895 1AB8  
                   l2887 1A80                     l2879 1A4E                     l3951 119C  
                   l3943 1150                     l3935 1126                     l3919 1092  
                   l3927 10E2                     l3863 0ECC                     l3855 0EA6  
                   l3871 0EEC                     l3847 0E70                     l3839 0DD8  
                   l3791 0AF0                     l3783 0ABA                     l3775 0A70  
                   l3759 09F6                     l3695 06EC                     l3687 06D0  
                   l3679 0696                     l3599 353E                     l2993 1D04  
                   l2985 1CD6                     l2977 1C8E                     l2969 1C24  
                   l2897 1ABC                     l2889 1A88                     l3953 11A8  
                   l3945 1156                     l3937 1132                     l3929 10F4  
                   l3881 0F72                     l3873 0EFE                     l3865 0EDC  
                   l3857 0EB6                     l3849 0E7E                     l3793 0B02  
                   l3785 0ACC                     l3777 0AA6                     l3689 06DC  
                   l3697 06F2                     l2995 1D12                     l2987 1CE6  
                   l2979 1C90                     l2899 1AC0                     l3955 11B0  
                   l3939 113A                     l3891 0FEC                     l3883 0FA6  
                   l3875 0F10                     l3867 0EE0                     l3859 0EBA  
                   l3795 0B10                     l3787 0ADE                     l3779 0AAE  
                   l3699 0718                     l3971 2AAE                     l2997 1D14  
                   l3957 11C0                     l3949 118A                     l3893 0FFE  
                   l3885 0FAE                     l3877 0F14                     l3869 0EE6  
                   l3797 0B28                     l3789 0AEC                     l3981 2B78  
                   l3973 2AEA                     l3965 2A82                     l2999 1D22  
                   l3959 11C6                     l3895 100C                     l3879 0F1A  
                   l3887 0FB2                     l3799 0B3A                     l3991 2C18  
                   l3983 2B7E                     l3975 2AF2                     l3967 2A92  
                   l3897 101C                     l3889 0FD0                     l3993 2C32  
                   l3985 2B84                     l3977 2AFC                     l3969 2A94  
                   l3899 1020                     l3995 2C4C                     l3979 2B02  
                   l3987 2BE8                     l3989 2BFA                     l3997 2C5C  
                   STR_1 0614                     STR_2 061A                     STR_3 0601  
                   STR_4 060B                     STR_5 0620                     STR_6 0628  
                   STR_9 0624                     u3000 1B3E                     u3001 1B38  
                   u3010 1B40                     u3100 1C5A                     u3020 1B68  
                   u3101 1C56                     u3021 1B64                     u3110 1CA0  
                   u3030 1B86                     u3111 1C9C                     u3031 1B82  
                   u4000 3958                     u3200 1D8C                     u3120 1CD6  
                   u3040 1BA6                     _LATD 000F8C                     u4001 3954  
                   u3201 1D88                     u3121 1CD2                     u3041 1BA2  
                   u4010 397E                     u3210 1DA0                     u3130 1CE6  
                   u3050 1BB4                     u4011 397A                     u3211 1D9C  
                   u3131 1CE2                     u3051 1BB0                     u3300 3898  
                   u4020 399C                     u4100 3A8E                     u3220 1DBA  
                   u3140 1D12                     u3060 1BC4                     u3301 3894  
                   u4021 3998                     u4101 3A8A                     u3221 1DB6  
                   u3141 1D0E                     u3061 1BC0                     u3310 38EE  
                   u4030 39B8                     u4110 3ACE                     u3230 1DF4  
                   u3150 1D22                     u3070 1BF6                     u3311 38EA  
                   u4031 39B4                     u4111 3ACA                     u3231 1DF0  
                   u3151 1D1E                     u3071 1BF2                     u5000 2F7A  
                   u3320 38FE                     u4040 39DE                     u4120 3B0C  
                   u3240 1E06                     u3160 1D3E                     u3080 1C04  
                   u4200 3206                     u3400 3DF8                     u5001 2F74  
                   u3321 38FA                     u4041 39DA                     u4121 3B08  
                   u3241 1E02                     u3161 1D3A                     u3081 1C00  
                   u4201 3202                     u5010 2F7C                     u4050 3A02  
                   u4130 3B40                     u3250 1E16                     u3170 1D4E  
                   u3090 1C22                     u4210 323A                     u3330 343A  
                   u3410 3E0A                     u4051 39FE                     u4131 3B3C  
                   u3251 1E12                     u3171 1D4A                     u3091 1C1E  
                   u3411 3E06                     u5020 2F92                     u4060 3A1C  
                   u4140 3324                     u3260 1E36                     u3180 1D60  
                   u4220 3268                     u3340 3458                     u3500 2998  
                   u3420 3D80                     u5100 30CA                     u4300 358C  
                   u5021 2F8E                     u4061 3A18                     u4141 3320  
                   u3261 1E32                     u3181 1D5C                     u4221 3264  
                   u3341 3454                     u3421 3D7A                     u4301 3588  
                   u5030 2FA4                     u4070 3A36                     u4150 3362  
                   u3270 1E48                     u3190 1D76                     u4230 327C  
                   u3350 3480                     u3510 29B4                     u3430 3D82  
                   u4310 36EA                     u5110 120C                     u5031 2FA0  
                   u4071 3A32                     u4151 335E                     u3271 1E44  
                   u3191 1D72                     u4231 3278                     u4215 3230  
                   u3351 347C                     u3335 3430                     u3511 29B0  
                   u3407 3DEE                     u4311 36E6                     u5111 1208  
                   u4080 3A54                     u3600 2322                     u4160 3380  
                   u3280 1E64                     u4240 32A4                     u3360 34AA  
                   u3520 2A08                     u3440 3D98                     u4400 06BE  
                   u5040 2FF4                     u4320 3714                     u5200 1446  
                   u5120 12DA                     u4081 3A50                     u3601 231E  
                   u4161 337C                     u3281 1E60                     u4241 32A0  
                   u3361 34A6                     u3505 298E                     u3441 3D94  
                   u4401 06BA                     u5041 2FF0                     u4321 3710  
                   u5201 1442                     u5121 12D6                     u3290 3876  
                   u4090 3A6A                     u3610 2334                     u4170 33A0  
                   u4250 32C4                     u3530 2A24                     u3450 28B8  
                   u4410 06D0                     u5050 302E                     u4330 3742  
                   u5210 14EE                     u5130 12E8                     u3291 3872  
                   u4091 3A66                     u3611 2330                     u4171 339C  
                   u4251 32C0                     u3531 2A20                     u4411 06CC  
                   u5107 30C0                     u4331 373E                     u5211 14E8  
                   u5131 12E4                     u4340 3ED2                     u2820 37AE  
                   u3700 24DE                     u3620 2344                     u4180 33F0  
                   u2900 19D2                     u4260 32D4                     u3380 34E4  
                   u3540 2A60                     u3460 28E6                     u4500 08B8  
                   u4420 0718                     u5060 303E                     u5300 1748  
                   u5220 14F0                     u5140 130E                     u4341 3ECE  
                   u2821 37AA                     u3701 24DA                     u3621 2340  
                   u4181 33EC                     u2901 19CE                     u4261 32D0  
                   u3381 34DE                     u3541 2A5C                     u3525 29FE  
                   u3461 28E2                     u4501 08B4                     u4421 0714  
                   u5061 303A                     u5141 130A                     u3550 4036  
                   u4350 3F00                     u2830 37C0                     u3710 24FE  
                   u3630 2384                     u4190 3FE4                     u2910 19E4  
                   u3390 34E6                     u3470 2908                     u4510 094C  
                   u4430 0746                     u5070 305A                     u5310 1760  
                   u5230 1508                     u5150 1352                     u3551 4030  
                   u4351 3EFC                     u2831 37BC                     u3711 24FA  
                   u3631 2380                     u4191 3FE0                     u2911 19E0  
                   u3375 34BC                     u3471 2904                     u3455 28AE  
                   u4511 0948                     u4431 0740                     u5071 3056  
                   u4271 34FE                     u5311 175C                     u5231 1504  
                   u5151 134E                     u4360 40D2                     u5400 3BAC  
                   u3560 4038                     u2840 37E8                     u3720 2510  
                   u3640 23C4                     u3800 1E92                     u2920 19F4  
                   u4600 0ACC                     u4520 09BE                     u4440 0748  
                   u5080 306C                     u4280 3522                     u5320 17FC  
                   u5240 153A                     u5160 13CE                     u4361 40CE  
                   u2841 37E4                     u3721 250C                     u3641 23C0  
                   u3801 1E8E                     u2921 19F0                     u4601 0AC8  
                   u4521 09BA                     u5081 3068                     u5057 3024  
                   u4281 351E                     u5321 17F8                     u5241 1536  
                   u5161 13C8                     u5410 3BD8                     u2850 381E  
                   u4370 3E20                     u3730 253E                     u3650 243A  
                   u3570 22BC                     u3810 1EA4                     u2930 1A36  
                   u3490 2974                     u4610 0ADE                     u4530 09E4  
                   u4450 0760                     u5090 30AA                     u4290 354C  
                   u5330 18B6                     u5250 157C                     u5170 13D0  
                   u2851 381A                     u4371 3E1C                     u3731 253A  
                   u3651 2436                     u3571 22B8                     u3811 1EA0  
                   u2931 1A32                     u3491 2970                     u4611 0ADA  
                   u4531 09E0                     u4451 075C                     u5091 30A6  
                   u4291 3548                     u5331 18B2                     u5251 1578  
                   u5500 31CE                     u5420 3BE8                     u2860 3F94  
                   u3740 2554                     u3660 245C                     u3580 22CE  
                   u3900 2150                     u3820 1EB4                     u2940 1A4C  
                   u4700 0DA8                     u4620 0AEC                     u4540 09F6  
                   u4460 07EC                     u4380 0660                     u5340 1938  
                   u5260 15D2                     u5180 13E8                     u5501 31CA  
                   u5421 3BE4                     u2861 3F90                     u3741 2550  
                   u3661 2458                     u3581 22CA                     u3901 214C  
                   u3821 1EB0                     u2941 1A48                     u3485 291C  
                   u4701 0DA4                     u4621 0AE8                     u4541 09F2  
                   u4461 07E8                     u4381 065C                     u5341 1934  
                   u5261 15CE                     u5181 13E4                     u5430 3CA2  
                   u5510 2C98                     u2870 4066                     u3750 2568  
                   u3670 2486                     u3590 22DE                     u3910 2162  
                   u3830 1EF4                     u2950 1A5E                     u3486 2926  
                   u4710 0E4C                     u4630 0B02                     u4550 0A18  
                   u4470 081A                     u4390 06B0                     u5270 1632  
                   u5190 140C                     u5431 3C9E                     u5511 2C94  
                   u5407 3BA2                     u2871 4062                     u3751 2564  
                   u3671 2482                     u3591 22DA                     u3911 215E  
                   u3831 1EF0                     u2951 1A5A                     u3487 2936  
                   u4711 0E48                     u4631 0AFE                     u4551 0A14  
                   u4471 0814                     u4391 06AC                     u5095 309A  
                   u5271 162E                     u5191 1408                     u5440 3CDC  
                   u5600 2E26                     u5520 2CA6                     u3760 2582  
                   u3680 24AA                     u3920 2190                     u3840 1F06  
                   u2960 1A6E                     u2880 3FC6                     u4800 0FFE  
                   u4720 0E5E                     u4640 0B10                     u4560 0A3E  
                   u4480 081C                     u5280 16E0                     u5360 3D46  
                   u5441 3CD8                     u5601 2E22                     u5521 2CA2  
                   u5417 3BCE                     u3761 257E                     u3681 24A6  
                   u3921 218C                     u3841 1F02                     u2961 1A6A  
                   u2881 3FC0                     u4801 0FFA                     u4721 0E5A  
                   u4641 0B0C                     u4561 0A3A                     u5097 3090  
                   u5281 16DC                     u5361 3D42                     u5450 30F6  
                   u5530 2D02                     u5370 3C34                     u3770 25CA  
                   u3690 24C0                     u3930 21A6                     u3850 1F16  
                   u2970 1AAA                     u2890 3FC8                     u4810 100C  
                   u4730 0E70                     u4650 0B3A                     u4570 0A54  
                   u4490 0834                     u5290 1746                     u5610 26A6  
                   u5451 30F2                     u5531 2CFE                     u5355 40E6  
                   u5371 3C30                     u3771 25C6                     u3691 24BC  
                   u3931 21A2                     u3851 1F12                     u2971 1AA6  
                   u4811 1008                     u4731 0E6C                     u4651 0B36  
                   u4571 0A50                     u4491 0830                     u5291 1740  
                   u5611 26A2                     u5460 3118                     u5540 2D58  
                   u5356 40E8                     u5380 3B5C                     u3780 25FA  
                   u3940 21BA                     u3860 1F4C                     u2980 1AB8  
                   u4820 1042                     u4740 0E7E                     u4660 0C82  
                   u4580 0A70                     u4900 2A92                     u5620 2780  
                   u5461 3114                     u5541 2D54                     u5381 3B58  
                   u3781 25F6                     u3941 21B6                     u3861 1F48  
                   u2981 1AB4                     u4821 103E                     u4741 0E7A  
                   u4661 0C7E                     u4581 0A6C                     u4901 2A8E  
                   u5621 277C                     u5470 3152                     u5550 2DA2  
                   u5390 3B78                     u3790 2628                     u3950 21D4  
                   u3870 1F5C                     u2990 1B26                     u4830 1070  
                   u4750 0E98                     u4670 0CE8                     u4590 0AA6  
                   u4910 2AAE                     u5471 314E                     u5551 2D9E  
                   u5391 3B74                     u3791 2624                     u3951 21D0  
                   u3871 1F58                     u2991 1B22                     u4831 106C  
                   u4751 0E94                     u4671 0CE4                     u4591 0AA2  
                   u4911 2AAA                     u5480 3174                     u5560 2DC0  
                   u3960 221C                     u3880 20D6                     u4840 10F4  
                   u4760 0EA6                     u4680 0D30                     u4920 2BFA  
                   u5481 3170                     u5561 2DBC                     u3961 2218  
                   u4841 10F0                     u4761 0EA2                     u4681 0D2C  
                   u4921 2BF6                     u5490 319C                     u5570 2DD0  
                   u3970 224A                     u3890 2130                     u4850 110E  
                   u4770 0EFE                     u4690 0D40                     u4930 2C18  
                   u5491 3198                     u5571 2DCC                     u5707 3C5C  
                   u3971 2246                     u3891 212C                     u4851 110A  
                   u4771 0EFA                     u4691 0D3C                     u4931 2C14  
                   u5580 2DDE                     u3980 2284                     u4860 1126  
                   u4780 0FD0                     u4940 2C32                     u5581 2DDA  
                   u5717 3C6E                     u3981 2280                     u3885 20CC  
                   u4861 1122                     u4781 0FCC                     u4941 2C2E  
                   u5637 267C                     u5590 2E18                     u3990 393E  
                   u4870 1184                     u4790 0FEC                     u4950 2C4C  
                   u5591 2E14                     u5727 3C7C                     u3991 393A  
                   u4871 117E                     u4791 0FE8                     u4951 2C48  
                   u5647 2690                     u4880 1186                     u4960 2C5C  
                   u5737 40EA                     u4961 2C58                     u5657 276A  
                   u4970 2E72                     u4890 119C                     u5747 3658  
                   u5667 3C00                     u4971 2E6E                     u4891 1198  
                   u4980 2EA8                     u5677 3C1A                     u4981 2EA4  
                   u4990 2EC4                     u5687 3C3C                     u4991 2EC0  
                   u5697 3C4A             __CFG_PWRT$ON 000000                     _dbuf 0100  
                   _atoi 2E3A                     _ctoa 3E0C                     _main 263C  
                   _prec 00F0                     _temp 00E4                     _nout 00EC  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _utoa 2A82                     _volt 00E8            ___fpclassifyf 33FA  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0039             _tolower$1012 000D  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_pad 0017  
          ___fltol@sign1 0009          __end_of___aldiv 31F0                    ?_atoi 0008  
                  ?_ctoa 001C          __end_of___fladd 1E78                    ?_main 0001  
        __end_of___fldiv 263C          __end_of___awdiv 39F0          __end_of___flneg 4006  
                  STR_10 062C                    STR_20 0633                    STR_13 0630  
                  STR_15 0630                    STR_18 0633          __end_of___awmod 3AA0  
        __end_of___flmul 22A2          __end_of___flsub 3F52          __end_of___fltol 32F6  
                  ?_utoa 001C          __end_of___lodiv 35E8          ___awdiv@divisor 0003  
        __end_of___lomod 379C          ___awdiv@counter 0005             vfpfcnvrt@fmt 0063  
           vfpfcnvrt@llu 00C0                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_cmd 36CC          __end_of_lcd_ini 3C84            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 00F2                    _fputc 379C                    _fputs 3F52  
        __end_of_isdigit 403E                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 00EE                    ctoa@c 001E  
                  _putch 40FA                    ctoa@w 001F          __end_of_isspace 3F0C  
         __CFG_BOREN$OFF 000000          __end_of_set_bit 40DC          __end_of_isupper 3FCE  
                  tablat 000FF5                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8          __end_of_sprintf 3EBA           ?___fpclassifyf 0001  
        __end_of_tolower 3DB0          __end_of_strncmp 30E4         ___lodiv@dividend 0001  
        __initialization 409A             __end_of_atoi 2FCA             __end_of_ctoa 3E68  
           __end_of_main 2870             __end_of_utoa 2C86                   ??_atoi 000A  
                 ??_ctoa 001F                   ??_main 00DA                   ??_utoa 0026  
          __activetblptr 000002         ___lodiv@quotient 0011                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001            vfpfcnvrt@done 00B8  
       __end_of___xxtofl 2E3A           __CFG_XINST$OFF 000000             vfprintf@cfmt 0073  
                 ___flge 32F6                   ___fleq 3AA0                   ___lmul 3C84  
              ??___aldiv 0015                ??___fladd 0009                   ___wmul 4074  
              ??___fldiv 0030                ??___awdiv 0005                ??___flneg 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___flmul 0017  
              ??___flsub 0030                ??___fltol 0005                ??___lodiv 0011  
              ??___lomod 0011                   _efgtoa 0638                   _floorf 2870  
       ??_lcd_escreve_bf 000A                   clear_0 40A0                   clear_1 40AC  
       ___awdiv@quotient 0007          ___awmod@divisor 0003         ??_lcd_envia_byte 0006  
        ___awmod@counter 0005                   pad@buf 0013                   ctoa@fp 001C  
              ??_lcd_cmd 0003                ??_lcd_ini 0005                   _strcpy 3DB0  
                 _strlen 403E                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                ??_set_bit 0002  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3D50  
                 utoa@fp 001C                ??_sprintf 007F                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 0028               ___flge@ff2 002C  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0080  __end_of__initialization 40B2          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 3866            __end_of_fputs 3F96  
          __end_of_putch 40FC                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00DC               __pbssBANK1 0100  
             _efgtoa$381 0084               _efgtoa$390 008A               _efgtoa$382 0086  
             _efgtoa$391 008C               _efgtoa$392 008E               _efgtoa$386 0088  
                ?___flge 0028                  ?___fleq 0001                  ?___lmul 0001  
                ?___wmul 0001                  ?_efgtoa 0055                  ?_floorf 0041  
         ___lmul@product 0009                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 07D0         ___lomod@dividend 0001  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 30E4  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 19B8  
                ___fldiv 22A2                  ___awdiv 392C                  ___flneg 3FCE  
        __size_of___lmul 006A                  ___awmod 39F0                  ___flmul 1E78  
                ___flsub 3F0C                  ___fltol 31F0          __size_of___wmul 0026  
                ___lodiv 34F8                  ___lomod 36CC                ?_vfprintf 006D  
            set_bit@comp 0001             __psmallconst 0600          __size_of_efgtoa 0BB0  
        __size_of_floorf 0212                  __pcinit 409A                  __ramtop 0600  
                __ptext0 263C                  __ptext1 3E68                  __ptext2 3CEE  
                __ptext3 11E8                  __ptext4 2A82                  __ptext5 36CC  
                __ptext6 34F8                  __ptext7 2FCA                  __ptext8 0638  
                __ptext9 3D50                  _lcd_cmd 35E8                  _lcd_ini 3BEA  
        __size_of_strcpy 005C          __size_of_strlen 0036             __size_of_pad 00C6  
                _isdigit 4006               ??___xxtofl 0005         ___awmod@dividend 0001  
       ___aldiv@dividend 000D                  _isspace 3EBA                  _set_bit 40BC  
                _isupper 3F96                  efgtoa@c 005B                  efgtoa@d 0098  
                efgtoa@e 00B0                  efgtoa@f 0057                  efgtoa@g 00AC  
                efgtoa@h 00A2                  efgtoa@i 00AA                  efgtoa@l 00A6  
                efgtoa@m 0094                  efgtoa@n 00B2                  efgtoa@p 009C  
                efgtoa@t 0090                  efgtoa@u 00B4                  efgtoa@w 009F  
                atoi@neg 000E                  _sprintf 3E68                  _tolower 3D50  
                _strncmp 2FCA     end_of_initialization 40B2                  floorf@e 004F  
                floorf@m 004B                  floorf@u 0051                  floorf@x 0041  
     lcd_envia_byte@dado 0005                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 19B8               efgtoa@mode 00A1  
             efgtoa@sign 009A         ___aldiv@quotient 0017                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0073                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 0010  
          ___xxtofl@sign 0009                _TRISEbits 000F96               lcd_cmd@cmd 0004  
            ___fldiv@grs 003B              ___fldiv@rem 0034              ___flmul@grs 001C  
         __end_of___flge 33FA           __end_of___fleq 3B4A           __end_of___lmul 3CEE  
            vfpfcnvrt@ap 0065              vfpfcnvrt@ct 00CC              vfpfcnvrt@fp 0061  
         __end_of___wmul 409A           __end_of_efgtoa 11E8           __end_of_floorf 2A82  
             floorf@F524 00DC           __end_of_strcpy 3E0C           __end_of_strlen 4074  
    start_initialization 409A          ___lodiv@divisor 0009          ___lodiv@counter 0019  
            __end_of_pad 392C    __end_of___fpclassifyf 34F8              vfprintf@fmt 006F  
               ??___flge 0030                 ??___fleq 0009                 ??___lmul 0009  
               ??___wmul 0005                 ??_efgtoa 005C                 ??_floorf 0045  
       __CFG_LPT1OSC$OFF 000000                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 002C  
              ___fldiv@b 0028                ___flmul@a 0013                ___flmul@b 000F  
              ___flsub@a 002C                ___flsub@b 0028            __pcstackBANK0 0080  
__size_of_lcd_escreve_bf 00A0        __size_of___xxtofl 01B4  __size_of_lcd_envia_byte 001E  
      __CFG_CCP2MX$PORTC 000000                 ?___aldiv 000D                 ?___fladd 0001  
      lcd_escreve_bf@end 000A        lcd_escreve_bf@col 0007                 ?___fldiv 0028  
               ?___awdiv 0001        lcd_escreve_bf@lin 000B                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0028  
      lcd_escreve_bf@str 0008                 ?___fltol 0001                 ?___lodiv 0001  
               ?___lomod 0001                _bufferLCD 0150                 ?_lcd_cmd 0001  
      __size_of_vfprintf 0062                 ?_lcd_ini 0001          ___lomod@divisor 0009  
            __smallconst 0600          ___lomod@counter 0011                 ?_isdigit 0001  
               ?_isspace 0001                 ?_set_bit 0001                 ?_isupper 0001  
             set_bit@cmd 0002                 ?_sprintf 0075                 ?_tolower 0007  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 0001  
         __size_of_putch 0002          ___aldiv@divisor 0011          ___aldiv@counter 0015  
         ___wmul@product 0005                 _LATDbits 000F8C                 _LATEbits 000F8D  
       __CFG_WDTPS$32768 000000                _vfpfcnvrt 11E8               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001               vfpfcnvrt@c 00CF               vfpfcnvrt@f 00C8  
      ___lmul@multiplier 0001                 __Hrparam 0000               vfprintf@ap 0071  
               __Lrparam 0000               vfprintf@fp 006D         __size_of___aldiv 010C  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106         __size_of___lodiv 00F0  
       __size_of___lomod 00D0               ?_vfpfcnvrt 0061       ___fpclassifyf@F463 00E0  
       __size_of_lcd_cmd 00E4         __size_of_lcd_ini 009A               sprintf@fmt 0077  
               ___xxtofl 2C86                 _atoi$896 0010                 _atoi$897 0014  
               _atoi$898 0012         __size_of_isdigit 0038           _lcd_escreve_bf 3B4A  
       __size_of_isspace 0052                 __ptext10 3F96                 __ptext11 3DB0  
               __ptext20 3AA0                 __ptext12 2870                 __ptext21 22A2  
               __ptext13 33FA                 __ptext30 2E3A                 __ptext22 39F0  
               __ptext14 31F0                 __ptext31 3EBA                 __ptext23 392C  
               __ptext15 3F0C                 __ptext40 3C84                 __ptext32 4006  
               __ptext24 3E0C                 __ptext16 19B8                 __ptext41 30E4  
               __ptext33 4074                 __ptext25 3866                 __ptext17 3FCE  
               __ptext34 3BEA                 __ptext26 403E                 __ptext18 1E78  
               __ptext35 3B4A                 __ptext27 3F52                 __ptext19 32F6  
               __ptext36 40DC                 __ptext28 379C                 __ptext37 35E8  
               __ptext29 40FA                 __ptext38 40BC                 __ptext39 2C86  
       __size_of_set_bit 0020         __size_of_isupper 0038           _lcd_envia_byte 40DC  
       __size_of_sprintf 0052         __size_of_tolower 0060               strcpy@dest 0001  
       __size_of_strncmp 011A            __size_of_atoi 0190            __size_of_ctoa 005C  
          __size_of_main 0234            __size_of_utoa 0204                 efgtoa@fp 0055  
               efgtoa@ne 0096                 efgtoa@pp 0092                 efgtoa@ou 0080  
               lcd_ini@i 0006                 _vfprintf 3CEE              _isspace$927 0007  
 __end_of_lcd_escreve_bf 3BEA   __end_of_lcd_envia_byte 40FA      lcd_envia_byte@nivel 0006  
               isdigit@c 0001                sprintf@ap 00D2                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 009E              ??_vfpfcnvrt 0067  
          _vfpfcnvrt$413 00BA            _vfpfcnvrt$414 00BC            _vfpfcnvrt$419 00BE  
               sprintf@f 00D4                 tolower@c 0007                 sprintf@s 0075  
 __size_of___fpclassifyf 00FE          ?_lcd_escreve_bf 0007          ?_lcd_envia_byte 0005  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
           ___aldiv@sign 0016            ___fladd@signs 000D             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
