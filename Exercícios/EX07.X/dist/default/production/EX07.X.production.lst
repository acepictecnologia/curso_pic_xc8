

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 29 14:56:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _LATEbits	set	3981
    49  0000                     _LATD	set	3980
    50  0000                     _TRISEbits	set	3990
    51  0000                     _TRISD	set	3989
    52  0000                     _ADCON1	set	4033
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  007E68                     __pcinit:
    58                           	opt callstack 0
    59  007E68                     start_initialization:
    60                           	opt callstack 0
    61  007E68                     __initialization:
    62                           	opt callstack 0
    63  007E68                     end_of_initialization:
    64                           	opt callstack 0
    65  007E68                     __end_of__initialization:
    66                           	opt callstack 0
    67  007E68  0100               	movlb	0
    68  007E6A  EF8D  F03F         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt callstack 0
    73  000001                     lcd_cmd@cmd:
    74                           	opt callstack 0
    75                           
    76                           ; 1 bytes @ 0x0
    77  000001                     	ds	1
    78  000002                     ??_lcd_ini:
    79  000002                     lcd_envia_byte@dado:
    80                           	opt callstack 0
    81                           
    82                           ; 1 bytes @ 0x1
    83  000002                     	ds	1
    84  000003                     lcd_ini@i:
    85                           	opt callstack 0
    86  000003                     lcd_envia_byte@nivel:
    87                           	opt callstack 0
    88                           
    89                           ; 1 bytes @ 0x2
    90  000003                     	ds	1
    91  000004                     
    92                           ; 1 bytes @ 0x3
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 10 in file "EX07.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;		None
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   112 ;;      Params:         0       0       0       0       0       0       0
   113 ;;      Locals:         0       0       0       0       0       0       0
   114 ;;      Temps:          0       0       0       0       0       0       0
   115 ;;      Totals:         0       0       0       0       0       0       0
   116 ;;Total ram usage:        0 bytes
   117 ;; Hardware stack levels required when called:    2
   118 ;; This function calls:
   119 ;;		_lcd_envia_byte
   120 ;;		_lcd_ini
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  007F1A                     __ptext0:
   128                           	opt callstack 0
   129  007F1A                     _main:
   130                           	opt callstack 29
   131                           
   132                           ;EX07.c: 12:     ADCON1 = 0x0F;
   133                           
   134                           ;incstack = 0
   135  007F1A  0E0F               	movlw	15
   136  007F1C  6EC1               	movwf	4033,c	;volatile
   137                           
   138                           ;EX07.c: 14:     lcd_ini();
   139  007F1E  EC4C  F03F         	call	_lcd_ini	;wreg free
   140                           
   141                           ;EX07.c: 18:     lcd_envia_byte(0, 0x83);
   142  007F22  0E83               	movlw	131
   143  007F24  6E02               	movwf	lcd_envia_byte@dado,c
   144  007F26  0E00               	movlw	0
   145  007F28  EC3D  F03F         	call	_lcd_envia_byte
   146                           
   147                           ;EX07.c: 20:     lcd_envia_byte(1, 'P');
   148  007F2C  0E50               	movlw	80
   149  007F2E  6E02               	movwf	lcd_envia_byte@dado,c
   150  007F30  0E01               	movlw	1
   151  007F32  EC3D  F03F         	call	_lcd_envia_byte
   152                           
   153                           ;EX07.c: 21:     lcd_envia_byte(1, 'I');
   154  007F36  0E49               	movlw	73
   155  007F38  6E02               	movwf	lcd_envia_byte@dado,c
   156  007F3A  0E01               	movlw	1
   157  007F3C  EC3D  F03F         	call	_lcd_envia_byte
   158                           
   159                           ;EX07.c: 22:     lcd_envia_byte(1, 'C');
   160  007F40  0E43               	movlw	67
   161  007F42  6E02               	movwf	lcd_envia_byte@dado,c
   162  007F44  0E01               	movlw	1
   163  007F46  EC3D  F03F         	call	_lcd_envia_byte
   164                           
   165                           ;EX07.c: 23:     lcd_envia_byte(1, '1');
   166  007F4A  0E31               	movlw	49
   167  007F4C  6E02               	movwf	lcd_envia_byte@dado,c
   168  007F4E  0E01               	movlw	1
   169  007F50  EC3D  F03F         	call	_lcd_envia_byte
   170                           
   171                           ;EX07.c: 24:     lcd_envia_byte(1, '8');
   172  007F54  0E38               	movlw	56
   173  007F56  6E02               	movwf	lcd_envia_byte@dado,c
   174  007F58  0E01               	movlw	1
   175  007F5A  EC3D  F03F         	call	_lcd_envia_byte
   176                           
   177                           ;EX07.c: 25:     lcd_envia_byte(1, 'F');
   178  007F5E  0E46               	movlw	70
   179  007F60  6E02               	movwf	lcd_envia_byte@dado,c
   180  007F62  0E01               	movlw	1
   181  007F64  EC3D  F03F         	call	_lcd_envia_byte
   182                           
   183                           ;EX07.c: 26:     lcd_envia_byte(1, '4');
   184  007F68  0E34               	movlw	52
   185  007F6A  6E02               	movwf	lcd_envia_byte@dado,c
   186  007F6C  0E01               	movlw	1
   187  007F6E  EC3D  F03F         	call	_lcd_envia_byte
   188                           
   189                           ;EX07.c: 27:     lcd_envia_byte(1, '5');
   190  007F72  0E35               	movlw	53
   191  007F74  6E02               	movwf	lcd_envia_byte@dado,c
   192  007F76  0E01               	movlw	1
   193  007F78  EC3D  F03F         	call	_lcd_envia_byte
   194                           
   195                           ;EX07.c: 28:     lcd_envia_byte(1, '2');
   196  007F7C  0E32               	movlw	50
   197  007F7E  6E02               	movwf	lcd_envia_byte@dado,c
   198  007F80  0E01               	movlw	1
   199  007F82  EC3D  F03F         	call	_lcd_envia_byte
   200                           
   201                           ;EX07.c: 29:     lcd_envia_byte(1, '0');
   202  007F86  0E30               	movlw	48
   203  007F88  6E02               	movwf	lcd_envia_byte@dado,c
   204  007F8A  0E01               	movlw	1
   205  007F8C  EC3D  F03F         	call	_lcd_envia_byte
   206                           
   207                           ;EX07.c: 32:     lcd_envia_byte(0, 0xC3);
   208  007F90  0EC3               	movlw	195
   209  007F92  6E02               	movwf	lcd_envia_byte@dado,c
   210  007F94  0E00               	movlw	0
   211  007F96  EC3D  F03F         	call	_lcd_envia_byte
   212                           
   213                           ;EX07.c: 36:     lcd_envia_byte(1, 'L');
   214  007F9A  0E4C               	movlw	76
   215  007F9C  6E02               	movwf	lcd_envia_byte@dado,c
   216  007F9E  0E01               	movlw	1
   217  007FA0  EC3D  F03F         	call	_lcd_envia_byte
   218                           
   219                           ;EX07.c: 37:     lcd_envia_byte(1, 'C');
   220  007FA4  0E43               	movlw	67
   221  007FA6  6E02               	movwf	lcd_envia_byte@dado,c
   222  007FA8  0E01               	movlw	1
   223  007FAA  EC3D  F03F         	call	_lcd_envia_byte
   224                           
   225                           ;EX07.c: 38:     lcd_envia_byte(1, 'D');
   226  007FAE  0E44               	movlw	68
   227  007FB0  6E02               	movwf	lcd_envia_byte@dado,c
   228  007FB2  0E01               	movlw	1
   229  007FB4  EC3D  F03F         	call	_lcd_envia_byte
   230                           
   231                           ;EX07.c: 39:     lcd_envia_byte(1, ' ');
   232  007FB8  0E20               	movlw	32
   233  007FBA  6E02               	movwf	lcd_envia_byte@dado,c
   234  007FBC  0E01               	movlw	1
   235  007FBE  EC3D  F03F         	call	_lcd_envia_byte
   236                           
   237                           ;EX07.c: 40:     lcd_envia_byte(1, '8');
   238  007FC2  0E38               	movlw	56
   239  007FC4  6E02               	movwf	lcd_envia_byte@dado,c
   240  007FC6  0E01               	movlw	1
   241  007FC8  EC3D  F03F         	call	_lcd_envia_byte
   242                           
   243                           ;EX07.c: 41:     lcd_envia_byte(1, ' ');
   244  007FCC  0E20               	movlw	32
   245  007FCE  6E02               	movwf	lcd_envia_byte@dado,c
   246  007FD0  0E01               	movlw	1
   247  007FD2  EC3D  F03F         	call	_lcd_envia_byte
   248                           
   249                           ;EX07.c: 42:     lcd_envia_byte(1, 'B');
   250  007FD6  0E42               	movlw	66
   251  007FD8  6E02               	movwf	lcd_envia_byte@dado,c
   252  007FDA  0E01               	movlw	1
   253  007FDC  EC3D  F03F         	call	_lcd_envia_byte
   254                           
   255                           ;EX07.c: 43:     lcd_envia_byte(1, 'I');
   256  007FE0  0E49               	movlw	73
   257  007FE2  6E02               	movwf	lcd_envia_byte@dado,c
   258  007FE4  0E01               	movlw	1
   259  007FE6  EC3D  F03F         	call	_lcd_envia_byte
   260                           
   261                           ;EX07.c: 44:     lcd_envia_byte(1, 'T');
   262  007FEA  0E54               	movlw	84
   263  007FEC  6E02               	movwf	lcd_envia_byte@dado,c
   264  007FEE  0E01               	movlw	1
   265  007FF0  EC3D  F03F         	call	_lcd_envia_byte
   266                           
   267                           ;EX07.c: 45:     lcd_envia_byte(1, 'S');
   268  007FF4  0E53               	movlw	83
   269  007FF6  6E02               	movwf	lcd_envia_byte@dado,c
   270  007FF8  0E01               	movlw	1
   271  007FFA  EC3D  F03F         	call	_lcd_envia_byte
   272  007FFE                     l23:
   273  007FFE  D7FF               	goto	l23
   274  008000                     __end_of_main:
   275                           	opt callstack 0
   276                           
   277 ;; *************** function _lcd_ini *****************
   278 ;; Defined at:
   279 ;;		line 50 in file "EX07.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  i               1    2[COMRAM] unsigned char 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         1       0       0       0       0       0       0
   295 ;;      Temps:          1       0       0       0       0       0       0
   296 ;;      Totals:         2       0       0       0       0       0       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; Hardware stack levels required when called:    1
   300 ;; This function calls:
   301 ;;		_lcd_cmd
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text1
   308  007E98                     __ptext1:
   309                           	opt callstack 0
   310  007E98                     _lcd_ini:
   311                           	opt callstack 29
   312                           
   313                           ;EX07.c: 52:     char i;;EX07.c: 54:    TRISD = 0b00000000;
   314                           
   315                           ;incstack = 0
   316  007E98  0E00               	movlw	0
   317  007E9A  6E95               	movwf	3989,c	;volatile
   318                           
   319                           ;EX07.c: 55:    TRISEbits.TRISE0 = 0;
   320  007E9C  9096               	bcf	3990,0,c	;volatile
   321                           
   322                           ;EX07.c: 56:    TRISEbits.TRISE1 = 0;
   323  007E9E  9296               	bcf	3990,1,c	;volatile
   324                           
   325                           ;EX07.c: 58:    LATD = 0b00000000;
   326  007EA0  0E00               	movlw	0
   327  007EA2  6E8C               	movwf	3980,c	;volatile
   328                           
   329                           ;EX07.c: 59:    LATEbits.LATE0 = 0;
   330  007EA4  908D               	bcf	3981,0,c	;volatile
   331                           
   332                           ;EX07.c: 60:    LATEbits.LATE1 = 0;
   333  007EA6  928D               	bcf	3981,1,c	;volatile
   334                           
   335                           ;EX07.c: 62:    _delay((unsigned long)((15)*(8000000/4000.0)));
   336  007EA8  0E27               	movlw	39
   337  007EAA  6E02               	movwf	??_lcd_ini& (0+255),c
   338  007EAC  0EF5               	movlw	245
   339  007EAE                     u47:
   340  007EAE  2EE8               	decfsz	wreg,f,c
   341  007EB0  D7FE               	bra	u47
   342  007EB2  2E02               	decfsz	??_lcd_ini& (0+255),f,c
   343  007EB4  D7FC               	bra	u47
   344  007EB6  F000               	nop	
   345                           
   346                           ;EX07.c: 64:    for(i = 0; i < 3; i++)
   347  007EB8  0E00               	movlw	0
   348  007EBA  6E03               	movwf	lcd_ini@i,c
   349  007EBC                     l737:
   350                           
   351                           ;EX07.c: 65:    {;EX07.c: 66:        lcd_cmd(0x30);
   352  007EBC  0E30               	movlw	48
   353  007EBE  EC37  F03F         	call	_lcd_cmd
   354                           
   355                           ;EX07.c: 67:        _delay((unsigned long)((5)*(8000000/4000.0)));
   356  007EC2  0E0D               	movlw	13
   357  007EC4  6E02               	movwf	??_lcd_ini& (0+255),c
   358  007EC6  0EFC               	movlw	252
   359  007EC8                     u57:
   360  007EC8  2EE8               	decfsz	wreg,f,c
   361  007ECA  D7FE               	bra	u57
   362  007ECC  2E02               	decfsz	??_lcd_ini& (0+255),f,c
   363  007ECE  D7FC               	bra	u57
   364                           
   365                           ;EX07.c: 68:    }
   366  007ED0  2A03               	incf	lcd_ini@i,f,c
   367  007ED2  0E02               	movlw	2
   368  007ED4  6403               	cpfsgt	lcd_ini@i,c
   369  007ED6  D7F2               	goto	l737
   370                           
   371                           ;EX07.c: 69:    lcd_cmd(0x38);
   372  007ED8  0E38               	movlw	56
   373  007EDA  EC37  F03F         	call	_lcd_cmd
   374                           
   375                           ;EX07.c: 70:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   376  007EDE  0E1A               	movlw	26
   377  007EE0                     u67:
   378  007EE0  2EE8               	decfsz	wreg,f,c
   379  007EE2  D7FE               	bra	u67
   380  007EE4  D000               	nop2	
   381                           
   382                           ;EX07.c: 71:    lcd_cmd(0x01);
   383  007EE6  0E01               	movlw	1
   384  007EE8  EC37  F03F         	call	_lcd_cmd
   385                           
   386                           ;EX07.c: 72:    _delay((unsigned long)((2)*(8000000/4000.0)));
   387  007EEC  0E06               	movlw	6
   388  007EEE  6E02               	movwf	??_lcd_ini& (0+255),c
   389  007EF0  0E30               	movlw	48
   390  007EF2                     u77:
   391  007EF2  2EE8               	decfsz	wreg,f,c
   392  007EF4  D7FE               	bra	u77
   393  007EF6  2E02               	decfsz	??_lcd_ini& (0+255),f,c
   394  007EF8  D7FC               	bra	u77
   395  007EFA  D000               	nop2	
   396                           
   397                           ;EX07.c: 73:    lcd_cmd(0x0C);
   398  007EFC  0E0C               	movlw	12
   399  007EFE  EC37  F03F         	call	_lcd_cmd
   400                           
   401                           ;EX07.c: 74:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   402  007F02  0E1A               	movlw	26
   403  007F04                     u87:
   404  007F04  2EE8               	decfsz	wreg,f,c
   405  007F06  D7FE               	bra	u87
   406  007F08  D000               	nop2	
   407                           
   408                           ;EX07.c: 75:    lcd_cmd(0x06);
   409  007F0A  0E06               	movlw	6
   410  007F0C  EC37  F03F         	call	_lcd_cmd
   411                           
   412                           ;EX07.c: 76:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   413  007F10  0E1A               	movlw	26
   414  007F12                     u97:
   415  007F12  2EE8               	decfsz	wreg,f,c
   416  007F14  D7FE               	bra	u97
   417  007F16  D000               	nop2	
   418  007F18  0012               	return		;funcret
   419  007F1A                     __end_of_lcd_ini:
   420                           	opt callstack 0
   421                           
   422 ;; *************** function _lcd_envia_byte *****************
   423 ;; Defined at:
   424 ;;		line 86 in file "EX07.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  nivel           1    wreg     unsigned char 
   427 ;;  dado            1    1[COMRAM] unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  nivel           1    2[COMRAM] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   439 ;;      Params:         1       0       0       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0
   442 ;;      Totals:         2       0       0       0       0       0       0
   443 ;;Total ram usage:        2 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    1
   446 ;; This function calls:
   447 ;;		_lcd_cmd
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454  007E7A                     __ptext2:
   455                           	opt callstack 0
   456  007E7A                     _lcd_envia_byte:
   457                           	opt callstack 29
   458                           
   459                           ;incstack = 0
   460                           ;lcd_envia_byte@nivel stored from wreg
   461  007E7A  6E03               	movwf	lcd_envia_byte@nivel,c
   462                           
   463                           ;EX07.c: 86: void lcd_envia_byte(char nivel, char dado);EX07.c: 87: {;EX07.c: 88:     LA
      +                          TEbits.LATE0 = nivel;
   464  007E7C  B003               	btfsc	lcd_envia_byte@nivel,0,c
   465  007E7E  D002               	bra	u35
   466  007E80  908D               	bcf	3981,0,c	;volatile
   467  007E82  D001               	bra	u36
   468  007E84                     u35:
   469  007E84  808D               	bsf	3981,0,c	;volatile
   470  007E86                     u36:
   471                           
   472                           ;EX07.c: 89:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   473  007E86  0E42               	movlw	66
   474  007E88                     u107:
   475  007E88  2EE8               	decfsz	wreg,f,c
   476  007E8A  D7FE               	bra	u107
   477  007E8C  D000               	nop2	
   478                           
   479                           ;EX07.c: 90:     LATEbits.LATE1 = 0;
   480  007E8E  928D               	bcf	3981,1,c	;volatile
   481                           
   482                           ;EX07.c: 91:     lcd_cmd(dado);
   483  007E90  5002               	movf	lcd_envia_byte@dado,w,c
   484  007E92  EC37  F03F         	call	_lcd_cmd
   485  007E96  0012               	return		;funcret
   486  007E98                     __end_of_lcd_envia_byte:
   487                           	opt callstack 0
   488                           
   489 ;; *************** function _lcd_cmd *****************
   490 ;; Defined at:
   491 ;;		line 79 in file "EX07.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  cmd             1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  cmd             1    0[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         1       0       0       0       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_lcd_ini
   515 ;;		_lcd_envia_byte
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text3
   520  007E6E                     __ptext3:
   521                           	opt callstack 0
   522  007E6E                     _lcd_cmd:
   523                           	opt callstack 29
   524                           
   525                           ;incstack = 0
   526                           ;lcd_cmd@cmd stored from wreg
   527  007E6E  6E01               	movwf	lcd_cmd@cmd,c
   528                           
   529                           ;EX07.c: 79: void lcd_cmd(char cmd);EX07.c: 80: {;EX07.c: 81:     LATD = cmd;
   530  007E70  C001  FF8C         	movff	lcd_cmd@cmd,3980	;volatile
   531                           
   532                           ;EX07.c: 82:     LATEbits.LATE1 = 1;
   533  007E74  828D               	bsf	3981,1,c	;volatile
   534                           
   535                           ;EX07.c: 83:     LATEbits.LATE1 = 0;
   536  007E76  928D               	bcf	3981,1,c	;volatile
   537  007E78  0012               	return		;funcret
   538  007E7A                     __end_of_lcd_cmd:
   539                           	opt callstack 0
   540  0000                     
   541                           	psect	rparam
   542  0000                     tosu	equ	0xFFF
   543                           tosh	equ	0xFFE
   544                           tosl	equ	0xFFD
   545                           stkptr	equ	0xFFC
   546                           pclatu	equ	0xFFB
   547                           pclath	equ	0xFFA
   548                           pcl	equ	0xFF9
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           prodh	equ	0xFF4
   554                           prodl	equ	0xFF3
   555                           indf0	equ	0xFEF
   556                           postinc0	equ	0xFEE
   557                           postdec0	equ	0xFED
   558                           preinc0	equ	0xFEC
   559                           plusw0	equ	0xFEB
   560                           fsr0h	equ	0xFEA
   561                           fsr0l	equ	0xFE9
   562                           wreg	equ	0xFE8
   563                           indf1	equ	0xFE7
   564                           postinc1	equ	0xFE6
   565                           postdec1	equ	0xFE5
   566                           preinc1	equ	0xFE4
   567                           plusw1	equ	0xFE3
   568                           fsr1h	equ	0xFE2
   569                           fsr1l	equ	0xFE1
   570                           bsr	equ	0xFE0
   571                           indf2	equ	0xFDF
   572                           postinc2	equ	0xFDE
   573                           postdec2	equ	0xFDD
   574                           preinc2	equ	0xFDC
   575                           plusw2	equ	0xFDB
   576                           fsr2h	equ	0xFDA
   577                           fsr2l	equ	0xFD9
   578                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      3       3
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_envia_byte
    _main->_lcd_ini
    _lcd_ini->_lcd_cmd
    _lcd_envia_byte->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1776
                     _lcd_envia_byte
                            _lcd_ini
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0      45
                                              1 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_envia_byte                                       2     1      1    1731
                                              1 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_envia_byte
     _lcd_cmd
   _lcd_ini
     _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      3       3       1        2.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 29 14:56:01 2019

                     l23 7FFE                       u35 7E84                       u36 7E86  
                     u47 7EAE                       u57 7EC8                       u67 7EE0  
                     u77 7EF2                       u87 7F04                       u97 7F12  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l737 7EBC             __CFG_CPB$OFF 000000                      u107 7E88  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C             __CFG_PWRT$ON 000000  
                   _main 7F1A                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TRISD 000F95            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000          __end_of_lcd_cmd 7E7A          __end_of_lcd_ini 7F1A  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000          __initialization 7E68  
           __end_of_main 8000                   ??_main 0004            __activetblptr 000000  
                 _ADCON1 000FC1           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
       ??_lcd_envia_byte 0003                ??_lcd_cmd 0001                ??_lcd_ini 0002  
             __accesstop 0080  __end_of__initialization 7E68          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E68                  __ramtop 0600  
                __ptext0 7F1A                  __ptext1 7E98                  __ptext2 7E7A  
                __ptext3 7E6E                  _lcd_cmd 7E6E                  _lcd_ini 7E98  
   end_of_initialization 7E68       lcd_envia_byte@dado 0002                _TRISEbits 000F96  
             lcd_cmd@cmd 0001      start_initialization 7E68         __CFG_LPT1OSC$OFF 000000  
__size_of_lcd_envia_byte 001E        __CFG_CCP2MX$PORTC 000000                 ?_lcd_cmd 0001  
               ?_lcd_ini 0001                 _LATEbits 000F8D         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000         __size_of_lcd_cmd 000C  
       __size_of_lcd_ini 0082           _lcd_envia_byte 7E7A            __size_of_main 00E6  
               lcd_ini@i 0003   __end_of_lcd_envia_byte 7E98      lcd_envia_byte@nivel 0003  
        ?_lcd_envia_byte 0002  
