

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 07 18:37:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _RCREG	set	4014
    52  0000                     _TXREG	set	4013
    53  0000                     _SPBRG	set	4015
    54  0000                     _BAUDCTLbits	set	4024
    55  0000                     _RCSTAbits	set	4011
    56  0000                     _TXSTAbits	set	4012
    57  0000                     _PORTBbits	set	3969
    58  0000                     _TRISBbits	set	3987
    59  0000                     _ADCON1	set	4033
    60  0000                     _TRMT	set	32097
    61  0000                     _RCIF	set	31989
    62                           
    63                           	psect	smallconst
    64  000600                     __psmallconst:
    65                           	opt callstack 0
    66  000600  00                 	db	0
    67  000601                     STR_1:
    68  000601  4D                 	db	77	;'M'
    69  000602  69                 	db	105	;'i'
    70  000603  63                 	db	99	;'c'
    71  000604  72                 	db	114	;'r'
    72  000605  6F                 	db	111	;'o'
    73  000606  63                 	db	99	;'c'
    74  000607  6F                 	db	111	;'o'
    75  000608  6E                 	db	110	;'n'
    76  000609  74                 	db	116	;'t'
    77  00060A  72                 	db	114	;'r'
    78  00060B  6F                 	db	111	;'o'
    79  00060C  6C                 	db	108	;'l'
    80  00060D  61                 	db	97	;'a'
    81  00060E  64                 	db	100	;'d'
    82  00060F  6F                 	db	111	;'o'
    83  000610  72                 	db	114	;'r'
    84  000611  20                 	db	32
    85  000612  50                 	db	80	;'P'
    86  000613  49                 	db	73	;'I'
    87  000614  43                 	db	67	;'C'
    88  000615  31                 	db	49	;'1'
    89  000616  38                 	db	56	;'8'
    90  000617  46                 	db	70	;'F'
    91  000618  34                 	db	52	;'4'
    92  000619  35                 	db	53	;'5'
    93  00061A  32                 	db	50	;'2'
    94  00061B  30                 	db	48	;'0'
    95  00061C  0D                 	db	13
    96  00061D  0A                 	db	10
    97  00061E  00                 	db	0
    98  00061F                     STR_2:
    99  00061F  4C                 	db	76	;'L'
   100  000620  44                 	db	68	;'D'
   101  000621  31                 	db	49	;'1'
   102  000622  20                 	db	32
   103  000623  2D                 	db	45
   104  000624  20                 	db	32
   105  000625  41                 	db	65	;'A'
   106  000626  43                 	db	67	;'C'
   107  000627  45                 	db	69	;'E'
   108  000628  4E                 	db	78	;'N'
   109  000629  44                 	db	68	;'D'
   110  00062A  45                 	db	69	;'E'
   111  00062B  20                 	db	32
   112  00062C  4F                 	db	79	;'O'
   113  00062D  20                 	db	32
   114  00062E  4C                 	db	76	;'L'
   115  00062F  45                 	db	69	;'E'
   116  000630  44                 	db	68	;'D'
   117  000631  0D                 	db	13
   118  000632  0A                 	db	10
   119  000633  00                 	db	0
   120  000634                     STR_3:
   121  000634  44                 	db	68	;'D'
   122  000635  4C                 	db	76	;'L'
   123  000636  31                 	db	49	;'1'
   124  000637  20                 	db	32
   125  000638  2D                 	db	45
   126  000639  20                 	db	32
   127  00063A  41                 	db	65	;'A'
   128  00063B  50                 	db	80	;'P'
   129  00063C  41                 	db	65	;'A'
   130  00063D  47                 	db	71	;'G'
   131  00063E  41                 	db	65	;'A'
   132  00063F  20                 	db	32
   133  000640  4F                 	db	79	;'O'
   134  000641  20                 	db	32
   135  000642  4C                 	db	76	;'L'
   136  000643  45                 	db	69	;'E'
   137  000644  44                 	db	68	;'D'
   138  000645  0D                 	db	13
   139  000646  0A                 	db	10
   140  000647  00                 	db	0
   141  000648                     STR_5:
   142  000648  4C                 	db	76	;'L'
   143  000649  30                 	db	48	;'0'
   144  00064A  00                 	db	0
   145  00064B                     STR_4:
   146  00064B  4C                 	db	76	;'L'
   147  00064C  31                 	db	49	;'1'
   148  00064D  00                 	db	0
   149                           
   150                           ; #config settings
   151  00064E  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           	psect	cinit
   154  00078E                     __pcinit:
   155                           	opt callstack 0
   156  00078E                     start_initialization:
   157                           	opt callstack 0
   158  00078E                     __initialization:
   159                           	opt callstack 0
   160                           
   161                           ; Clear objects allocated to COMRAM (5 bytes)
   162  00078E  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   163  000790  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   164  000792  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   165  000794  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   166  000796  6A01               	clrf	__pbssCOMRAM& (0+255),c
   167  000798                     end_of_initialization:
   168                           	opt callstack 0
   169  000798                     __end_of__initialization:
   170                           	opt callstack 0
   171  000798  0E00               	movlw	low (__Lsmallconst shr (0+16))
   172  00079A  6EF8               	movwf	tblptru,c
   173  00079C  0E06               	movlw	high __Lsmallconst
   174  00079E  6EF7               	movwf	tblptrh,c
   175  0007A0  0100               	movlb	0
   176  0007A2  EF28  F003         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  000001                     __pbssCOMRAM:
   180                           	opt callstack 0
   181  000001                     _dado:
   182                           	opt callstack 0
   183  000001                     	ds	4
   184  000005                     _i:
   185                           	opt callstack 0
   186  000005                     	ds	1
   187                           
   188                           	psect	cstackCOMRAM
   189  000006                     __pcstackCOMRAM:
   190                           	opt callstack 0
   191  000006                     escreve_USART@c:
   192                           	opt callstack 0
   193                           
   194                           ; 1 bytes @ 0x0
   195  000006                     	ds	1
   196  000007                     string_USART@str:
   197                           	opt callstack 0
   198                           
   199                           ; 2 bytes @ 0x1
   200  000007                     	ds	2
   201  000009                     
   202                           ; 1 bytes @ 0x3
   203  000009                     	ds	1
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 16 in file "EX23.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   224 ;;      Params:         0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0
   226 ;;      Temps:          1       0       0       0       0       0       0
   227 ;;      Totals:         1       0       0       0       0       0       0
   228 ;;Total ram usage:        1 bytes
   229 ;; Hardware stack levels required when called:    2
   230 ;; This function calls:
   231 ;;		_USART_le
   232 ;;		_init_USART
   233 ;;		_string_USART
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240  000650                     __ptext0:
   241                           	opt callstack 0
   242  000650                     _main:
   243                           	opt callstack 29
   244  000650                     
   245                           ;EX23.c: 18:     ADCON1 = 0x0F;
   246  000650  0E0F               	movlw	15
   247  000652  6EC1               	movwf	193,c	;volatile
   248  000654                     
   249                           ;EX23.c: 19:     TRISBbits.TRISB0 = 0;
   250  000654  9093               	bcf	147,0,c	;volatile
   251  000656                     
   252                           ;EX23.c: 20:     PORTBbits.RB0 = 0;
   253  000656  9081               	bcf	129,0,c	;volatile
   254  000658                     
   255                           ;EX23.c: 22:     init_USART();
   256  000658  ECDE  F003         	call	_init_USART	;wreg free
   257  00065C                     
   258                           ;EX23.c: 24:     string_USART("Microcontrolador PIC18F4520\r\n");
   259  00065C  0E01               	movlw	low STR_1
   260  00065E  6E07               	movwf	string_USART@str^0,c
   261  000660  0E06               	movlw	high STR_1
   262  000662  6E08               	movwf	(string_USART@str+1)^0,c
   263  000664  ECAC  F003         	call	_string_USART	;wreg free
   264  000668                     
   265                           ;EX23.c: 25:     string_USART("LD1 - ACENDE O LED\r\n");
   266  000668  0E1F               	movlw	low STR_2
   267  00066A  6E07               	movwf	string_USART@str^0,c
   268  00066C  0E06               	movlw	high STR_2
   269  00066E  6E08               	movwf	(string_USART@str+1)^0,c
   270  000670  ECAC  F003         	call	_string_USART	;wreg free
   271  000674                     
   272                           ;EX23.c: 26:     string_USART("DL1 - APAGA O LED\r\n");
   273  000674  0E34               	movlw	low STR_3
   274  000676  6E07               	movwf	string_USART@str^0,c
   275  000678  0E06               	movlw	high STR_3
   276  00067A  6E08               	movwf	(string_USART@str+1)^0,c
   277  00067C  ECAC  F003         	call	_string_USART	;wreg free
   278  000680                     l830:
   279                           
   280                           ;EX23.c: 29:     {;EX23.c: 30:       if (RCIF)
   281  000680  AA9E               	btfss	3998,5,c	;volatile
   282  000682  EF45  F003         	goto	u131
   283  000686  EF47  F003         	goto	u130
   284  00068A                     u131:
   285  00068A  EF40  F003         	goto	l830
   286  00068E                     u130:
   287  00068E                     
   288                           ;EX23.c: 32:       {;EX23.c: 33:         dado[i] = USART_le();
   289  00068E  0E01               	movlw	low _dado
   290  000690  2405               	addwf	_i^0,w,c
   291  000692  6ED9               	movwf	fsr2l,c
   292  000694  6ADA               	clrf	fsr2h,c
   293  000696  0E00               	movlw	high _dado
   294  000698  22DA               	addwfc	fsr2h,f,c
   295  00069A  ECE7  F003         	call	_USART_le	;wreg free
   296  00069E  6EDF               	movwf	indf2,c
   297  0006A0                     
   298                           ;EX23.c: 36:         if (dado[i] == 0x0D)
   299  0006A0  0E01               	movlw	low _dado
   300  0006A2  2405               	addwf	_i^0,w,c
   301  0006A4  6ED9               	movwf	fsr2l,c
   302  0006A6  6ADA               	clrf	fsr2h,c
   303  0006A8  0E00               	movlw	high _dado
   304  0006AA  22DA               	addwfc	fsr2h,f,c
   305  0006AC  0E0D               	movlw	13
   306  0006AE  18DE               	xorwf	postinc2,w,c
   307  0006B0  A4D8               	btfss	status,2,c
   308  0006B2  EF5D  F003         	goto	u141
   309  0006B6  EF5F  F003         	goto	u140
   310  0006BA                     u141:
   311  0006BA  EFA7  F003         	goto	l858
   312  0006BE                     u140:
   313  0006BE                     
   314                           ;EX23.c: 37:         {;EX23.c: 39:             if (dado[0] == 'L' && dado[1] == 'D' && d
      +                          ado[2] == '1')
   315  0006BE  0E4C               	movlw	76
   316  0006C0  1801               	xorwf	_dado^0,w,c
   317  0006C2  A4D8               	btfss	status,2,c
   318  0006C4  EF66  F003         	goto	u151
   319  0006C8  EF68  F003         	goto	u150
   320  0006CC                     u151:
   321  0006CC  EF81  F003         	goto	l846
   322  0006D0                     u150:
   323  0006D0  0E44               	movlw	68
   324  0006D2  1802               	xorwf	(_dado+1)^0,w,c
   325  0006D4  A4D8               	btfss	status,2,c
   326  0006D6  EF6F  F003         	goto	u161
   327  0006DA  EF71  F003         	goto	u160
   328  0006DE                     u161:
   329  0006DE  EF81  F003         	goto	l846
   330  0006E2                     u160:
   331  0006E2  0E31               	movlw	49
   332  0006E4  1803               	xorwf	(_dado+2)^0,w,c
   333  0006E6  A4D8               	btfss	status,2,c
   334  0006E8  EF78  F003         	goto	u171
   335  0006EC  EF7A  F003         	goto	u170
   336  0006F0                     u171:
   337  0006F0  EF81  F003         	goto	l846
   338  0006F4                     u170:
   339  0006F4                     
   340                           ;EX23.c: 40:             {;EX23.c: 41:                 PORTBbits.RB0 = 1;
   341  0006F4  8081               	bsf	129,0,c	;volatile
   342  0006F6                     
   343                           ;EX23.c: 42:                 string_USART("L1");
   344  0006F6  0E4B               	movlw	low STR_4
   345  0006F8  6E07               	movwf	string_USART@str^0,c
   346  0006FA  0E06               	movlw	high STR_4
   347  0006FC  6E08               	movwf	(string_USART@str+1)^0,c
   348  0006FE  ECAC  F003         	call	_string_USART	;wreg free
   349  000702                     l846:
   350                           
   351                           ;EX23.c: 46:             if (dado[0] == 'D' && dado[1] == 'L' && dado[2] == '1')
   352  000702  0E44               	movlw	68
   353  000704  1801               	xorwf	_dado^0,w,c
   354  000706  A4D8               	btfss	status,2,c
   355  000708  EF88  F003         	goto	u181
   356  00070C  EF8A  F003         	goto	u180
   357  000710                     u181:
   358  000710  EFA3  F003         	goto	l856
   359  000714                     u180:
   360  000714  0E4C               	movlw	76
   361  000716  1802               	xorwf	(_dado+1)^0,w,c
   362  000718  A4D8               	btfss	status,2,c
   363  00071A  EF91  F003         	goto	u191
   364  00071E  EF93  F003         	goto	u190
   365  000722                     u191:
   366  000722  EFA3  F003         	goto	l856
   367  000726                     u190:
   368  000726  0E31               	movlw	49
   369  000728  1803               	xorwf	(_dado+2)^0,w,c
   370  00072A  A4D8               	btfss	status,2,c
   371  00072C  EF9A  F003         	goto	u201
   372  000730  EF9C  F003         	goto	u200
   373  000734                     u201:
   374  000734  EFA3  F003         	goto	l856
   375  000738                     u200:
   376  000738                     
   377                           ;EX23.c: 47:             {;EX23.c: 48:                 PORTBbits.RB0 = 0;
   378  000738  9081               	bcf	129,0,c	;volatile
   379  00073A                     
   380                           ;EX23.c: 49:                 string_USART("L0");
   381  00073A  0E48               	movlw	low STR_5
   382  00073C  6E07               	movwf	string_USART@str^0,c
   383  00073E  0E06               	movlw	high STR_5
   384  000740  6E08               	movwf	(string_USART@str+1)^0,c
   385  000742  ECAC  F003         	call	_string_USART	;wreg free
   386  000746                     l856:
   387                           
   388                           ;EX23.c: 52:          i = 0;
   389  000746  0E00               	movlw	0
   390  000748  6E05               	movwf	_i^0,c
   391                           
   392                           ;EX23.c: 53:         }
   393  00074A  EF40  F003         	goto	l830
   394  00074E                     l858:
   395  00074E  2A05               	incf	_i^0,f,c
   396  000750  EF40  F003         	goto	l830
   397  000754  EF00  F000         	goto	start
   398  000758                     __end_of_main:
   399                           	opt callstack 0
   400                           
   401 ;; *************** function _string_USART *****************
   402 ;; Defined at:
   403 ;;		line 79 in file "EX23.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  str             2    1[COMRAM] PTR unsigned char 
   406 ;;		 -> STR_5(3), STR_4(3), STR_3(20), STR_2(21), 
   407 ;;		 -> STR_1(30), 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         2       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    1
   426 ;; This function calls:
   427 ;;		_escreve_USART
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text1
   434  000758                     __ptext1:
   435                           	opt callstack 0
   436  000758                     _string_USART:
   437                           	opt callstack 29
   438  000758                     
   439                           ;EX23.c: 79: void string_USART(char *str);EX23.c: 80: {;EX23.c: 81:   while(*str != '\0'
      +                          )
   440  000758  EFB8  F003         	goto	l814
   441  00075C                     l810:
   442                           
   443                           ;EX23.c: 82:   {;EX23.c: 83:       escreve_USART(*str);
   444  00075C  C007  FFF6         	movff	string_USART@str,tblptrl
   445  000760  C008  FFF7         	movff	string_USART@str+1,tblptrh
   446  000764                     	if	0	;tblptru may be non-zero
   447  000764                     	endif
   448  000764                     	if	0	;tblptru may be non-zero
   449  000764                     	endif
   450  000764  0008               	tblrd		*
   451  000766  50F5               	movf	tablat,w,c
   452  000768  ECD3  F003         	call	_escreve_USART
   453  00076C                     
   454                           ;EX23.c: 84:       str++;
   455  00076C  4A07               	infsnz	string_USART@str^0,f,c
   456  00076E  2A08               	incf	(string_USART@str+1)^0,f,c
   457  000770                     l814:
   458                           
   459                           ;EX23.c: 81:   while(*str != '\0')
   460  000770  C007  FFF6         	movff	string_USART@str,tblptrl
   461  000774  C008  FFF7         	movff	string_USART@str+1,tblptrh
   462  000778                     	if	0	;tblptru may be non-zero
   463  000778                     	endif
   464  000778                     	if	0	;tblptru may be non-zero
   465  000778                     	endif
   466  000778  0008               	tblrd		*
   467  00077A  50F5               	movf	tablat,w,c
   468  00077C  0900               	iorlw	0
   469  00077E  A4D8               	btfss	status,2,c
   470  000780  EFC4  F003         	goto	u121
   471  000784  EFC6  F003         	goto	u120
   472  000788                     u121:
   473  000788  EFAE  F003         	goto	l810
   474  00078C                     u120:
   475  00078C  0012               	return		;funcret
   476  00078E                     __end_of_string_USART:
   477                           	opt callstack 0
   478                           
   479 ;; *************** function _escreve_USART *****************
   480 ;; Defined at:
   481 ;;		line 73 in file "EX23.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  c               1    wreg     unsigned char 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  c               1    0[COMRAM] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         0       0       0       0       0       0       0
   496 ;;      Locals:         1       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0
   498 ;;      Totals:         1       0       0       0       0       0       0
   499 ;;Total ram usage:        1 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_string_USART
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509  0007A6                     __ptext2:
   510                           	opt callstack 0
   511  0007A6                     _escreve_USART:
   512                           	opt callstack 29
   513                           
   514                           ;incstack = 0
   515                           ;escreve_USART@c stored from wreg
   516  0007A6  6E06               	movwf	escreve_USART@c^0,c
   517  0007A8                     l51:
   518  0007A8  A2AC               	btfss	4012,1,c	;volatile
   519  0007AA  EFD9  F003         	goto	u11
   520  0007AE  EFDB  F003         	goto	u10
   521  0007B2                     u11:
   522  0007B2  EFD4  F003         	goto	l51
   523  0007B6                     u10:
   524  0007B6                     
   525                           ;EX23.c: 76:    TXREG = c;
   526  0007B6  C006  FFAD         	movff	escreve_USART@c,4013	;volatile
   527  0007BA  0012               	return		;funcret
   528  0007BC                     __end_of_escreve_USART:
   529                           	opt callstack 0
   530                           
   531 ;; *************** function _init_USART *****************
   532 ;; Defined at:
   533 ;;		line 60 in file "EX23.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   547 ;;      Params:         0       0       0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text3
   561  0007BC                     __ptext3:
   562                           	opt callstack 0
   563  0007BC                     _init_USART:
   564                           	opt callstack 30
   565  0007BC                     
   566                           ;EX23.c: 62:     TXSTAbits.TXEN = 1;
   567  0007BC  8AAC               	bsf	172,5,c	;volatile
   568                           
   569                           ;EX23.c: 63:     RCSTAbits.CREN = 1;
   570  0007BE  88AB               	bsf	171,4,c	;volatile
   571                           
   572                           ;EX23.c: 64:     TXSTAbits.SYNC = 0;
   573  0007C0  98AC               	bcf	172,4,c	;volatile
   574                           
   575                           ;EX23.c: 65:     RCSTAbits.SPEN = 1;
   576  0007C2  8EAB               	bsf	171,7,c	;volatile
   577                           
   578                           ;EX23.c: 67:     TXSTAbits.BRGH = 0;
   579  0007C4  94AC               	bcf	172,2,c	;volatile
   580                           
   581                           ;EX23.c: 68:     BAUDCTLbits.BRG16 = 0;
   582  0007C6  96B8               	bcf	184,3,c	;volatile
   583  0007C8                     
   584                           ;EX23.c: 70:     SPBRG = 12;
   585  0007C8  0E0C               	movlw	12
   586  0007CA  6EAF               	movwf	175,c	;volatile
   587  0007CC  0012               	return		;funcret
   588  0007CE                     __end_of_init_USART:
   589                           	opt callstack 0
   590                           
   591 ;; *************** function _USART_le *****************
   592 ;; Defined at:
   593 ;;		line 88 in file "EX23.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      unsigned char 
   600 ;; Registers used:
   601 ;;		wreg, status,2
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   607 ;;      Params:         0       0       0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text4
   621  0007CE                     __ptext4:
   622                           	opt callstack 0
   623  0007CE                     _USART_le:
   624                           	opt callstack 30
   625  0007CE                     l63:
   626  0007CE  AA9E               	btfss	3998,5,c	;volatile
   627  0007D0  EFEC  F003         	goto	u31
   628  0007D4  EFEE  F003         	goto	u30
   629  0007D8                     u31:
   630  0007D8  EFE7  F003         	goto	l63
   631  0007DC                     u30:
   632  0007DC                     
   633                           ;EX23.c: 91:     return RCREG;
   634  0007DC  50AE               	movf	174,w,c	;volatile
   635  0007DE  0012               	return		;funcret
   636  0007E0                     __end_of_USART_le:
   637                           	opt callstack 0
   638                           
   639                           	psect	rparam
   640  0000                     tosu	equ	0xFFF
   641                           tosh	equ	0xFFE
   642                           tosl	equ	0xFFD
   643                           stkptr	equ	0xFFC
   644                           pclatu	equ	0xFFB
   645                           pclath	equ	0xFFA
   646                           pcl	equ	0xFF9
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           prodh	equ	0xFF4
   652                           prodl	equ	0xFF3
   653                           indf0	equ	0xFEF
   654                           postinc0	equ	0xFEE
   655                           postdec0	equ	0xFED
   656                           preinc0	equ	0xFEC
   657                           plusw0	equ	0xFEB
   658                           fsr0h	equ	0xFEA
   659                           fsr0l	equ	0xFE9
   660                           wreg	equ	0xFE8
   661                           indf1	equ	0xFE7
   662                           postinc1	equ	0xFE6
   663                           postdec1	equ	0xFE5
   664                           preinc1	equ	0xFE4
   665                           plusw1	equ	0xFE3
   666                           fsr1h	equ	0xFE2
   667                           fsr1l	equ	0xFE1
   668                           bsr	equ	0xFE0
   669                           indf2	equ	0xFDF
   670                           postinc2	equ	0xFDE
   671                           postdec2	equ	0xFDD
   672                           preinc2	equ	0xFDC
   673                           plusw2	equ	0xFDB
   674                           fsr2h	equ	0xFDA
   675                           fsr2l	equ	0xFD9
   676                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       9
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    string_USART@str	PTR unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[20]), STR_2(CODE[21]), 
		 -> STR_1(CODE[30]), 


Critical Paths under _main in COMRAM

    _main->_string_USART
    _string_USART->_escreve_USART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     440
                                              3 COMRAM     1     1      0
                           _USART_le
                         _init_USART
                       _string_USART
 ---------------------------------------------------------------------------------
 (1) _string_USART                                         2     0      2     440
                                              1 COMRAM     2     0      2
                      _escreve_USART
 ---------------------------------------------------------------------------------
 (2) _escreve_USART                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_le                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_le
   _init_USART
   _string_USART
     _escreve_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      4       9       1        7.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      15        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 07 18:37:10 2019

                      _i 0005                       l51 07A8                       l60 078C  
                     l54 07BA                       l63 07CE                       l48 07CC  
                     l66 07DE                       u10 07B6                       u11 07B2  
                     u30 07DC                       u31 07D8              __CFG_BORV$3 000000  
 __size_of_escreve_USART 0016             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l810 075C                      l812 076C                      l820 0656  
                    l742 07A8                      l814 0770                      l830 0680  
                    l822 0658                      l760 07DC                      l744 07B6  
                    l808 0758                      l840 06E2                      l832 068E  
                    l824 065C                      l816 0650                      l746 07BC  
                    l850 0726                      l842 06F4                      l834 06A0  
                    l826 0668                      l818 0654                      l748 07C8  
                    l852 0738                      l844 06F6                      l836 06BE  
                    l828 0674                      l758 07CE                      l854 073A  
                    l838 06D0                      l846 0702                      l848 0714  
                    l856 0746                      l858 074E             __CFG_CPB$OFF 000000  
                    u120 078C                      u200 0738                      u121 0788  
                    u201 0734                      u130 068E                      u131 068A  
                    u140 06BE                      u141 06BA                      u150 06D0  
                    u151 06CC                      u160 06E2                      u161 06DE  
                    u170 06F4                      u171 06F0                      u180 0714  
                    u181 0710                      u190 0726                      u191 0722  
           __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   STR_1 0601                     STR_2 061F                     STR_3 0634  
                   STR_4 064B                     STR_5 0648                     _RCIF 007CF5  
                   _TRMT 007D61             __CFG_PWRT$ON 000000                     _dado 0001  
                   _main 0650                     indf2 000FDF                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000    __size_of_string_USART 0036                    ?_main 0006  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000         __end_of_USART_le 07E0           __CFG_BOREN$OFF 000000  
                  tablat 000FF5            _escreve_USART 07A6                    status 000FD8  
        __initialization 078E             _string_USART 0758             __end_of_main 0758  
                 ??_main 0009            __activetblptr 000001                   _ADCON1 000FC1  
         ?_escreve_USART 0006           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
        string_USART@str 0007             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0798          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0006                ?_USART_le 0006          ??_escreve_USART 0006  
             ??_USART_le 0006                  __Hparam 0000                  __Lparam 0000  
             _init_USART 07BC             __psmallconst 0600                  __pcinit 078E  
                __ramtop 0600                  __ptext0 0650                  __ptext1 0758  
                __ptext2 07A6                  __ptext3 07BC                  __ptext4 07CE  
   end_of_initialization 0798                _RCSTAbits 000FAB                  postinc2 000FDE  
              _PORTBbits 000F81                _TRISBbits 000F93                _TXSTAbits 000FAC  
            ?_init_USART 0006              _BAUDCTLbits 000FB8        __size_of_USART_le 0012  
    start_initialization 078E         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001  
    __size_of_init_USART 0012    __end_of_escreve_USART 07BC            ?_string_USART 0007  
      __CFG_CCP2MX$PORTC 000000              __smallconst 0600           ??_string_USART 0009  
       __CFG_WDTPS$32768 000000                 _USART_le 07CE                 __Hrparam 0000  
           ??_init_USART 0006                 __Lrparam 0000             __Lsmallconst 0600  
     __end_of_init_USART 07CE            __size_of_main 0108     __end_of_string_USART 078E  
         escreve_USART@c 0006  
